created_by,created_date,deleted,description,job_id,json_content,lastmodifiedby,alias,lastmodifieddate,name,organization,type,version,tags,interfacetype,pipeline_metadata,is_template,is_app
"admin","2024-08-09 04:36:02.842000","\0","Anomaly Detection using AutoARIMA",NULL,"{""elements"":[{""id"":""hnnFx"",""alias"":""Detect Anomalies"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""PythonScript"",""requirements"":""pmdarima,statsmodels"",""params"":[],""script"":[""import importlib\\rimport pandas as pd\\rimport numpy as np\\rfrom pmdarima import auto_arima\\rfrom statsmodels.tsa.seasonal import seasonal_decompose\\r\\rdef detect_anomalies(group_data):\\r    # Fit ARIMA model\\r    model = auto_arima(group_data['Value'], seasonal=True, stepwise=True, suppress_warnings=True)\\r\\r    # Make predictions\\r    predictions = model.predict_in_sample()\\r    #print('PREDICTIONS',predictions)\\r\\r    # Calculate residuals\\r    residuals = group_data['Value'] - predictions\\r    Q1 = residuals.quantile(0.25)\\r    Q3 = residuals.quantile(0.75)\\r    IQR = Q3 - Q1\\r\\r    # Define bounds for anomalies\\r    lower_bound = Q1 - 1.5 * IQR\\r    upper_bound = Q3 + 1.5 * IQR\\r\\r    # Identify anomalies\\r    group_data['is_anomaly'] = ((residuals < lower_bound) | (residuals > upper_bound)).astype(int)\\r\\r    return group_data\\r\\rdef PythonScript(dataset):    #python-script Data\\r    \\r    df=pd.DataFrame(dataset)\\r    df['TIMESTAMP'] = pd.to_datetime(df['TIMESTAMP'])\\r    \\r    \\r    result = df.groupby(['ResourceGroup', 'CI_TYPE', 'Metric']).apply(detect_anomalies).reset_index(drop=True)\\r    result = result.to_dict('records')\\r    \\r    return result\\r\\r\\r""]},""position_x"":""224"",""position_y"":""162"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""albOL"",""elementPosition"":""LeftMiddle""},{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""cBfra"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:23"",""alias"":""Metric Dataset"",""id"":4317,""name"":""LEOSRVRD21817"",""description"":null,""schema"":null,""schemajsonnullattributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT ci_group.ci_group AS ResourceGroup, ci_type.name AS CI_TYPE,metrics.metric AS Metric ,\\\\n\\\\t DATE_ADD(metrics.TIMESTAMP ,INTERVAL DATEDIFF(CURRENT_DATE(),metrics.TIMESTAMP) DAY) AS TIMESTAMP, ROUND(metric_value +FLOOR(5 + RAND()*(10-5)) ,2) \\\\n AS Value FROM `cmdb_ci_metric` metrics  JOIN \\\\n\\\\tcmdb_ci ci_type ON metrics.ci_id=ci_type.id  \\\\n\\\\tJOIN cmdb_ci_group ci_group ON ci_type.CI_GROUP=ci_group.id \\\\n\\\\tWHERE ci_type.name='LEAP Job Executor' AND metrics.metric='CPU Utilization'\\\\n\\\\tORDER BY metrics.TIMESTAMP \\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""Headers\\"":\\""\\"",\\""defaultValues\\"":\\""\\"",\\""QueryParams\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:30:27"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enckDfVTiFdi6Iu1oW8yHsvdOLzMyf8zHjO\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""iS35XN8CpLB63k4ZWhkVr3QaBczVfeNWoXrQJuxsl8g83L0pg2HY4l2c4V3NMbBa2UivM62Pp5UZ/gffwPGPag=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-16 06:30:27"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""pPaPC"",""alias"":""Load Anomalies"",""name"":""Dataset Loader"",""classname"":""DatasetLoader"",""category"":""Loader"",""attributes"":{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:35:05"",""alias"":""Server Anomalies"",""id"":975,""name"":""LEOSRVRN70321"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""nullattributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""ciphertext\\"":\\""VdG9LiU4Zh9cC+TX0Ii+3EMBBMK/a3jYJayo0SIfdC/ODy7YThBqKE+uI0cLOSLheS8YREZIwCCQmvq1/t/6bxMXoQpywahcaiikgupb0ZdKTCf3kaT0ZOjfonO0xy8ZXg92VJImQ0k6LAIJlmpoeE1gk7EAERr0LwyhPgsXQRUcQ9LpCrHoR2jYYI7CVi7FkozfsiZPeOyO5CCi/VG+97IB/Rk/6fj9ilB0a6qUIste8X99oBsR3GpmDbWvru9vHTZMhIVXOv7ZteOYeSDx7XRfl3xZhv5EkXIdmu8XZUhXN9vRDcUs5gNjqqlI1JtkAg==\\"",\\""Query\\"":\\""select * from @projectname_anomalies\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""iv\\"":\\""WkwZh+vxd+00QKHK\\"",\\""tableName\\"":\\""@projectname_anomalies\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:30:27"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enckDfVTiFdi6Iu1oW8yHsvdOLzMyf8zHjO\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""iS35XN8CpLB63k4ZWhkVr3QaBczVfeNWoXrQJuxsl8g83L0pg2HY4l2c4V3NMbBa2UivM62Pp5UZ/gffwPGPag=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-16 06:30:27"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},""position_x"":""870"",""position_y"":""162"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""apAgf"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[],""formats"":{""dataset"":""dropdown""},""codeGeneration"":{""REST"":{},""requirements"":[],""imports"":[""import importlib""],""MYSQL"":{},""MSSQL"":{},""AWS"":{},""POSTGRESQL"":{},""script"":""def DatasetLoader_<id>(dataset,dataset_param={}):\\r    datasetName = dataset_param.get('alias',dataset_param.get('name'))\\r    loadertype = dataset_param['datasource'].get('type','')\\r    if loadertype == '':\\r        logger.error('Datasource Type mapping not found. Validate Dataset Loader datasource mapping')\\r    logger.info('Loading Dataset - {0} of type {1}'.format(datasetName, loadertype))\\r    datasetAttributes = dataset_param['attributes']\\r    if type(datasetAttributes) is str:\\r        datasetAttributes = json.loads(datasetAttributes)\\r    datasource = dataset_param['datasource']\\r    datasourceAttributes = json.loads(datasource['connectionDetails'])\\r    datasourceAttributes['salt'] = datasource.get('salt', '')\\r    datasetAttributes['schema'] = dataset_param.get('schema','')\\r    datasetAttributes['applySchema'] = False\\r    for item in datasourceAttributes.keys():\\r        if '_vault' not in item:\\r            from leaputils import Vault\\r            try:\\r                isvault=datasourceAttributes[item+'_vault']\\r                if isvault:\\r                    value = Vault.getPassword(datasourceAttributes[item])\\r                    datasourceAttributes[item] = value\\r            except:\\r                a=1\\r    loader = ''\\r    import importlib.util\\r    # load from plugins path\\r    EXTRA_PLUGINS_PATH = os.environ.get('EXTRA_PLUGINS_PATH','')\\r    if not os.path.exists(EXTRA_PLUGINS_PATH) or EXTRA_PLUGINS_PATH =='':\\r        EXTRA_PLUGINS_PATH = '/root/plugins'\\r        logger.error('EXTRA_PLUGINS_PATH not a valid Path. Please update icip.environment - EXTRA_PLUGINS_PATH constant')\\r    file_path = os.path.join(EXTRA_PLUGINS_PATH, 'loaders', f'{loadertype}.py')\\r    print('FilePath', file_path)\\r    \\r    spec = importlib.util.spec_from_file_location('Loader', file_path)\\r    module = importlib.util.module_from_spec(spec)\\r    sys.modules['Loader'] = module\\r    spec.loader.exec_module(module)\\r    class_name = loadertype  # ask user - className\\r    loader = getattr(module, class_name)\\r    loader = loader(datasourceAttributes, datasetAttributes)\\r    if loader == '':\\r        logger.error('No loader configured for type {0}'.format(loadertype))\\r    \\r    loader.loadData(dataset)\\r    print('Data Saved')\\r\\n""},""context"":[{""FunctionName"":""generate_alert"",""requirements"":"""",""params"":[{""name"":""tickets_table"",""value"":""leo1311_tickets"",""type"":""Text"",""alias"":""leo1311_tickets"",""index"":""1""}],""script"":[""import mysql.connector\\rfrom urllib.parse import urlparse\\rfrom leaputils import Vault\\rfrom leaputils import Security\\rimport random\\rfrom datetime import datetime, date\\rimport time\\rdef get_db_connection(connection_attributes):\\r    connectionDetails = json.loads(connection_attributes['connectionDetails'])\\r    salt= connection_attributes['salt']\\r    username= connectionDetails['userName']\\r    password=Security.decrypt(connectionDetails['password'],salt)\\r    url=connectionDetails['url']\\r    host = urlparse(url[5:]).hostname\\r    port =urlparse(url[5:]).port\\r    database = urlparse(url[5:]).path.rsplit('/', 1)[1]\\r    connection = mysql.connector.connect(user=username, password=password, host=host, database=database, port = port)\\r    return connection\\r    \\rdef generate_alert( results,connection_attributes,tickets_table_param):    #python-script Data \\r    # anomaly_df = df_results[(df_results['is_anomaly'] == 1) & (~df_results['cmdb_sys_id'].isna()) & (df_results['CI_TYPE']=='LEAP Job Executor') & (df_results['Metric']=='CPU Utilization') ]\\r    result_list = []\\r    anomaly_detected = False\\r    # print(anomaly_df)\\r    for row in results:\\r        if row['is_anomaly'] ==1:\\r            anomaly_detected = True\\r            alert_id = f\\""ALRT{random.randint(10000, 99999)}\\""\\r            incident = {\\r                    'number': alert_id,\\r                    'shortdescription': f\\""Anomaly Detected for : {row['CI_TYPE']}, {row['Metric']} is {row['Value']}\\"",\\r                    'description': f\\""Anomaly detected for {row['CI_TYPE']} : Metric Name {row['Metric']}\\"",\\r                    'priority': '3-medium',\\r                    'state': 'Open',\\r                    'source':'Leap',\\r                    'sysId': row['cmdb_sys_id'],\\r                    'severity':'Medium',\\r                    'configurationItem': row['CI_TYPE'],\\r                    'cmdb_ci_sys_id' : row['cmdb_sys_id'],\\r                    'createdDate': datetime.now().strftime(\\""%Y-%m-%d %H:%M:%S\\""),\\r                    'taskType': 'Alerts',\\r                    'type':'Alerts'\\r                }\\r            result_list.append(incident)\\r            row['ticket_id'] = alert_id\\r        else:\\r            row['ticket_id'] = ''\\r    # Print the result (you can modify this part based on what you want to do with the result)\\r    result_df = pd.DataFrame(result_list)\\r    result_df = result_df.drop_duplicates()\\r    print(result_df)\\r    cnx = get_db_connection(connection_attributes)\\r    cursor = cnx.cursor()\\r    table_name = tickets_table_param\\r    placeholders = \\"", \\"".join([\\""%s\\""] * len(result_df.columns))\\r    insert_query = f\\""INSERT INTO {table_name} ({', '.join(result_df.columns)}) VALUES ({placeholders})\\""\\r    # Convert DataFrame to list of tuples\\r    values = [tuple(row) for row in result_df.values]\\r\\r    try:\\r        \\r        cursor.executemany(insert_query, values)\\r        cnx.commit()\\r        print('Alert Generated!')\\r    except:\\r        print('Error in generating Alert')\\r    if anomaly_detected == True:\\r        import requests\\r        url = \\""https://leap2:7000/api/aip/event/trigger/createIncident?org=leo1311&corelid=&datasourceName=LEALCLCL12132\\""\\r        headers = {'authorization':'Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJVU0VSX1JPTEUiLCJleHAiOjE3MjkyNDMwMDB9.aisbrOp1L0dWgfYni51lQd1DgOUX3WxMvKjEJo2XHYjScNVdKqepN4zsgyjTIbQu6mmHJ9FwSGRrshw6b1fuNw','project':'2','projectname':'leo1311','roleid':'1','rolename':'IT Portfolio Manager'}\\r        payload = {\\""environment\\"":[{\\""key\\"":\\""incidentPayload\\"",\\""value\\"":json.dumps({\\""short_description\\"": \\""CPU Utilization is high\\"", \\""priority\\"": \\""5\\"", \\""state\\"": \\""1\\"", \\""configurationitem\\"":{\\""systemId\\"":\\""60e2f0c58764ca50a79462ce8bbb35e9\\""}})}]}\\r        response = requests.request(\\""POST\\"", url,headers=headers, data=json.dumps(payload),verify=False)\\r        print(\\""response\\"",response.status_code)\\r    return results""]},{""FunctionName"":""map_cmdb_ci"",""requirements"":""pmdarima"",""params"":[],""script"":[""def map_cmdb_ci( anomaly_data, cmdb_ci):    #python-script Data\\r    results = []\\r    for data in anomaly_data:\\r        CI_TYPE = data['CI_TYPE']\\r        \\r        # Initialize cmdb_sys_id to None\\r        data['cmdb_sys_id'] = None\\r        \\r        for row in cmdb_ci:\\r            if row['ci_name'] == CI_TYPE:\\r                data['cmdb_sys_id'] = row['cmdb_ci_sys_id']\\r                break  # Exit the loop once a match is found \\r        results.append(data)\\r    return results""]},{""FunctionName"":""PythonScript"",""requirements"":""pmdarima,statsmodels"",""params"":[],""script"":[""import importlib\\rimport pandas as pd\\rimport numpy as np\\rfrom pmdarima import auto_arima\\rfrom statsmodels.tsa.seasonal import seasonal_decompose\\r\\rdef detect_anomalies(group_data):\\r    # Fit ARIMA model\\r    model = auto_arima(group_data['Value'], seasonal=True, stepwise=True, suppress_warnings=True)\\r\\r    # Make predictions\\r    predictions = model.predict_in_sample()\\r    #print('PREDICTIONS',predictions)\\r\\r    # Calculate residuals\\r    residuals = group_data['Value'] - predictions\\r    Q1 = residuals.quantile(0.25)\\r    Q3 = residuals.quantile(0.75)\\r    IQR = Q3 - Q1\\r\\r    # Define bounds for anomalies\\r    lower_bound = Q1 - 1.5 * IQR\\r    upper_bound = Q3 + 1.5 * IQR\\r\\r    # Identify anomalies\\r    group_data['is_anomaly'] = ((residuals < lower_bound) | (residuals > upper_bound)).astype(int)\\r\\r    return group_data\\r\\rdef PythonScript(dataset):    #python-script Data\\r    \\r    df=pd.DataFrame(dataset)\\r    df['TIMESTAMP'] = pd.to_datetime(df['TIMESTAMP'])\\r    \\r    \\r    result = df.groupby(['ResourceGroup', 'CI_TYPE', 'Metric']).apply(detect_anomalies).reset_index(drop=True)\\r    result = result.to_dict('records')\\r    \\r    return result\\r\\r\\r""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:23"",""alias"":""Metric Dataset"",""id"":4317,""name"":""LEOSRVRD21817"",""description"":null,""schema"":null,""schemajsonnullattributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT ci_group.ci_group AS ResourceGroup, ci_type.name AS CI_TYPE,metrics.metric AS Metric ,\\\\n\\\\t DATE_ADD(metrics.TIMESTAMP ,INTERVAL DATEDIFF(CURRENT_DATE(),metrics.TIMESTAMP) DAY) AS TIMESTAMP, ROUND(metric_value +FLOOR(5 + RAND()*(10-5)) ,2) \\\\n AS Value FROM `cmdb_ci_metric` metrics  JOIN \\\\n\\\\tcmdb_ci ci_type ON metrics.ci_id=ci_type.id  \\\\n\\\\tJOIN cmdb_ci_group ci_group ON ci_type.CI_GROUP=ci_group.id \\\\n\\\\tWHERE ci_type.name='LEAP Job Executor' AND metrics.metric='CPU Utilization'\\\\n\\\\tORDER BY metrics.TIMESTAMP \\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""Headers\\"":\\""\\"",\\""defaultValues\\"":\\""\\"",\\""QueryParams\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:30:27"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enckDfVTiFdi6Iu1oW8yHsvdOLzMyf8zHjO\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""iS35XN8CpLB63k4ZWhkVr3QaBczVfeNWoXrQJuxsl8g83L0pg2HY4l2c4V3NMbBa2UivM62Pp5UZ/gffwPGPag=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-16 06:30:27"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:57"",""alias"":""CI Mapiings"",""id"":38847,""name"":""LEOCMPNG66441"",""description"":null,""schema"":null,""schemajson"":""null"",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT `ci_name`,`cmdb_ci_sys_id` FROM `cfm_configuration_item` WHERE `ctype` IN(\\\\nSELECT id FROM `cfm_configuration_item_type` WHERE project_id =2)\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:44"",""alias"":""CMDB"",""id"":31,""name"":""LEOCMDBT85788"",""description"":"""",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""encXcJ4QjAr9Kd5K4m6LGvRjuckw7PIIYU/\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.191.31.130:3307/leap2_7000_master\\""}"",""salt"":""Jjr3L9APIJyyou0682SV9Filqiq6X/7e8xS4wqggnIlRSvPEawoSGpU/8ePx/cY8wWK+bXc1nXb8glv6OW5C1g=="",""organization"":""leo1311"",""dshashcode"":""6666419f2b7701f9300ed7471f5b06349640b049b8309f4a9887dae53bbb0aaf"",""activetime"":""2024-10-16 06:34:43"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":null,""forruntime"":null,""foradapter"":null,""formodel"":null,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:30:27"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enckDfVTiFdi6Iu1oW8yHsvdOLzMyf8zHjO\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""iS35XN8CpLB63k4ZWhkVr3QaBczVfeNWoXrQJuxsl8g83L0pg2HY4l2c4V3NMbBa2UivM62Pp5UZ/gffwPGPag=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-16 06:30:27"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false}}]},{""id"":""apAgf"",""alias"":""Generate Alerts"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""generate_alert"",""requirements"":"""",""params"":[{""name"":""tickets_table"",""value"":""leo1311_tickets"",""type"":""Text"",""alias"":""leo1311_tickets"",""index"":""1""}],""script"":[""import mysql.connector\\rfrom urllib.parse import urlparse\\rfrom leaputils import Vault\\rfrom leaputils import Security\\rimport random\\rfrom datetime import datetime, date\\rimport time\\rdef get_db_connection(connection_attributes):\\r    connectionDetails = json.loads(connection_attributes['connectionDetails'])\\r    salt= connection_attributes['salt']\\r    username= connectionDetails['userName']\\r    password=Security.decrypt(connectionDetails['password'],salt)\\r    url=connectionDetails['url']\\r    host = urlparse(url[5:]).hostname\\r    port =urlparse(url[5:]).port\\r    database = urlparse(url[5:]).path.rsplit('/', 1)[1]\\r    connection = mysql.connector.connect(user=username, password=password, host=host, database=database, port = port)\\r    return connection\\r    \\rdef generate_alert( results,connection_attributes,tickets_table_param):    #python-script Data \\r    # anomaly_df = df_results[(df_results['is_anomaly'] == 1) & (~df_results['cmdb_sys_id'].isna()) & (df_results['CI_TYPE']=='LEAP Job Executor') & (df_results['Metric']=='CPU Utilization') ]\\r    result_list = []\\r    anomaly_detected = False\\r    # print(anomaly_df)\\r    for row in results:\\r        if row['is_anomaly'] ==1:\\r            anomaly_detected = True\\r            alert_id = f\\""ALRT{random.randint(10000, 99999)}\\""\\r            incident = {\\r                    'number': alert_id,\\r                    'shortdescription': f\\""Anomaly Detected for : {row['CI_TYPE']}, {row['Metric']} is {row['Value']}\\"",\\r                    'description': f\\""Anomaly detected for {row['CI_TYPE']} : Metric Name {row['Metric']}\\"",\\r                    'priority': '3-medium',\\r                    'state': 'Open',\\r                    'source':'Leap',\\r                    'sysId': row['cmdb_sys_id'],\\r                    'severity':'Medium',\\r                    'configurationItem': row['CI_TYPE'],\\r                    'cmdb_ci_sys_id' : row['cmdb_sys_id'],\\r                    'createdDate': datetime.now().strftime(\\""%Y-%m-%d %H:%M:%S\\""),\\r                    'taskType': 'Alerts',\\r                    'type':'Alerts'\\r                }\\r            result_list.append(incident)\\r            row['ticket_id'] = alert_id\\r        else:\\r            row['ticket_id'] = ''\\r    # Print the result (you can modify this part based on what you want to do with the result)\\r    result_df = pd.DataFrame(result_list)\\r    result_df = result_df.drop_duplicates()\\r    print(result_df)\\r    cnx = get_db_connection(connection_attributes)\\r    cursor = cnx.cursor()\\r    table_name = tickets_table_param\\r    placeholders = \\"", \\"".join([\\""%s\\""] * len(result_df.columns))\\r    insert_query = f\\""INSERT INTO {table_name} ({', '.join(result_df.columns)}) VALUES ({placeholders})\\""\\r    # Convert DataFrame to list of tuples\\r    values = [tuple(row) for row in result_df.values]\\r\\r    try:\\r        \\r        cursor.executemany(insert_query, values)\\r        cnx.commit()\\r        print('Alert Generated!')\\r    except:\\r        print('Error in generating Alert')\\r    if anomaly_detected == True:\\r        import requests\\r        url = \\""https://leap2:7000/api/aip/event/trigger/createIncident?org=leo1311&corelid=&datasourceName=LEALCLCL12132\\""\\r        headers = {'authorization':'Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJVU0VSX1JPTEUiLCJleHAiOjE3MjkyNDMwMDB9.aisbrOp1L0dWgfYni51lQd1DgOUX3WxMvKjEJo2XHYjScNVdKqepN4zsgyjTIbQu6mmHJ9FwSGRrshw6b1fuNw','project':'2','projectname':'leo1311','roleid':'1','rolename':'IT Portfolio Manager'}\\r        payload = {\\""environment\\"":[{\\""key\\"":\\""incidentPayload\\"",\\""value\\"":json.dumps({\\""short_description\\"": \\""CPU Utilization is high\\"", \\""priority\\"": \\""5\\"", \\""state\\"": \\""1\\"", \\""configurationitem\\"":{\\""systemId\\"":\\""60e2f0c58764ca50a79462ce8bbb35e9\\""}})}]}\\r        response = requests.request(\\""POST\\"", url,headers=headers, data=json.dumps(payload),verify=False)\\r        print(\\""response\\"",response.status_code)\\r    return results""]},""position_x"":""656"",""position_y"":""162"",""connectors"":[{""type"":""source"",""endpoint"":""out1"",""position"":""RightMiddle"",""elementId"":""pPaPC"",""elementPosition"":""LeftMiddle""},{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""albOL"",""elementPosition"":""RightMiddle""},{""type"":""target"",""endpoint"":""dataset2"",""position"":""TopCenter"",""elementId"":""NefOa"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""map_cmdb_ci"",""requirements"":""pmdarima"",""params"":[],""script"":[""def map_cmdb_ci( anomaly_data, cmdb_ci):    #python-script Data\\r    results = []\\r    for data in anomaly_data:\\r        CI_TYPE = data['CI_TYPE']\\r        \\r        # Initialize cmdb_sys_id to None\\r        data['cmdb_sys_id'] = None\\r        \\r        for row in cmdb_ci:\\r            if row['ci_name'] == CI_TYPE:\\r                data['cmdb_sys_id'] = row['cmdb_ci_sys_id']\\r                break  # Exit the loop once a match is found \\r        results.append(data)\\r    return results""]},{""FunctionName"":""PythonScript"",""requirements"":""pmdarima,statsmodels"",""params"":[],""script"":[""import importlib\\rimport pandas as pd\\rimport numpy as np\\rfrom pmdarima import auto_arima\\rfrom statsmodels.tsa.seasonal import seasonal_decompose\\r\\rdef detect_anomalies(group_data):\\r    # Fit ARIMA model\\r    model = auto_arima(group_data['Value'], seasonal=True, stepwise=True, suppress_warnings=True)\\r\\r    # Make predictions\\r    predictions = model.predict_in_sample()\\r    #print('PREDICTIONS',predictions)\\r\\r    # Calculate residuals\\r    residuals = group_data['Value'] - predictions\\r    Q1 = residuals.quantile(0.25)\\r    Q3 = residuals.quantile(0.75)\\r    IQR = Q3 - Q1\\r\\r    # Define bounds for anomalies\\r    lower_bound = Q1 - 1.5 * IQR\\r    upper_bound = Q3 + 1.5 * IQR\\r\\r    # Identify anomalies\\r    group_data['is_anomaly'] = ((residuals < lower_bound) | (residuals > upper_bound)).astype(int)\\r\\r    return group_data\\r\\rdef PythonScript(dataset):    #python-script Data\\r    \\r    df=pd.DataFrame(dataset)\\r    df['TIMESTAMP'] = pd.to_datetime(df['TIMESTAMP'])\\r    \\r    \\r    result = df.groupby(['ResourceGroup', 'CI_TYPE', 'Metric']).apply(detect_anomalies).reset_index(drop=True)\\r    result = result.to_dict('records')\\r    \\r    return result\\r\\r\\r""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:23"",""alias"":""Metric Dataset"",""id"":4317,""name"":""LEOSRVRD21817"",""description"":null,""schema"":null,""schemajsonnullattributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT ci_group.ci_group AS ResourceGroup, ci_type.name AS CI_TYPE,metrics.metric AS Metric ,\\\\n\\\\t DATE_ADD(metrics.TIMESTAMP ,INTERVAL DATEDIFF(CURRENT_DATE(),metrics.TIMESTAMP) DAY) AS TIMESTAMP, ROUND(metric_value +FLOOR(5 + RAND()*(10-5)) ,2) \\\\n AS Value FROM `cmdb_ci_metric` metrics  JOIN \\\\n\\\\tcmdb_ci ci_type ON metrics.ci_id=ci_type.id  \\\\n\\\\tJOIN cmdb_ci_group ci_group ON ci_type.CI_GROUP=ci_group.id \\\\n\\\\tWHERE ci_type.name='LEAP Job Executor' AND metrics.metric='CPU Utilization'\\\\n\\\\tORDER BY metrics.TIMESTAMP \\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""Headers\\"":\\""\\"",\\""defaultValues\\"":\\""\\"",\\""QueryParams\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:30:27"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enckDfVTiFdi6Iu1oW8yHsvdOLzMyf8zHjO\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""iS35XN8CpLB63k4ZWhkVr3QaBczVfeNWoXrQJuxsl8g83L0pg2HY4l2c4V3NMbBa2UivM62Pp5UZ/gffwPGPag=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-16 06:30:27"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:57"",""alias"":""CI Mapiings"",""id"":38847,""name"":""LEOCMPNG66441"",""description"":null,""schema"":null,""schemajson"":""null"",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT `ci_name`,`cmdb_ci_sys_id` FROM `cfm_configuration_item` WHERE `ctype` IN(\\\\nSELECT id FROM `cfm_configuration_item_type` WHERE project_id =2)\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:44"",""alias"":""CMDB"",""id"":31,""name"":""LEOCMDBT85788"",""description"":"""",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""encXcJ4QjAr9Kd5K4m6LGvRjuckw7PIIYU/\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.191.31.130:3307/leap2_7000_master\\""}"",""salt"":""Jjr3L9APIJyyou0682SV9Filqiq6X/7e8xS4wqggnIlRSvPEawoSGpU/8ePx/cY8wWK+bXc1nXb8glv6OW5C1g=="",""organization"":""leo1311"",""dshashcode"":""6666419f2b7701f9300ed7471f5b06349640b049b8309f4a9887dae53bbb0aaf"",""activetime"":""2024-10-16 06:34:43"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":null,""forruntime"":null,""foradapter"":null,""formodel"":null,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:30:27"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enckDfVTiFdi6Iu1oW8yHsvdOLzMyf8zHjO\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""iS35XN8CpLB63k4ZWhkVr3QaBczVfeNWoXrQJuxsl8g83L0pg2HY4l2c4V3NMbBa2UivM62Pp5UZ/gffwPGPag=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-16 06:30:27"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false}}]},{""id"":""cBfra"",""alias"":""Server Data"",""name"":""Dataset Extractor"",""classname"":""DatasetExtractor"",""category"":""Extractor"",""attributes"":{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:23"",""alias"":""Metric Dataset"",""id"":4317,""name"":""LEOSRVRD21817"",""description"":null,""schema"":null,""schemajsonnullattributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT ci_group.ci_group AS ResourceGroup, ci_type.name AS CI_TYPE,metrics.metric AS Metric ,\\\\n\\\\t DATE_ADD(metrics.TIMESTAMP ,INTERVAL DATEDIFF(CURRENT_DATE(),metrics.TIMESTAMP) DAY) AS TIMESTAMP, ROUND(metric_value +FLOOR(5 + RAND()*(10-5)) ,2) \\\\n AS Value FROM `cmdb_ci_metric` metrics  JOIN \\\\n\\\\tcmdb_ci ci_type ON metrics.ci_id=ci_type.id  \\\\n\\\\tJOIN cmdb_ci_group ci_group ON ci_type.CI_GROUP=ci_group.id \\\\n\\\\tWHERE ci_type.name='LEAP Job Executor' AND metrics.metric='CPU Utilization'\\\\n\\\\tORDER BY metrics.TIMESTAMP \\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""Headers\\"":\\""\\"",\\""defaultValues\\"":\\""\\"",\\""QueryParams\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:30:27"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enckDfVTiFdi6Iu1oW8yHsvdOLzMyf8zHjO\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""iS35XN8CpLB63k4ZWhkVr3QaBczVfeNWoXrQJuxsl8g83L0pg2HY4l2c4V3NMbBa2UivM62Pp5UZ/gffwPGPag=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-16 06:30:27"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},""position_x"":""31"",""position_y"":""35"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""hnnFx"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""dataset"":[""dropdown""]},""codeGeneration"":{""REST"":{},""requirements"":[],""servicenow"":{},""imports"":[],""MYSQL"":{},""w"":{},""H2"":{},""MSSQL"":{},""AWS"":{},""POSTGRESQL"":{},""script"":""def DatasetExtractor_<id>(dataset_param={}):\\r    datasetName = dataset_param.get('alias',dataset_param.get('name'))\\r    extractortype = dataset_param['datasource'].get('type','')\\r    if extractortype == '':\\r        logger.error('Datasource Type mapping not found. Validate Dataset Extractor datasource mapping')\\r    logger.info('Extracting Dataset - {0} of type {1}'.format(datasetName, extractortype))\\r    datasetAttributes= dataset_param['attributes']\\r    if type(datasetAttributes) is str:\\r        datasetAttributes = json.loads(datasetAttributes)\\r    datasource = dataset_param['datasource']\\r    datasourceAttributes = json.loads(datasource['connectionDetails'])\\r    datasourceAttributes['salt'] = datasource.get('salt','')\\r    for item in datasourceAttributes.keys():\\r        if '_vault' not in item:\\r            from leaputils import Vault\\r            try:\\r                isvault=datasourceAttributes[item+'_vault']\\r                if isvault:\\r                    value = Vault.getPassword(datasourceAttributes[item+'_vault'])\\r                    datasourceAttributes[item] = value\\r            except:\\r                a=1\\r    datasetAttributes['schema'] = dataset_param.get('schema','')\\r    datasetAttributes['applySchema'] = False\\r\\r    extractor = ''\\r    import importlib.util\\r    #load from plugins path\\r    EXTRA_PLUGINS_PATH = os.environ.get('EXTRA_PLUGINS_PATH','')\\r    if not os.path.exists(EXTRA_PLUGINS_PATH) or EXTRA_PLUGINS_PATH =='':\\r        EXTRA_PLUGINS_PATH = '/root/plugins'\\r        logger.error('Please update environment variable - EXTRA_PLUGINS_PATH ')\\r    file_path = os.path.join(EXTRA_PLUGINS_PATH, 'extractors', f'{extractortype}.py')\\r    print('FilePath', file_path)\\r    \\r    spec = importlib.util.spec_from_file_location('Extractor', file_path)\\r    module = importlib.util.module_from_spec(spec)\\r    sys.modules['Extractor'] = module\\r    spec.loader.exec_module(module)\\r    class_name = extractortype  # ask user - className\\r    extractor = getattr(module, class_name)\\r    extractor = extractor(datasourceAttributes, datasetAttributes)\\r    if extractor == '':\\r        logger.error('No extractor configured for type {0}'.format(extractortype))\\r    dataset = extractor.getData()\\r    return dataset\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\n""},""context"":[]},{""id"":""albOL"",""alias"":""Python Script"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""map_cmdb_ci"",""requirements"":""pmdarima"",""params"":[],""script"":[""def map_cmdb_ci( anomaly_data, cmdb_ci):    #python-script Data\\r    results = []\\r    for data in anomaly_data:\\r        CI_TYPE = data['CI_TYPE']\\r        \\r        # Initialize cmdb_sys_id to None\\r        data['cmdb_sys_id'] = None\\r        \\r        for row in cmdb_ci:\\r            if row['ci_name'] == CI_TYPE:\\r                data['cmdb_sys_id'] = row['cmdb_ci_sys_id']\\r                break  # Exit the loop once a match is found \\r        results.append(data)\\r    return results""]},""position_x"":""441"",""position_y"":""162"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""hnnFx"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out1"",""position"":""RightMiddle"",""elementId"":""apAgf"",""elementPosition"":""LeftMiddle""},{""type"":""target"",""endpoint"":""dataset2"",""position"":""TopCenter"",""elementId"":""sADVK"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""PythonScript"",""requirements"":""pmdarima,statsmodels"",""params"":[],""script"":[""import importlib\\rimport pandas as pd\\rimport numpy as np\\rfrom pmdarima import auto_arima\\rfrom statsmodels.tsa.seasonal import seasonal_decompose\\r\\rdef detect_anomalies(group_data):\\r    # Fit ARIMA model\\r    model = auto_arima(group_data['Value'], seasonal=True, stepwise=True, suppress_warnings=True)\\r\\r    # Make predictions\\r    predictions = model.predict_in_sample()\\r    #print('PREDICTIONS',predictions)\\r\\r    # Calculate residuals\\r    residuals = group_data['Value'] - predictions\\r    Q1 = residuals.quantile(0.25)\\r    Q3 = residuals.quantile(0.75)\\r    IQR = Q3 - Q1\\r\\r    # Define bounds for anomalies\\r    lower_bound = Q1 - 1.5 * IQR\\r    upper_bound = Q3 + 1.5 * IQR\\r\\r    # Identify anomalies\\r    group_data['is_anomaly'] = ((residuals < lower_bound) | (residuals > upper_bound)).astype(int)\\r\\r    return group_data\\r\\rdef PythonScript(dataset):    #python-script Data\\r    \\r    df=pd.DataFrame(dataset)\\r    df['TIMESTAMP'] = pd.to_datetime(df['TIMESTAMP'])\\r    \\r    \\r    result = df.groupby(['ResourceGroup', 'CI_TYPE', 'Metric']).apply(detect_anomalies).reset_index(drop=True)\\r    result = result.to_dict('records')\\r    \\r    return result\\r\\r\\r""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:23"",""alias"":""Metric Dataset"",""id"":4317,""name"":""LEOSRVRD21817"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""nullattributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT ci_group.ci_group AS ResourceGroup, ci_type.name AS CI_TYPE,metrics.metric AS Metric ,\\\\n\\\\t DATE_ADD(metrics.TIMESTAMP ,INTERVAL DATEDIFF(CURRENT_DATE(),metrics.TIMESTAMP) DAY) AS TIMESTAMP, ROUND(metric_value +FLOOR(5 + RAND()*(10-5)) ,2) \\\\n AS Value FROM `cmdb_ci_metric` metrics  JOIN \\\\n\\\\tcmdb_ci ci_type ON metrics.ci_id=ci_type.id  \\\\n\\\\tJOIN cmdb_ci_group ci_group ON ci_type.CI_GROUP=ci_group.id \\\\n\\\\tWHERE ci_type.name='LEAP Job Executor' AND metrics.metric='CPU Utilization'\\\\n\\\\tORDER BY metrics.TIMESTAMP \\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""Headers\\"":\\""\\"",\\""defaultValues\\"":\\""\\"",\\""QueryParams\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:30:27"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enckDfVTiFdi6Iu1oW8yHsvdOLzMyf8zHjO\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""iS35XN8CpLB63k4ZWhkVr3QaBczVfeNWoXrQJuxsl8g83L0pg2HY4l2c4V3NMbBa2UivM62Pp5UZ/gffwPGPag=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-16 06:30:27"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:57"",""alias"":""CI Mapiings"",""id"":38847,""name"":""LEOCMPNG66441"",""description"":null,""schema"":null,""schemajson"":""null"",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT `ci_name`,`cmdb_ci_sys_id` FROM `cfm_configuration_item` WHERE `ctype` IN(\\\\nSELECT id FROM `cfm_configuration_item_type` WHERE project_id =2)\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:44"",""alias"":""CMDB"",""id"":31,""name"":""LEOCMDBT85788"",""description"":"""",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""encXcJ4QjAr9Kd5K4m6LGvRjuckw7PIIYU/\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.191.31.130:3307/leap2_7000_master\\""}"",""salt"":""Jjr3L9APIJyyou0682SV9Filqiq6X/7e8xS4wqggnIlRSvPEawoSGpU/8ePx/cY8wWK+bXc1nXb8glv6OW5C1g=="",""organization"":""leo1311"",""dshashcode"":""6666419f2b7701f9300ed7471f5b06349640b049b8309f4a9887dae53bbb0aaf"",""activetime"":""2024-10-16 06:34:43"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":null,""forruntime"":null,""foradapter"":null,""formodel"":null,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""sADVK"",""alias"":""CI Mappings"",""name"":""Dataset Extractor"",""classname"":""DatasetExtractor"",""category"":""Extractor"",""attributes"":{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:57"",""alias"":""CI Mapiings"",""id"":38847,""name"":""LEOCMPNG66441"",""description"":null,""schema"":null,""schemajson"":""null"",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT `ci_name`,`cmdb_ci_sys_id` FROM `cfm_configuration_item` WHERE `ctype` IN(\\\\nSELECT id FROM `cfm_configuration_item_type` WHERE project_id =2)\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:34:44"",""alias"":""CMDB"",""id"":31,""name"":""LEOCMDBT85788"",""description"":"""",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""encXcJ4QjAr9Kd5K4m6LGvRjuckw7PIIYU/\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.191.31.130:3307/leap2_7000_master\\""}"",""salt"":""Jjr3L9APIJyyou0682SV9Filqiq6X/7e8xS4wqggnIlRSvPEawoSGpU/8ePx/cY8wWK+bXc1nXb8glv6OW5C1g=="",""organization"":""leo1311"",""dshashcode"":""6666419f2b7701f9300ed7471f5b06349640b049b8309f4a9887dae53bbb0aaf"",""activetime"":""2024-10-16 06:34:43"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":null,""forruntime"":null,""foradapter"":null,""formodel"":null,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},""position_x"":""220"",""position_y"":""16"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""albOL"",""elementPosition"":""TopCenter""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""dataset"":[""dropdown""]},""codeGeneration"":{""REST"":{},""requirements"":[],""servicenow"":{},""imports"":[],""MYSQL"":{},""w"":{},""H2"":{},""MSSQL"":{},""AWS"":{},""POSTGRESQL"":{},""script"":""def DatasetExtractor_<id>(dataset_param={}):\\r    datasetName = dataset_param.get('alias',dataset_param.get('name'))\\r    extractortype = dataset_param['datasource'].get('type','')\\r    if extractortype == '':\\r        logger.error('Datasource Type mapping not found. Validate Dataset Extractor datasource mapping')\\r    logger.info('Extracting Dataset - {0} of type {1}'.format(datasetName, extractortype))\\r    datasetAttributes= dataset_param['attributes']\\r    if type(datasetAttributes) is str:\\r        datasetAttributes = json.loads(datasetAttributes)\\r    datasource = dataset_param['datasource']\\r    datasourceAttributes = json.loads(datasource['connectionDetails'])\\r    datasourceAttributes['salt'] = datasource.get('salt','')\\r    for item in datasourceAttributes.keys():\\r        if '_vault' not in item:\\r            from leaputils import Vault\\r            try:\\r                isvault=datasourceAttributes[item+'_vault']\\r                if isvault:\\r                    value = Vault.getPassword(datasourceAttributes[item+'_vault'])\\r                    datasourceAttributes[item] = value\\r            except:\\r                a=1\\r    datasetAttributes['schema'] = dataset_param.get('schema','')\\r    datasetAttributes['applySchema'] = False\\r\\r    extractor = ''\\r    import importlib.util\\r    #load from plugins path\\r    EXTRA_PLUGINS_PATH = os.environ.get('EXTRA_PLUGINS_PATH','')\\r    if not os.path.exists(EXTRA_PLUGINS_PATH) or EXTRA_PLUGINS_PATH =='':\\r        EXTRA_PLUGINS_PATH = '/root/plugins'\\r        logger.error('Please update environment variable - EXTRA_PLUGINS_PATH ')\\r    file_path = os.path.join(EXTRA_PLUGINS_PATH, 'extractors', f'{extractortype}.py')\\r    print('FilePath', file_path)\\r    \\r    spec = importlib.util.spec_from_file_location('Extractor', file_path)\\r    module = importlib.util.module_from_spec(spec)\\r    sys.modules['Extractor'] = module\\r    spec.loader.exec_module(module)\\r    class_name = extractortype  # ask user - className\\r    extractor = getattr(module, class_name)\\r    extractor = extractor(datasourceAttributes, datasetAttributes)\\r    if extractor == '':\\r        logger.error('No extractor configured for type {0}'.format(extractortype))\\r    dataset = extractor.getData()\\r    return dataset\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\n""},""context"":[]},{""id"":""NefOa"",""alias"":""Connection"",""name"":""Connection"",""classname"":""Connection"",""category"":""Connection"",""attributes"":{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-16 06:30:27"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enckDfVTiFdi6Iu1oW8yHsvdOLzMyf8zHjO\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""iS35XN8CpLB63k4ZWhkVr3QaBczVfeNWoXrQJuxsl8g83L0pg2HY4l2c4V3NMbBa2UivM62Pp5UZ/gffwPGPag=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-16 06:30:27"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false}},""position_x"":""571"",""position_y"":""9"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""apAgf"",""elementPosition"":""TopCenter""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""connections"":""""},""codeGeneration"":{""requirements"":[],""imports"":[],""script"":""def Connection_<id>(connections_param={}):\\n    \\n    return connections_param\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""}],""environment"":[{""name"":""InstallDeps"",""value"":""True""},{""name"":""DECRYPTION_KEY"",""value"":""leap$123##""}],""default_runtime"":""{\\""dsAlias\\"":\\""LocalCluster\\"",\\""dsName\\"":\\""LEALCLCL12132\\"",\\""type\\"":\\""REMOTE\\""}""}","admin","Anomaly Detection & Alert Generation","2024-10-17 11:06:14","LEOANMLY74473","leo1311","DragNDropLite","279",NULL,"pipeline",NULL,"\0","0"
"admin","2024-05-02 11:41:42.491000","\0","",NULL,"{""elements"":[{""attributes"":{""filetype"":""Jython"",""files"":[""LEOCDGNR37410_leo1311.py""],""arguments"":[{""name"":""scriptPath"",""value"":"""",""type"":""Text"",""alias"":"""",""index"":""1""},{""name"":""pipelineName"",""value"":"""",""type"":""Text"",""alias"":"""",""index"":""2""}],""dataset"":[]}}]}","admin","CodeGeneration_Chatbot","2024-10-16 04:46:16","LEOCDGNR37410","leo1311","NativeScript","9",NULL,"pipeline",NULL,"\0","0"
"admin","2024-09-25 06:51:23.624000","\0","",NULL,"{""elements"":[{""id"":""AqbWU"",""alias"":""Dataset Extractor"",""name"":""Dataset Extractor"",""classname"":""DatasetExtractor"",""category"":""Extractor"",""attributes"":{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},""position_x"":""48"",""position_y"":""6"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""yQkDE"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""dataset"":[""dropdown""]},""codeGeneration"":{""REST"":{},""requirements"":[],""servicenow"":{},""imports"":[],""MYSQL"":{},""w"":{},""H2"":{},""MSSQL"":{},""AWS"":{},""POSTGRESQL"":{},""script"":""def DatasetExtractor_<id>(dataset_param={}):\\r    datasetName = dataset_param.get('alias',dataset_param.get('name'))\\r    extractortype = dataset_param['datasource'].get('type','')\\r    if extractortype == '':\\r        logger.error('Datasource Type mapping not found. Validate Dataset Extractor datasource mapping')\\r    logger.info('Extracting Dataset - {0} of type {1}'.format(datasetName, extractortype))\\r    datasetAttributes= dataset_param['attributes']\\r    if type(datasetAttributes) is str:\\r        datasetAttributes = json.loads(datasetAttributes)\\r    datasource = dataset_param['datasource']\\r    datasourceAttributes = json.loads(datasource['connectionDetails'])\\r    datasourceAttributes['salt'] = datasource.get('salt','')\\r    for item in datasourceAttributes.keys():\\r        if '_vault' not in item:\\r            from leaputils import Vault\\r            try:\\r                isvault=datasourceAttributes[item+'_vault']\\r                if isvault:\\r                    value = Vault.getPassword(datasourceAttributes[item+'_vault'])\\r                    datasourceAttributes[item] = value\\r            except:\\r                a=1\\r    datasetAttributes['schema'] = dataset_param.get('schema','')\\r    datasetAttributes['applySchema'] = False\\r\\r    extractor = ''\\r    import importlib.util\\r    #load from plugins path\\r    EXTRA_PLUGINS_PATH = os.environ.get('EXTRA_PLUGINS_PATH','')\\r    if not os.path.exists(EXTRA_PLUGINS_PATH) or EXTRA_PLUGINS_PATH =='':\\r        EXTRA_PLUGINS_PATH = '/root/plugins'\\r        logger.error('Please update environment variable - EXTRA_PLUGINS_PATH ')\\r    file_path = os.path.join(EXTRA_PLUGINS_PATH, 'extractors', f'{extractortype}.py')\\r    print('FilePath', file_path)\\r    \\r    spec = importlib.util.spec_from_file_location('Extractor', file_path)\\r    module = importlib.util.module_from_spec(spec)\\r    sys.modules['Extractor'] = module\\r    spec.loader.exec_module(module)\\r    class_name = extractortype  # ask user - className\\r    extractor = getattr(module, class_name)\\r    extractor = extractor(datasourceAttributes, datasetAttributes)\\r    if extractor == '':\\r        logger.error('No extractor configured for type {0}'.format(extractortype))\\r    dataset = extractor.getData()\\r    return dataset\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\n""},""context"":[]},{""id"":""yQkDE"",""alias"":""Entities"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""getEntities"",""requirements"":""openai==0.28"",""params"":[],""script"":[""import openai\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\ropenai.api_type = os.environ[\\""openai_api_type\\""]\\ropenai.api_base = os.environ[\\""openai_api_base\\""]\\ropenai.api_version = os.environ[\\""openai_api_version\\""]\\ropenai.api_key = os.environ[\\""app_OPENAI_API_KEY\\""]\\r\\rdef getEntities( dataset):   \\r    logger.info('Total Tickets : {0}'.format( len(dataset)))\\r    logger.info(\\""Fetching Entities\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as list of string in json: ```_____\\r\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r        prompt_template = prompt  # Needs to refine Custom\\r\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        def OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r            response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=temperature,\\r            max_tokens=max_tokens,\\r            top_p=top_p,\\r            frequency_penalty=frequency_penalty,\\r            presence_penalty=presence_penalty,\\r            stop=stop)\\r            return response\\r\\r        response = OpenAIChatCompletion(prompt,\\r                                    temperature=0.3,\\r                                    max_tokens=250,\\r                                    top_p=1,\\r                                    frequency_penalty=0,\\r                                    presence_penalty=0,\\r                                    stop=None)\\r\\r        Ticket_entities_out = response['choices'][0]['message']['content']\\r        try:\\r            record['entites'] = json.loads(Ticket_entities_out)['Answer']\\r        except:\\r            record['entites'] = Ticket_entities_out\\r    return dataset\\r    \\r    \\rdef RelatedTickets(query,adapter,leap_url,org):\\r    # python-script Data\\r    \\r    url =f\\""{leap_url}/api/aip/adapters/{adapter}/semanticsearch_infer/{org}?isInstance=true\\""\\r    question = query\\r  \\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    print('PAYLOAD: ',payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r  \\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r        \\r        \\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return df\\r    except:\\r        return response.text\\r\\r    ""]},""position_x"":""226"",""position_y"":""6"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""AqbWU"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""Owpdp"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""Owpdp"",""alias"":""Incident_Categorization"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""getIncidentCategorization"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""import pandas as pd\\rimport ast \\rdef getIncidentCategorization(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Incident Categorization\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        \\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r\\r        prompt = f'''Based on historical data, categorize this support ticket: \\""{ticket_content}\\"".\\r        Consider the following information:\\r         {related_tickets[['shortdescription','category']]}\\r        \\r    \\r        Please provide your categorization in the following template:\\r        ```\\r        Category: ___\\r        Explanation: ____\\r        ```\\r        If you believe a different category is more appropriate, please explain why.'''\\r    \\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        incident_out = response['choices'][0]['message']['content']\\r        try:\\r            record['incidentCategorization'] = json.dumps(incident_out)['Answer']\\r        except:\\r            record['incidentCategorization'] = incident_out\\r    return dataset""]},""position_x"":""409"",""position_y"":""6"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""yQkDE"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""ZAzeY"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""getEntities"",""requirements"":""openai==0.28"",""params"":[],""script"":[""import openai\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\ropenai.api_type = os.environ[\\""openai_api_type\\""]\\ropenai.api_base = os.environ[\\""openai_api_base\\""]\\ropenai.api_version = os.environ[\\""openai_api_version\\""]\\ropenai.api_key = os.environ[\\""app_OPENAI_API_KEY\\""]\\r\\rdef getEntities( dataset):   \\r    logger.info('Total Tickets : {0}'.format( len(dataset)))\\r    logger.info(\\""Fetching Entities\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as list of string in json: ```_____\\r\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r        prompt_template = prompt  # Needs to refine Custom\\r\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        def OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r            response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=temperature,\\r            max_tokens=max_tokens,\\r            top_p=top_p,\\r            frequency_penalty=frequency_penalty,\\r            presence_penalty=presence_penalty,\\r            stop=stop)\\r            return response\\r\\r        response = OpenAIChatCompletion(prompt,\\r                                    temperature=0.3,\\r                                    max_tokens=250,\\r                                    top_p=1,\\r                                    frequency_penalty=0,\\r                                    presence_penalty=0,\\r                                    stop=None)\\r\\r        Ticket_entities_out = response['choices'][0]['message']['content']\\r        try:\\r            record['entites'] = json.loads(Ticket_entities_out)['Answer']\\r        except:\\r            record['entites'] = Ticket_entities_out\\r    return dataset\\r    \\r    \\rdef RelatedTickets(query,adapter,leap_url,org):\\r    # python-script Data\\r    \\r    url =f\\""{leap_url}/api/aip/adapters/{adapter}/semanticsearch_infer/{org}?isInstance=true\\""\\r    question = query\\r  \\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    print('PAYLOAD: ',payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r  \\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r        \\r        \\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return df\\r    except:\\r        return response.text\\r\\r    ""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""ZAzeY"",""alias"":""Priority Assignments"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""getPriority"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""def getPriority(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Priority\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r        prompt = f\\""\\""\\""\\r        Use the following historical ticket data for learning, but do not reference it in your explanation:\\r        {related_tickets[['shortdescription','priority']]}\\r        Now, analyze the urgency of this new issue: {ticket_content}\\r        \\r        Provide a logical reason for the assigned priority based solely on the issue's content, impact, and urgency.\\r        Do not mention historical data or patterns in your explanation.\\r        Return the priority in the following template:\\r        ```\\r        Priority: [1-5]\\r        Explanation: [Provide a logical reason for the assigned priority, focusing on the impact and urgency of the issue.]\\r        ```\\r        \\""\\""\\""\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Priority_Assignment_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Priority'] = json.dumps(Priority_Assignment_out)['Answer']\\r        except:\\r            record['Priority'] = Priority_Assignment_out\\r    return dataset\\r""]},""position_x"":""595"",""position_y"":""6"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""Owpdp"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""RMsSK"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""getIncidentCategorization"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""import pandas as pd\\rimport ast \\rdef getIncidentCategorization(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Incident Categorization\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        \\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r\\r        prompt = f'''Based on historical data, categorize this support ticket: \\""{ticket_content}\\"".\\r        Consider the following information:\\r         {related_tickets[['shortdescription','category']]}\\r        \\r    \\r        Please provide your categorization in the following template:\\r        ```\\r        Category: ___\\r        Explanation: ____\\r        ```\\r        If you believe a different category is more appropriate, please explain why.'''\\r    \\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        incident_out = response['choices'][0]['message']['content']\\r        try:\\r            record['incidentCategorization'] = json.dumps(incident_out)['Answer']\\r        except:\\r            record['incidentCategorization'] = incident_out\\r    return dataset""]},{""FunctionName"":""getEntities"",""requirements"":""openai==0.28"",""params"":[],""script"":[""import openai\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\ropenai.api_type = os.environ[\\""openai_api_type\\""]\\ropenai.api_base = os.environ[\\""openai_api_base\\""]\\ropenai.api_version = os.environ[\\""openai_api_version\\""]\\ropenai.api_key = os.environ[\\""app_OPENAI_API_KEY\\""]\\r\\rdef getEntities( dataset):   \\r    logger.info('Total Tickets : {0}'.format( len(dataset)))\\r    logger.info(\\""Fetching Entities\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as list of string in json: ```_____\\r\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r        prompt_template = prompt  # Needs to refine Custom\\r\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        def OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r            response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=temperature,\\r            max_tokens=max_tokens,\\r            top_p=top_p,\\r            frequency_penalty=frequency_penalty,\\r            presence_penalty=presence_penalty,\\r            stop=stop)\\r            return response\\r\\r        response = OpenAIChatCompletion(prompt,\\r                                    temperature=0.3,\\r                                    max_tokens=250,\\r                                    top_p=1,\\r                                    frequency_penalty=0,\\r                                    presence_penalty=0,\\r                                    stop=None)\\r\\r        Ticket_entities_out = response['choices'][0]['message']['content']\\r        try:\\r            record['entites'] = json.loads(Ticket_entities_out)['Answer']\\r        except:\\r            record['entites'] = Ticket_entities_out\\r    return dataset\\r    \\r    \\rdef RelatedTickets(query,adapter,leap_url,org):\\r    # python-script Data\\r    \\r    url =f\\""{leap_url}/api/aip/adapters/{adapter}/semanticsearch_infer/{org}?isInstance=true\\""\\r    question = query\\r  \\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    print('PAYLOAD: ',payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r  \\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r        \\r        \\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return df\\r    except:\\r        return response.text\\r\\r    ""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""RMsSK"",""alias"":""Ticket_Sentiment_Analysis"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""getTicketSentiments"",""requirements"":"""",""params"":[],""script"":[""def getTicketSentiments(dataset):\\r    logger.info(\\""Fetching Sentiment\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the sentiment of this customer message: {ticket content}. Return the sentiment in the following json: ```Sentiment: ___\\r        Explanation: ____```\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=250,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Ticket_Sentiment_Analysis_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Ticket_Sentiment'] = json.dumps(Ticket_Sentiment_Analysis_out)['Answer']\\r        except:\\r            record['Ticket_Sentiment'] = Ticket_Sentiment_Analysis_out\\r    return dataset""]},""position_x"":""747"",""position_y"":""6"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""ZAzeY"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""ChdqA"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""getPriority"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""def getPriority(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Priority\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r        prompt = f\\""\\""\\""\\r        Use the following historical ticket data for learning, but do not reference it in your explanation:\\r        {related_tickets[['shortdescription','priority']]}\\r        Now, analyze the urgency of this new issue: {ticket_content}\\r        \\r        Provide a logical reason for the assigned priority based solely on the issue's content, impact, and urgency.\\r        Do not mention historical data or patterns in your explanation.\\r        Return the priority in the following template:\\r        ```\\r        Priority: [1-5]\\r        Explanation: [Provide a logical reason for the assigned priority, focusing on the impact and urgency of the issue.]\\r        ```\\r        \\""\\""\\""\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Priority_Assignment_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Priority'] = json.dumps(Priority_Assignment_out)['Answer']\\r        except:\\r            record['Priority'] = Priority_Assignment_out\\r    return dataset\\r""]},{""FunctionName"":""getIncidentCategorization"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""import pandas as pd\\rimport ast \\rdef getIncidentCategorization(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Incident Categorization\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        \\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r\\r        prompt = f'''Based on historical data, categorize this support ticket: \\""{ticket_content}\\"".\\r        Consider the following information:\\r         {related_tickets[['shortdescription','category']]}\\r        \\r    \\r        Please provide your categorization in the following template:\\r        ```\\r        Category: ___\\r        Explanation: ____\\r        ```\\r        If you believe a different category is more appropriate, please explain why.'''\\r    \\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        incident_out = response['choices'][0]['message']['content']\\r        try:\\r            record['incidentCategorization'] = json.dumps(incident_out)['Answer']\\r        except:\\r            record['incidentCategorization'] = incident_out\\r    return dataset""]},{""FunctionName"":""getEntities"",""requirements"":""openai==0.28"",""params"":[],""script"":[""import openai\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\ropenai.api_type = os.environ[\\""openai_api_type\\""]\\ropenai.api_base = os.environ[\\""openai_api_base\\""]\\ropenai.api_version = os.environ[\\""openai_api_version\\""]\\ropenai.api_key = os.environ[\\""app_OPENAI_API_KEY\\""]\\r\\rdef getEntities( dataset):   \\r    logger.info('Total Tickets : {0}'.format( len(dataset)))\\r    logger.info(\\""Fetching Entities\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as list of string in json: ```_____\\r\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r        prompt_template = prompt  # Needs to refine Custom\\r\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        def OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r            response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=temperature,\\r            max_tokens=max_tokens,\\r            top_p=top_p,\\r            frequency_penalty=frequency_penalty,\\r            presence_penalty=presence_penalty,\\r            stop=stop)\\r            return response\\r\\r        response = OpenAIChatCompletion(prompt,\\r                                    temperature=0.3,\\r                                    max_tokens=250,\\r                                    top_p=1,\\r                                    frequency_penalty=0,\\r                                    presence_penalty=0,\\r                                    stop=None)\\r\\r        Ticket_entities_out = response['choices'][0]['message']['content']\\r        try:\\r            record['entites'] = json.loads(Ticket_entities_out)['Answer']\\r        except:\\r            record['entites'] = Ticket_entities_out\\r    return dataset\\r    \\r    \\rdef RelatedTickets(query,adapter,leap_url,org):\\r    # python-script Data\\r    \\r    url =f\\""{leap_url}/api/aip/adapters/{adapter}/semanticsearch_infer/{org}?isInstance=true\\""\\r    question = query\\r  \\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    print('PAYLOAD: ',payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r  \\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r        \\r        \\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return df\\r    except:\\r        return response.text\\r\\r    ""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""ZuXvc"",""alias"":""Language_Translation"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""getLanguageTranslation"",""requirements"":"""",""params"":[],""script"":[""def getLanguageTranslation(dataset):\\r    logger.info(\\""Language Translation\\"")\\r    for record in dataset:\\r        ticket_content = record['Ticket_Summary']\\r        prompt = '''Translate this customer ticket from source language to English: {ticket content}.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.8,\\r            max_tokens=60,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Language_Translation_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Language_Translation'] = json.dumps(Language_Translation_out)['Answer']\\r        except:\\r            record['Language_Translation'] = Language_Translation_out\\r    return dataset""]},""position_x"":""292"",""position_y"":""139"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""iNZEr"",""elementPosition"":""LeftMiddle""},{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""ChdqA"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""get_summary"",""requirements"":"""",""params"":[],""script"":[""from langchain_core.prompts import PromptTemplate\\rfrom langchain.output_parsers import ResponseSchema, StructuredOutputParser\\rfrom langchain.chat_models import AzureChatOpenAI\\rfrom langchain.chains import LLMChain\\r\\rdef get_summary(dataset):\\r    logger.info(\\""Summarizing Tickets\\"")\\r    for record in dataset:\\r        payload = record\\r        summary_template = \\""\\""\\""\\r    \\r                    given the information {information} about a ticket from I want you to generate :\\r    \\r                    1. Summary basing on the whole information given.\\r    \\r                    2. A short summary on SLA Timeline\\r    \\r                    3. A short summary on Resolution and worknotes\\r    \\r                    5. A short summary on Priority and urgency\\r    \\r                    6. A short summary on created_by, assignmentgroup and assignedto\\r    \\r                    7. A short summary on Current Status\\r    \\r                    {format_instructions}\\r    \\r                \\""\\""\\""\\r    \\r        llm = AzureChatOpenAI(\\r    \\r            deployment_name=os.environ['deploymentName'],\\r    \\r            model_name='gpt-35-turbo',\\r    \\r            openai_api_key=os.environ['app_OPENAI_API_KEY'],\\r    \\r            openai_api_version=os.environ['openai_api_version'],\\r    \\r            # openai_api_base='https://azureft.openai.azure.com/',\\r    \\r            openai_api_base=os.environ['openai_api_base'],\\r    \\r            openai_api_type=os.environ['openai_api_type'],\\r    \\r            streaming=True,\\r    \\r            verbose=True\\r    \\r            )\\r    \\r    \\r        response_schemas = [\\r    \\r            ResponseSchema(name=\\""Summary\\"", description=\\""Summary basing on the whole information given.\\""),\\r    \\r            ResponseSchema(name=\\""Description\\"", description=\\""A short summary shortdescription and description\\""),\\r    \\r            ResponseSchema(name=\\""ResolutionNotes\\"", description=\\""A short summary on Resolution and worknotes\\""),\\r    \\r            ResponseSchema(name=\\""Priority and Urgency\\"", description=\\""A short summary on Priority and urgency\\""),\\r    \\r            ResponseSchema(name=\\""Owner\\"", description=\\""A short summary on created_by, assignmentgroup and assignedto\\""),\\r    \\r            ResponseSchema(name=\\""current_status\\"", description=\\""A short summary on Current Status and how long the ticket has been open.\\""),\\r    \\r        ]\\r    \\r        output_parser = StructuredOutputParser.from_response_schemas(response_schemas)\\r    \\r        format_instructions = output_parser.get_format_instructions()\\r    \\r        summary_prompt_template = PromptTemplate(input_variables=[\\""information\\""], template=summary_template,\\r    \\r                                                 partial_variables={\\""format_instructions\\"": format_instructions})\\r    \\r        response = LLMChain(llm=llm, prompt=summary_prompt_template)\\r    \\r        # print(chain.run(information=information))\\r    \\r        result = response.run(information=payload)\\r    \\r        result = result[7:]\\r    \\r        result = result[:-3]\\r        try:\\r            result = json.loads(result)\\r        \\r            summary_result = f'''{result['Summary']}\\r            \\r            Below are the point wise details of the incident:\\r        \\r                1.Description:{result[\\""Description\\""]}\\r        \\r                2.Owner:{result['Owner']}\\r        \\r                3.Priority and Urgency:{result['Priority and Urgency']}\\r        \\r                4.Resolution Notes:{result['ResolutionNotes']}\\r        \\r                5.Current Status:{result['current_status']}\\r        \\r            '''\\r            try:\\r                record['Ticket_Summary'] = json.dumps(summary_result)['Answer']\\r            except:\\r                record['Ticket_Summary'] = summary_result\\r        except:\\r            return result\\r    return dataset\\r""]},{""FunctionName"":""getTicketSentiments"",""requirements"":"""",""params"":[],""script"":[""def getTicketSentiments(dataset):\\r    logger.info(\\""Fetching Sentiment\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the sentiment of this customer message: {ticket content}. Return the sentiment in the following json: ```Sentiment: ___\\r        Explanation: ____```\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=250,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Ticket_Sentiment_Analysis_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Ticket_Sentiment'] = json.dumps(Ticket_Sentiment_Analysis_out)['Answer']\\r        except:\\r            record['Ticket_Sentiment'] = Ticket_Sentiment_Analysis_out\\r    return dataset""]},{""FunctionName"":""getPriority"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""def getPriority(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Priority\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r        prompt = f\\""\\""\\""\\r        Use the following historical ticket data for learning, but do not reference it in your explanation:\\r        {related_tickets[['shortdescription','priority']]}\\r        Now, analyze the urgency of this new issue: {ticket_content}\\r        \\r        Provide a logical reason for the assigned priority based solely on the issue's content, impact, and urgency.\\r        Do not mention historical data or patterns in your explanation.\\r        Return the priority in the following template:\\r        ```\\r        Priority: [1-5]\\r        Explanation: [Provide a logical reason for the assigned priority, focusing on the impact and urgency of the issue.]\\r        ```\\r        \\""\\""\\""\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Priority_Assignment_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Priority'] = json.dumps(Priority_Assignment_out)['Answer']\\r        except:\\r            record['Priority'] = Priority_Assignment_out\\r    return dataset\\r""]},{""FunctionName"":""getIncidentCategorization"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""import pandas as pd\\rimport ast \\rdef getIncidentCategorization(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Incident Categorization\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        \\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r\\r        prompt = f'''Based on historical data, categorize this support ticket: \\""{ticket_content}\\"".\\r        Consider the following information:\\r         {related_tickets[['shortdescription','category']]}\\r        \\r    \\r        Please provide your categorization in the following template:\\r        ```\\r        Category: ___\\r        Explanation: ____\\r        ```\\r        If you believe a different category is more appropriate, please explain why.'''\\r    \\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        incident_out = response['choices'][0]['message']['content']\\r        try:\\r            record['incidentCategorization'] = json.dumps(incident_out)['Answer']\\r        except:\\r            record['incidentCategorization'] = incident_out\\r    return dataset""]},{""FunctionName"":""getEntities"",""requirements"":""openai==0.28"",""params"":[],""script"":[""import openai\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\ropenai.api_type = os.environ[\\""openai_api_type\\""]\\ropenai.api_base = os.environ[\\""openai_api_base\\""]\\ropenai.api_version = os.environ[\\""openai_api_version\\""]\\ropenai.api_key = os.environ[\\""app_OPENAI_API_KEY\\""]\\r\\rdef getEntities( dataset):   \\r    logger.info('Total Tickets : {0}'.format( len(dataset)))\\r    logger.info(\\""Fetching Entities\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as list of string in json: ```_____\\r\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r        prompt_template = prompt  # Needs to refine Custom\\r\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        def OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r            response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=temperature,\\r            max_tokens=max_tokens,\\r            top_p=top_p,\\r            frequency_penalty=frequency_penalty,\\r            presence_penalty=presence_penalty,\\r            stop=stop)\\r            return response\\r\\r        response = OpenAIChatCompletion(prompt,\\r                                    temperature=0.3,\\r                                    max_tokens=250,\\r                                    top_p=1,\\r                                    frequency_penalty=0,\\r                                    presence_penalty=0,\\r                                    stop=None)\\r\\r        Ticket_entities_out = response['choices'][0]['message']['content']\\r        try:\\r            record['entites'] = json.loads(Ticket_entities_out)['Answer']\\r        except:\\r            record['entites'] = Ticket_entities_out\\r    return dataset\\r    \\r    \\rdef RelatedTickets(query,adapter,leap_url,org):\\r    # python-script Data\\r    \\r    url =f\\""{leap_url}/api/aip/adapters/{adapter}/semanticsearch_infer/{org}?isInstance=true\\""\\r    question = query\\r  \\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    print('PAYLOAD: ',payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r  \\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r        \\r        \\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return df\\r    except:\\r        return response.text\\r\\r    ""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""iNZEr"",""alias"":""First_Response"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""getFirstResponse"",""requirements"":"""",""params"":[],""script"":[""def getFirstResponse(dataset):\\r    logger.info(\\""Fetching First Response\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Based on this customer message {ticket content}, draft a response. To assess the candidate's ability to draft a first response, we were looking for the following:\\r        An understanding of the issue raised by the customer\\r        A clear and concise response that addresses the issue\\r        A polite and professional tone\\r        A clear call to action.\\r        If the provided context doesn't provide enough information, you are allowed to use your knowledge and experience to offer you the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=1,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        First_Response_out = response['choices'][0]['message']['content']\\r        try:\\r            record['First_Response'] = json.dumps(First_Response_out)['Answer']\\r        except:\\r            record['First_Response'] = First_Response_out\\r    return dataset""]},""position_x"":""479"",""position_y"":""138"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""ZuXvc"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""Srgti"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""getLanguageTranslation"",""requirements"":"""",""params"":[],""script"":[""def getLanguageTranslation(dataset):\\r    logger.info(\\""Language Translation\\"")\\r    for record in dataset:\\r        ticket_content = record['Ticket_Summary']\\r        prompt = '''Translate this customer ticket from source language to English: {ticket content}.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.8,\\r            max_tokens=60,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Language_Translation_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Language_Translation'] = json.dumps(Language_Translation_out)['Answer']\\r        except:\\r            record['Language_Translation'] = Language_Translation_out\\r    return dataset""]},{""FunctionName"":""get_summary"",""requirements"":"""",""params"":[],""script"":[""from langchain_core.prompts import PromptTemplate\\rfrom langchain.output_parsers import ResponseSchema, StructuredOutputParser\\rfrom langchain.chat_models import AzureChatOpenAI\\rfrom langchain.chains import LLMChain\\r\\rdef get_summary(dataset):\\r    logger.info(\\""Summarizing Tickets\\"")\\r    for record in dataset:\\r        payload = record\\r        summary_template = \\""\\""\\""\\r    \\r                    given the information {information} about a ticket from I want you to generate :\\r    \\r                    1. Summary basing on the whole information given.\\r    \\r                    2. A short summary on SLA Timeline\\r    \\r                    3. A short summary on Resolution and worknotes\\r    \\r                    5. A short summary on Priority and urgency\\r    \\r                    6. A short summary on created_by, assignmentgroup and assignedto\\r    \\r                    7. A short summary on Current Status\\r    \\r                    {format_instructions}\\r    \\r                \\""\\""\\""\\r    \\r        llm = AzureChatOpenAI(\\r    \\r            deployment_name=os.environ['deploymentName'],\\r    \\r            model_name='gpt-35-turbo',\\r    \\r            openai_api_key=os.environ['app_OPENAI_API_KEY'],\\r    \\r            openai_api_version=os.environ['openai_api_version'],\\r    \\r            # openai_api_base='https://azureft.openai.azure.com/',\\r    \\r            openai_api_base=os.environ['openai_api_base'],\\r    \\r            openai_api_type=os.environ['openai_api_type'],\\r    \\r            streaming=True,\\r    \\r            verbose=True\\r    \\r            )\\r    \\r    \\r        response_schemas = [\\r    \\r            ResponseSchema(name=\\""Summary\\"", description=\\""Summary basing on the whole information given.\\""),\\r    \\r            ResponseSchema(name=\\""Description\\"", description=\\""A short summary shortdescription and description\\""),\\r    \\r            ResponseSchema(name=\\""ResolutionNotes\\"", description=\\""A short summary on Resolution and worknotes\\""),\\r    \\r            ResponseSchema(name=\\""Priority and Urgency\\"", description=\\""A short summary on Priority and urgency\\""),\\r    \\r            ResponseSchema(name=\\""Owner\\"", description=\\""A short summary on created_by, assignmentgroup and assignedto\\""),\\r    \\r            ResponseSchema(name=\\""current_status\\"", description=\\""A short summary on Current Status and how long the ticket has been open.\\""),\\r    \\r        ]\\r    \\r        output_parser = StructuredOutputParser.from_response_schemas(response_schemas)\\r    \\r        format_instructions = output_parser.get_format_instructions()\\r    \\r        summary_prompt_template = PromptTemplate(input_variables=[\\""information\\""], template=summary_template,\\r    \\r                                                 partial_variables={\\""format_instructions\\"": format_instructions})\\r    \\r        response = LLMChain(llm=llm, prompt=summary_prompt_template)\\r    \\r        # print(chain.run(information=information))\\r    \\r        result = response.run(information=payload)\\r    \\r        result = result[7:]\\r    \\r        result = result[:-3]\\r        try:\\r            result = json.loads(result)\\r        \\r            summary_result = f'''{result['Summary']}\\r            \\r            Below are the point wise details of the incident:\\r        \\r                1.Description:{result[\\""Description\\""]}\\r        \\r                2.Owner:{result['Owner']}\\r        \\r                3.Priority and Urgency:{result['Priority and Urgency']}\\r        \\r                4.Resolution Notes:{result['ResolutionNotes']}\\r        \\r                5.Current Status:{result['current_status']}\\r        \\r            '''\\r            try:\\r                record['Ticket_Summary'] = json.dumps(summary_result)['Answer']\\r            except:\\r                record['Ticket_Summary'] = summary_result\\r        except:\\r            return result\\r    return dataset\\r""]},{""FunctionName"":""getTicketSentiments"",""requirements"":"""",""params"":[],""script"":[""def getTicketSentiments(dataset):\\r    logger.info(\\""Fetching Sentiment\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the sentiment of this customer message: {ticket content}. Return the sentiment in the following json: ```Sentiment: ___\\r        Explanation: ____```\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=250,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Ticket_Sentiment_Analysis_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Ticket_Sentiment'] = json.dumps(Ticket_Sentiment_Analysis_out)['Answer']\\r        except:\\r            record['Ticket_Sentiment'] = Ticket_Sentiment_Analysis_out\\r    return dataset""]},{""FunctionName"":""getPriority"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""def getPriority(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Priority\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r        prompt = f\\""\\""\\""\\r        Use the following historical ticket data for learning, but do not reference it in your explanation:\\r        {related_tickets[['shortdescription','priority']]}\\r        Now, analyze the urgency of this new issue: {ticket_content}\\r        \\r        Provide a logical reason for the assigned priority based solely on the issue's content, impact, and urgency.\\r        Do not mention historical data or patterns in your explanation.\\r        Return the priority in the following template:\\r        ```\\r        Priority: [1-5]\\r        Explanation: [Provide a logical reason for the assigned priority, focusing on the impact and urgency of the issue.]\\r        ```\\r        \\""\\""\\""\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Priority_Assignment_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Priority'] = json.dumps(Priority_Assignment_out)['Answer']\\r        except:\\r            record['Priority'] = Priority_Assignment_out\\r    return dataset\\r""]},{""FunctionName"":""getIncidentCategorization"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""import pandas as pd\\rimport ast \\rdef getIncidentCategorization(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Incident Categorization\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        \\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r\\r        prompt = f'''Based on historical data, categorize this support ticket: \\""{ticket_content}\\"".\\r        Consider the following information:\\r         {related_tickets[['shortdescription','category']]}\\r        \\r    \\r        Please provide your categorization in the following template:\\r        ```\\r        Category: ___\\r        Explanation: ____\\r        ```\\r        If you believe a different category is more appropriate, please explain why.'''\\r    \\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        incident_out = response['choices'][0]['message']['content']\\r        try:\\r            record['incidentCategorization'] = json.dumps(incident_out)['Answer']\\r        except:\\r            record['incidentCategorization'] = incident_out\\r    return dataset""]},{""FunctionName"":""getEntities"",""requirements"":""openai==0.28"",""params"":[],""script"":[""import openai\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\ropenai.api_type = os.environ[\\""openai_api_type\\""]\\ropenai.api_base = os.environ[\\""openai_api_base\\""]\\ropenai.api_version = os.environ[\\""openai_api_version\\""]\\ropenai.api_key = os.environ[\\""app_OPENAI_API_KEY\\""]\\r\\rdef getEntities( dataset):   \\r    logger.info('Total Tickets : {0}'.format( len(dataset)))\\r    logger.info(\\""Fetching Entities\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as list of string in json: ```_____\\r\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r        prompt_template = prompt  # Needs to refine Custom\\r\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        def OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r            response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=temperature,\\r            max_tokens=max_tokens,\\r            top_p=top_p,\\r            frequency_penalty=frequency_penalty,\\r            presence_penalty=presence_penalty,\\r            stop=stop)\\r            return response\\r\\r        response = OpenAIChatCompletion(prompt,\\r                                    temperature=0.3,\\r                                    max_tokens=250,\\r                                    top_p=1,\\r                                    frequency_penalty=0,\\r                                    presence_penalty=0,\\r                                    stop=None)\\r\\r        Ticket_entities_out = response['choices'][0]['message']['content']\\r        try:\\r            record['entites'] = json.loads(Ticket_entities_out)['Answer']\\r        except:\\r            record['entites'] = Ticket_entities_out\\r    return dataset\\r    \\r    \\rdef RelatedTickets(query,adapter,leap_url,org):\\r    # python-script Data\\r    \\r    url =f\\""{leap_url}/api/aip/adapters/{adapter}/semanticsearch_infer/{org}?isInstance=true\\""\\r    question = query\\r  \\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    print('PAYLOAD: ',payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r  \\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r        \\r        \\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return df\\r    except:\\r        return response.text\\r\\r    ""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""Srgti"",""alias"":""AutomatedFollow_ups"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""getAutomatedFollow_ups"",""requirements"":"""",""params"":[],""script"":[""from datetime import datetime\\r\\rdef getAutomatedFollow_ups(dataset):\\r    logger.info(\\""Fetching Automated FollowUps\\"")\\r    for record in dataset:\\r        ticket_content = record['number']\\r        current_date = datetime.now()\\r        updated_date = record['lastUpdated']\\r        prompt = f'''Draft a follow-up message for ticket number: {ticket_content}. \\r        Based on the above ticket data, identify ticket pendancy days = {current_date} - {updated_date}. The SLA for ticket pendancy is 7 days. \\r        If the ticket status is Open and with Support team then generate a response to update customer about work in progress. \\r        If the ticket status is Open and with Customer then generate a response to remind the customer to provide the inputs. \\r        If the ticket status is marked for closure and with Customer then generate a response to remind the customer to verify and close the ticket.'''\\r        #prompt_template = prompt # Needs to refine Custom\\r        #prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        #prompt = prompt_template.replace('{ticket content}', ticket_content,'{current date}', current_date,'{ticket last updated date}', updated_date)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=1,\\r            max_tokens=150,\\r            top_p=1,\\r            frequency_penalty=1.6,\\r            presence_penalty=0,\\r            stop=None)\\r        AutomatedFollow_ups_out = response['choices'][0]['message']['content']\\r        try:\\r            record['AutomatedFollow_ups'] = json.dumps(AutomatedFollow_ups_out)['Answer']\\r        except:\\r            record['AutomatedFollow_ups'] = AutomatedFollow_ups_out\\r    return dataset\\r""]},""position_x"":""658"",""position_y"":""139"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""iNZEr"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""ljmjO"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""getFirstResponse"",""requirements"":"""",""params"":[],""script"":[""def getFirstResponse(dataset):\\r    logger.info(\\""Fetching First Response\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Based on this customer message {ticket content}, draft a response. To assess the candidate's ability to draft a first response, we were looking for the following:\\r        An understanding of the issue raised by the customer\\r        A clear and concise response that addresses the issue\\r        A polite and professional tone\\r        A clear call to action.\\r        If the provided context doesn't provide enough information, you are allowed to use your knowledge and experience to offer you the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=1,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        First_Response_out = response['choices'][0]['message']['content']\\r        try:\\r            record['First_Response'] = json.dumps(First_Response_out)['Answer']\\r        except:\\r            record['First_Response'] = First_Response_out\\r    return dataset""]},{""FunctionName"":""getLanguageTranslation"",""requirements"":"""",""params"":[],""script"":[""def getLanguageTranslation(dataset):\\r    logger.info(\\""Language Translation\\"")\\r    for record in dataset:\\r        ticket_content = record['Ticket_Summary']\\r        prompt = '''Translate this customer ticket from source language to English: {ticket content}.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.8,\\r            max_tokens=60,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Language_Translation_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Language_Translation'] = json.dumps(Language_Translation_out)['Answer']\\r        except:\\r            record['Language_Translation'] = Language_Translation_out\\r    return dataset""]},{""FunctionName"":""get_summary"",""requirements"":"""",""params"":[],""script"":[""from langchain_core.prompts import PromptTemplate\\rfrom langchain.output_parsers import ResponseSchema, StructuredOutputParser\\rfrom langchain.chat_models import AzureChatOpenAI\\rfrom langchain.chains import LLMChain\\r\\rdef get_summary(dataset):\\r    logger.info(\\""Summarizing Tickets\\"")\\r    for record in dataset:\\r        payload = record\\r        summary_template = \\""\\""\\""\\r    \\r                    given the information {information} about a ticket from I want you to generate :\\r    \\r                    1. Summary basing on the whole information given.\\r    \\r                    2. A short summary on SLA Timeline\\r    \\r                    3. A short summary on Resolution and worknotes\\r    \\r                    5. A short summary on Priority and urgency\\r    \\r                    6. A short summary on created_by, assignmentgroup and assignedto\\r    \\r                    7. A short summary on Current Status\\r    \\r                    {format_instructions}\\r    \\r                \\""\\""\\""\\r    \\r        llm = AzureChatOpenAI(\\r    \\r            deployment_name=os.environ['deploymentName'],\\r    \\r            model_name='gpt-35-turbo',\\r    \\r            openai_api_key=os.environ['app_OPENAI_API_KEY'],\\r    \\r            openai_api_version=os.environ['openai_api_version'],\\r    \\r            # openai_api_base='https://azureft.openai.azure.com/',\\r    \\r            openai_api_base=os.environ['openai_api_base'],\\r    \\r            openai_api_type=os.environ['openai_api_type'],\\r    \\r            streaming=True,\\r    \\r            verbose=True\\r    \\r            )\\r    \\r    \\r        response_schemas = [\\r    \\r            ResponseSchema(name=\\""Summary\\"", description=\\""Summary basing on the whole information given.\\""),\\r    \\r            ResponseSchema(name=\\""Description\\"", description=\\""A short summary shortdescription and description\\""),\\r    \\r            ResponseSchema(name=\\""ResolutionNotes\\"", description=\\""A short summary on Resolution and worknotes\\""),\\r    \\r            ResponseSchema(name=\\""Priority and Urgency\\"", description=\\""A short summary on Priority and urgency\\""),\\r    \\r            ResponseSchema(name=\\""Owner\\"", description=\\""A short summary on created_by, assignmentgroup and assignedto\\""),\\r    \\r            ResponseSchema(name=\\""current_status\\"", description=\\""A short summary on Current Status and how long the ticket has been open.\\""),\\r    \\r        ]\\r    \\r        output_parser = StructuredOutputParser.from_response_schemas(response_schemas)\\r    \\r        format_instructions = output_parser.get_format_instructions()\\r    \\r        summary_prompt_template = PromptTemplate(input_variables=[\\""information\\""], template=summary_template,\\r    \\r                                                 partial_variables={\\""format_instructions\\"": format_instructions})\\r    \\r        response = LLMChain(llm=llm, prompt=summary_prompt_template)\\r    \\r        # print(chain.run(information=information))\\r    \\r        result = response.run(information=payload)\\r    \\r        result = result[7:]\\r    \\r        result = result[:-3]\\r        try:\\r            result = json.loads(result)\\r        \\r            summary_result = f'''{result['Summary']}\\r            \\r            Below are the point wise details of the incident:\\r        \\r                1.Description:{result[\\""Description\\""]}\\r        \\r                2.Owner:{result['Owner']}\\r        \\r                3.Priority and Urgency:{result['Priority and Urgency']}\\r        \\r                4.Resolution Notes:{result['ResolutionNotes']}\\r        \\r                5.Current Status:{result['current_status']}\\r        \\r            '''\\r            try:\\r                record['Ticket_Summary'] = json.dumps(summary_result)['Answer']\\r            except:\\r                record['Ticket_Summary'] = summary_result\\r        except:\\r            return result\\r    return dataset\\r""]},{""FunctionName"":""getTicketSentiments"",""requirements"":"""",""params"":[],""script"":[""def getTicketSentiments(dataset):\\r    logger.info(\\""Fetching Sentiment\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the sentiment of this customer message: {ticket content}. Return the sentiment in the following json: ```Sentiment: ___\\r        Explanation: ____```\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=250,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Ticket_Sentiment_Analysis_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Ticket_Sentiment'] = json.dumps(Ticket_Sentiment_Analysis_out)['Answer']\\r        except:\\r            record['Ticket_Sentiment'] = Ticket_Sentiment_Analysis_out\\r    return dataset""]},{""FunctionName"":""getPriority"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""def getPriority(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Priority\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r        prompt = f\\""\\""\\""\\r        Use the following historical ticket data for learning, but do not reference it in your explanation:\\r        {related_tickets[['shortdescription','priority']]}\\r        Now, analyze the urgency of this new issue: {ticket_content}\\r        \\r        Provide a logical reason for the assigned priority based solely on the issue's content, impact, and urgency.\\r        Do not mention historical data or patterns in your explanation.\\r        Return the priority in the following template:\\r        ```\\r        Priority: [1-5]\\r        Explanation: [Provide a logical reason for the assigned priority, focusing on the impact and urgency of the issue.]\\r        ```\\r        \\""\\""\\""\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Priority_Assignment_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Priority'] = json.dumps(Priority_Assignment_out)['Answer']\\r        except:\\r            record['Priority'] = Priority_Assignment_out\\r    return dataset\\r""]},{""FunctionName"":""getIncidentCategorization"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""import pandas as pd\\rimport ast \\rdef getIncidentCategorization(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Incident Categorization\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        \\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r\\r        prompt = f'''Based on historical data, categorize this support ticket: \\""{ticket_content}\\"".\\r        Consider the following information:\\r         {related_tickets[['shortdescription','category']]}\\r        \\r    \\r        Please provide your categorization in the following template:\\r        ```\\r        Category: ___\\r        Explanation: ____\\r        ```\\r        If you believe a different category is more appropriate, please explain why.'''\\r    \\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        incident_out = response['choices'][0]['message']['content']\\r        try:\\r            record['incidentCategorization'] = json.dumps(incident_out)['Answer']\\r        except:\\r            record['incidentCategorization'] = incident_out\\r    return dataset""]},{""FunctionName"":""getEntities"",""requirements"":""openai==0.28"",""params"":[],""script"":[""import openai\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\ropenai.api_type = os.environ[\\""openai_api_type\\""]\\ropenai.api_base = os.environ[\\""openai_api_base\\""]\\ropenai.api_version = os.environ[\\""openai_api_version\\""]\\ropenai.api_key = os.environ[\\""app_OPENAI_API_KEY\\""]\\r\\rdef getEntities( dataset):   \\r    logger.info('Total Tickets : {0}'.format( len(dataset)))\\r    logger.info(\\""Fetching Entities\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as list of string in json: ```_____\\r\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r        prompt_template = prompt  # Needs to refine Custom\\r\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        def OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r            response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=temperature,\\r            max_tokens=max_tokens,\\r            top_p=top_p,\\r            frequency_penalty=frequency_penalty,\\r            presence_penalty=presence_penalty,\\r            stop=stop)\\r            return response\\r\\r        response = OpenAIChatCompletion(prompt,\\r                                    temperature=0.3,\\r                                    max_tokens=250,\\r                                    top_p=1,\\r                                    frequency_penalty=0,\\r                                    presence_penalty=0,\\r                                    stop=None)\\r\\r        Ticket_entities_out = response['choices'][0]['message']['content']\\r        try:\\r            record['entites'] = json.loads(Ticket_entities_out)['Answer']\\r        except:\\r            record['entites'] = Ticket_entities_out\\r    return dataset\\r    \\r    \\rdef RelatedTickets(query,adapter,leap_url,org):\\r    # python-script Data\\r    \\r    url =f\\""{leap_url}/api/aip/adapters/{adapter}/semanticsearch_infer/{org}?isInstance=true\\""\\r    question = query\\r  \\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    print('PAYLOAD: ',payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r  \\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r        \\r        \\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return df\\r    except:\\r        return response.text\\r\\r    ""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""ChdqA"",""alias"":""Ticket Summarization"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""get_summary"",""requirements"":"""",""params"":[],""script"":[""from langchain_core.prompts import PromptTemplate\\rfrom langchain.output_parsers import ResponseSchema, StructuredOutputParser\\rfrom langchain.chat_models import AzureChatOpenAI\\rfrom langchain.chains import LLMChain\\r\\rdef get_summary(dataset):\\r    logger.info(\\""Summarizing Tickets\\"")\\r    for record in dataset:\\r        payload = record\\r        summary_template = \\""\\""\\""\\r    \\r                    given the information {information} about a ticket from I want you to generate :\\r    \\r                    1. Summary basing on the whole information given.\\r    \\r                    2. A short summary on SLA Timeline\\r    \\r                    3. A short summary on Resolution and worknotes\\r    \\r                    5. A short summary on Priority and urgency\\r    \\r                    6. A short summary on created_by, assignmentgroup and assignedto\\r    \\r                    7. A short summary on Current Status\\r    \\r                    {format_instructions}\\r    \\r                \\""\\""\\""\\r    \\r        llm = AzureChatOpenAI(\\r    \\r            deployment_name=os.environ['deploymentName'],\\r    \\r            model_name='gpt-35-turbo',\\r    \\r            openai_api_key=os.environ['app_OPENAI_API_KEY'],\\r    \\r            openai_api_version=os.environ['openai_api_version'],\\r    \\r            # openai_api_base='https://azureft.openai.azure.com/',\\r    \\r            openai_api_base=os.environ['openai_api_base'],\\r    \\r            openai_api_type=os.environ['openai_api_type'],\\r    \\r            streaming=True,\\r    \\r            verbose=True\\r    \\r            )\\r    \\r    \\r        response_schemas = [\\r    \\r            ResponseSchema(name=\\""Summary\\"", description=\\""Summary basing on the whole information given.\\""),\\r    \\r            ResponseSchema(name=\\""Description\\"", description=\\""A short summary shortdescription and description\\""),\\r    \\r            ResponseSchema(name=\\""ResolutionNotes\\"", description=\\""A short summary on Resolution and worknotes\\""),\\r    \\r            ResponseSchema(name=\\""Priority and Urgency\\"", description=\\""A short summary on Priority and urgency\\""),\\r    \\r            ResponseSchema(name=\\""Owner\\"", description=\\""A short summary on created_by, assignmentgroup and assignedto\\""),\\r    \\r            ResponseSchema(name=\\""current_status\\"", description=\\""A short summary on Current Status and how long the ticket has been open.\\""),\\r    \\r        ]\\r    \\r        output_parser = StructuredOutputParser.from_response_schemas(response_schemas)\\r    \\r        format_instructions = output_parser.get_format_instructions()\\r    \\r        summary_prompt_template = PromptTemplate(input_variables=[\\""information\\""], template=summary_template,\\r    \\r                                                 partial_variables={\\""format_instructions\\"": format_instructions})\\r    \\r        response = LLMChain(llm=llm, prompt=summary_prompt_template)\\r    \\r        # print(chain.run(information=information))\\r    \\r        result = response.run(information=payload)\\r    \\r        result = result[7:]\\r    \\r        result = result[:-3]\\r        try:\\r            result = json.loads(result)\\r        \\r            summary_result = f'''{result['Summary']}\\r            \\r            Below are the point wise details of the incident:\\r        \\r                1.Description:{result[\\""Description\\""]}\\r        \\r                2.Owner:{result['Owner']}\\r        \\r                3.Priority and Urgency:{result['Priority and Urgency']}\\r        \\r                4.Resolution Notes:{result['ResolutionNotes']}\\r        \\r                5.Current Status:{result['current_status']}\\r        \\r            '''\\r            try:\\r                record['Ticket_Summary'] = json.dumps(summary_result)['Answer']\\r            except:\\r                record['Ticket_Summary'] = summary_result\\r        except:\\r            return result\\r    return dataset\\r""]},""position_x"":""86"",""position_y"":""131"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""RMsSK"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""ZuXvc"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""getTicketSentiments"",""requirements"":"""",""params"":[],""script"":[""def getTicketSentiments(dataset):\\r    logger.info(\\""Fetching Sentiment\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the sentiment of this customer message: {ticket content}. Return the sentiment in the following json: ```Sentiment: ___\\r        Explanation: ____```\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=250,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Ticket_Sentiment_Analysis_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Ticket_Sentiment'] = json.dumps(Ticket_Sentiment_Analysis_out)['Answer']\\r        except:\\r            record['Ticket_Sentiment'] = Ticket_Sentiment_Analysis_out\\r    return dataset""]},{""FunctionName"":""getPriority"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""def getPriority(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Priority\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r        prompt = f\\""\\""\\""\\r        Use the following historical ticket data for learning, but do not reference it in your explanation:\\r        {related_tickets[['shortdescription','priority']]}\\r        Now, analyze the urgency of this new issue: {ticket_content}\\r        \\r        Provide a logical reason for the assigned priority based solely on the issue's content, impact, and urgency.\\r        Do not mention historical data or patterns in your explanation.\\r        Return the priority in the following template:\\r        ```\\r        Priority: [1-5]\\r        Explanation: [Provide a logical reason for the assigned priority, focusing on the impact and urgency of the issue.]\\r        ```\\r        \\""\\""\\""\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Priority_Assignment_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Priority'] = json.dumps(Priority_Assignment_out)['Answer']\\r        except:\\r            record['Priority'] = Priority_Assignment_out\\r    return dataset\\r""]},{""FunctionName"":""getIncidentCategorization"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""import pandas as pd\\rimport ast \\rdef getIncidentCategorization(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Incident Categorization\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        \\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r\\r        prompt = f'''Based on historical data, categorize this support ticket: \\""{ticket_content}\\"".\\r        Consider the following information:\\r         {related_tickets[['shortdescription','category']]}\\r        \\r    \\r        Please provide your categorization in the following template:\\r        ```\\r        Category: ___\\r        Explanation: ____\\r        ```\\r        If you believe a different category is more appropriate, please explain why.'''\\r    \\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        incident_out = response['choices'][0]['message']['content']\\r        try:\\r            record['incidentCategorization'] = json.dumps(incident_out)['Answer']\\r        except:\\r            record['incidentCategorization'] = incident_out\\r    return dataset""]},{""FunctionName"":""getEntities"",""requirements"":""openai==0.28"",""params"":[],""script"":[""import openai\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\ropenai.api_type = os.environ[\\""openai_api_type\\""]\\ropenai.api_base = os.environ[\\""openai_api_base\\""]\\ropenai.api_version = os.environ[\\""openai_api_version\\""]\\ropenai.api_key = os.environ[\\""app_OPENAI_API_KEY\\""]\\r\\rdef getEntities( dataset):   \\r    logger.info('Total Tickets : {0}'.format( len(dataset)))\\r    logger.info(\\""Fetching Entities\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as list of string in json: ```_____\\r\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r        prompt_template = prompt  # Needs to refine Custom\\r\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        def OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r            response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=temperature,\\r            max_tokens=max_tokens,\\r            top_p=top_p,\\r            frequency_penalty=frequency_penalty,\\r            presence_penalty=presence_penalty,\\r            stop=stop)\\r            return response\\r\\r        response = OpenAIChatCompletion(prompt,\\r                                    temperature=0.3,\\r                                    max_tokens=250,\\r                                    top_p=1,\\r                                    frequency_penalty=0,\\r                                    presence_penalty=0,\\r                                    stop=None)\\r\\r        Ticket_entities_out = response['choices'][0]['message']['content']\\r        try:\\r            record['entites'] = json.loads(Ticket_entities_out)['Answer']\\r        except:\\r            record['entites'] = Ticket_entities_out\\r    return dataset\\r    \\r    \\rdef RelatedTickets(query,adapter,leap_url,org):\\r    # python-script Data\\r    \\r    url =f\\""{leap_url}/api/aip/adapters/{adapter}/semanticsearch_infer/{org}?isInstance=true\\""\\r    question = query\\r  \\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    print('PAYLOAD: ',payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r  \\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r        \\r        \\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return df\\r    except:\\r        return response.text\\r\\r    ""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""ljmjO"",""alias"":""RecommendedResolution"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""RecommendedResolution"",""requirements"":"""",""params"":[],""script"":[""import requests\\rimport json\\rdef RecommendedResolution( dataset):    #python-script Data\\r    logger.info(\\""Fetching Recommended Resolution\\"")\\r    url =os.environ[\\""SemanticSearchURL\\""]\\r    for record in dataset:\\r        \\r        question = \\""What are the steps to resolve ticket with description:\\"" + record['shortdescription']\\r        payload = {\\""config\\"":{\\""VectorStoreConfig\\"":\\r            {\\""DB_Type\\"":\\""Faiss\\"",\\""query\\"":question,\\""index_name\\"":\\""LeapSop\\""},\\r            \\""LLMConfig\\"":{\\""LLM_Type\\"":\\""OnPrem\\"",\\""query\\"":question},\\r            \\""EmbeddingConfig\\"":{}}}\\r        headers = {\\r            'Content-Type': 'application/json'\\r                }\\r    \\r        try:\\r            response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False, proxies={'http':'','https':''})\\r        except:\\r            print('Connection to Semantic search failed. Please run Generic Rag chain and configure semantic search url in environment')\\r            break\\r        try:\\r            response=json.loads(response.text)\\r            record['RecommendedResolution'] =  response[0]['Answer']\\r        except:\\r            record['RecommendedResolution']= response.text\\r        \\r    return dataset""]},""position_x"":""839"",""position_y"":""132"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""Srgti"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""ZaHIH"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""getAutomatedFollow_ups"",""requirements"":"""",""params"":[],""script"":[""from datetime import datetime\\r\\rdef getAutomatedFollow_ups(dataset):\\r    logger.info(\\""Fetching Automated FollowUps\\"")\\r    for record in dataset:\\r        ticket_content = record['number']\\r        current_date = datetime.now()\\r        updated_date = record['lastUpdated']\\r        prompt = f'''Draft a follow-up message for ticket number: {ticket_content}. \\r        Based on the above ticket data, identify ticket pendancy days = {current_date} - {updated_date}. The SLA for ticket pendancy is 7 days. \\r        If the ticket status is Open and with Support team then generate a response to update customer about work in progress. \\r        If the ticket status is Open and with Customer then generate a response to remind the customer to provide the inputs. \\r        If the ticket status is marked for closure and with Customer then generate a response to remind the customer to verify and close the ticket.'''\\r        #prompt_template = prompt # Needs to refine Custom\\r        #prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        #prompt = prompt_template.replace('{ticket content}', ticket_content,'{current date}', current_date,'{ticket last updated date}', updated_date)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=1,\\r            max_tokens=150,\\r            top_p=1,\\r            frequency_penalty=1.6,\\r            presence_penalty=0,\\r            stop=None)\\r        AutomatedFollow_ups_out = response['choices'][0]['message']['content']\\r        try:\\r            record['AutomatedFollow_ups'] = json.dumps(AutomatedFollow_ups_out)['Answer']\\r        except:\\r            record['AutomatedFollow_ups'] = AutomatedFollow_ups_out\\r    return dataset\\r""]},{""FunctionName"":""getFirstResponse"",""requirements"":"""",""params"":[],""script"":[""def getFirstResponse(dataset):\\r    logger.info(\\""Fetching First Response\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Based on this customer message {ticket content}, draft a response. To assess the candidate's ability to draft a first response, we were looking for the following:\\r        An understanding of the issue raised by the customer\\r        A clear and concise response that addresses the issue\\r        A polite and professional tone\\r        A clear call to action.\\r        If the provided context doesn't provide enough information, you are allowed to use your knowledge and experience to offer you the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=1,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        First_Response_out = response['choices'][0]['message']['content']\\r        try:\\r            record['First_Response'] = json.dumps(First_Response_out)['Answer']\\r        except:\\r            record['First_Response'] = First_Response_out\\r    return dataset""]},{""FunctionName"":""getLanguageTranslation"",""requirements"":"""",""params"":[],""script"":[""def getLanguageTranslation(dataset):\\r    logger.info(\\""Language Translation\\"")\\r    for record in dataset:\\r        ticket_content = record['Ticket_Summary']\\r        prompt = '''Translate this customer ticket from source language to English: {ticket content}.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.8,\\r            max_tokens=60,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Language_Translation_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Language_Translation'] = json.dumps(Language_Translation_out)['Answer']\\r        except:\\r            record['Language_Translation'] = Language_Translation_out\\r    return dataset""]},{""FunctionName"":""get_summary"",""requirements"":"""",""params"":[],""script"":[""from langchain_core.prompts import PromptTemplate\\rfrom langchain.output_parsers import ResponseSchema, StructuredOutputParser\\rfrom langchain.chat_models import AzureChatOpenAI\\rfrom langchain.chains import LLMChain\\r\\rdef get_summary(dataset):\\r    logger.info(\\""Summarizing Tickets\\"")\\r    for record in dataset:\\r        payload = record\\r        summary_template = \\""\\""\\""\\r    \\r                    given the information {information} about a ticket from I want you to generate :\\r    \\r                    1. Summary basing on the whole information given.\\r    \\r                    2. A short summary on SLA Timeline\\r    \\r                    3. A short summary on Resolution and worknotes\\r    \\r                    5. A short summary on Priority and urgency\\r    \\r                    6. A short summary on created_by, assignmentgroup and assignedto\\r    \\r                    7. A short summary on Current Status\\r    \\r                    {format_instructions}\\r    \\r                \\""\\""\\""\\r    \\r        llm = AzureChatOpenAI(\\r    \\r            deployment_name=os.environ['deploymentName'],\\r    \\r            model_name='gpt-35-turbo',\\r    \\r            openai_api_key=os.environ['app_OPENAI_API_KEY'],\\r    \\r            openai_api_version=os.environ['openai_api_version'],\\r    \\r            # openai_api_base='https://azureft.openai.azure.com/',\\r    \\r            openai_api_base=os.environ['openai_api_base'],\\r    \\r            openai_api_type=os.environ['openai_api_type'],\\r    \\r            streaming=True,\\r    \\r            verbose=True\\r    \\r            )\\r    \\r    \\r        response_schemas = [\\r    \\r            ResponseSchema(name=\\""Summary\\"", description=\\""Summary basing on the whole information given.\\""),\\r    \\r            ResponseSchema(name=\\""Description\\"", description=\\""A short summary shortdescription and description\\""),\\r    \\r            ResponseSchema(name=\\""ResolutionNotes\\"", description=\\""A short summary on Resolution and worknotes\\""),\\r    \\r            ResponseSchema(name=\\""Priority and Urgency\\"", description=\\""A short summary on Priority and urgency\\""),\\r    \\r            ResponseSchema(name=\\""Owner\\"", description=\\""A short summary on created_by, assignmentgroup and assignedto\\""),\\r    \\r            ResponseSchema(name=\\""current_status\\"", description=\\""A short summary on Current Status and how long the ticket has been open.\\""),\\r    \\r        ]\\r    \\r        output_parser = StructuredOutputParser.from_response_schemas(response_schemas)\\r    \\r        format_instructions = output_parser.get_format_instructions()\\r    \\r        summary_prompt_template = PromptTemplate(input_variables=[\\""information\\""], template=summary_template,\\r    \\r                                                 partial_variables={\\""format_instructions\\"": format_instructions})\\r    \\r        response = LLMChain(llm=llm, prompt=summary_prompt_template)\\r    \\r        # print(chain.run(information=information))\\r    \\r        result = response.run(information=payload)\\r    \\r        result = result[7:]\\r    \\r        result = result[:-3]\\r        try:\\r            result = json.loads(result)\\r        \\r            summary_result = f'''{result['Summary']}\\r            \\r            Below are the point wise details of the incident:\\r        \\r                1.Description:{result[\\""Description\\""]}\\r        \\r                2.Owner:{result['Owner']}\\r        \\r                3.Priority and Urgency:{result['Priority and Urgency']}\\r        \\r                4.Resolution Notes:{result['ResolutionNotes']}\\r        \\r                5.Current Status:{result['current_status']}\\r        \\r            '''\\r            try:\\r                record['Ticket_Summary'] = json.dumps(summary_result)['Answer']\\r            except:\\r                record['Ticket_Summary'] = summary_result\\r        except:\\r            return result\\r    return dataset\\r""]},{""FunctionName"":""getTicketSentiments"",""requirements"":"""",""params"":[],""script"":[""def getTicketSentiments(dataset):\\r    logger.info(\\""Fetching Sentiment\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the sentiment of this customer message: {ticket content}. Return the sentiment in the following json: ```Sentiment: ___\\r        Explanation: ____```\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=250,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Ticket_Sentiment_Analysis_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Ticket_Sentiment'] = json.dumps(Ticket_Sentiment_Analysis_out)['Answer']\\r        except:\\r            record['Ticket_Sentiment'] = Ticket_Sentiment_Analysis_out\\r    return dataset""]},{""FunctionName"":""getPriority"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""def getPriority(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Priority\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r        prompt = f\\""\\""\\""\\r        Use the following historical ticket data for learning, but do not reference it in your explanation:\\r        {related_tickets[['shortdescription','priority']]}\\r        Now, analyze the urgency of this new issue: {ticket_content}\\r        \\r        Provide a logical reason for the assigned priority based solely on the issue's content, impact, and urgency.\\r        Do not mention historical data or patterns in your explanation.\\r        Return the priority in the following template:\\r        ```\\r        Priority: [1-5]\\r        Explanation: [Provide a logical reason for the assigned priority, focusing on the impact and urgency of the issue.]\\r        ```\\r        \\""\\""\\""\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Priority_Assignment_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Priority'] = json.dumps(Priority_Assignment_out)['Answer']\\r        except:\\r            record['Priority'] = Priority_Assignment_out\\r    return dataset\\r""]},{""FunctionName"":""getIncidentCategorization"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""import pandas as pd\\rimport ast \\rdef getIncidentCategorization(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Incident Categorization\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        \\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r\\r        prompt = f'''Based on historical data, categorize this support ticket: \\""{ticket_content}\\"".\\r        Consider the following information:\\r         {related_tickets[['shortdescription','category']]}\\r        \\r    \\r        Please provide your categorization in the following template:\\r        ```\\r        Category: ___\\r        Explanation: ____\\r        ```\\r        If you believe a different category is more appropriate, please explain why.'''\\r    \\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        incident_out = response['choices'][0]['message']['content']\\r        try:\\r            record['incidentCategorization'] = json.dumps(incident_out)['Answer']\\r        except:\\r            record['incidentCategorization'] = incident_out\\r    return dataset""]},{""FunctionName"":""getEntities"",""requirements"":""openai==0.28"",""params"":[],""script"":[""import openai\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\ropenai.api_type = os.environ[\\""openai_api_type\\""]\\ropenai.api_base = os.environ[\\""openai_api_base\\""]\\ropenai.api_version = os.environ[\\""openai_api_version\\""]\\ropenai.api_key = os.environ[\\""app_OPENAI_API_KEY\\""]\\r\\rdef getEntities( dataset):   \\r    logger.info('Total Tickets : {0}'.format( len(dataset)))\\r    logger.info(\\""Fetching Entities\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as list of string in json: ```_____\\r\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r        prompt_template = prompt  # Needs to refine Custom\\r\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        def OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r            response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=temperature,\\r            max_tokens=max_tokens,\\r            top_p=top_p,\\r            frequency_penalty=frequency_penalty,\\r            presence_penalty=presence_penalty,\\r            stop=stop)\\r            return response\\r\\r        response = OpenAIChatCompletion(prompt,\\r                                    temperature=0.3,\\r                                    max_tokens=250,\\r                                    top_p=1,\\r                                    frequency_penalty=0,\\r                                    presence_penalty=0,\\r                                    stop=None)\\r\\r        Ticket_entities_out = response['choices'][0]['message']['content']\\r        try:\\r            record['entites'] = json.loads(Ticket_entities_out)['Answer']\\r        except:\\r            record['entites'] = Ticket_entities_out\\r    return dataset\\r    \\r    \\rdef RelatedTickets(query,adapter,leap_url,org):\\r    # python-script Data\\r    \\r    url =f\\""{leap_url}/api/aip/adapters/{adapter}/semanticsearch_infer/{org}?isInstance=true\\""\\r    question = query\\r  \\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    print('PAYLOAD: ',payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r  \\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r        \\r        \\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return df\\r    except:\\r        return response.text\\r\\r    ""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""ZaHIH"",""alias"":""Python Script"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""postProcessing"",""requirements"":"""",""params"":[],""script"":[""from datetime import datetime\\rdef postProcessing( dataset):    #python-script Data\\r    results = []\\r    for record in dataset:\\r        row = {}\\r        row['number'] = record['number']\\r        row['entites'] = record['entites']\\r        row['incidentCategorization'] = record['incidentCategorization']\\r        row['Priority'] = record['Priority']\\r        row['Ticket_Sentiment'] = record['Ticket_Sentiment']\\r        row['Language_Translation'] = record['Language_Translation']\\r        row['First_Response'] = record['First_Response']\\r        row['AutomatedFollow_ups'] = record['AutomatedFollow_ups']\\r        row['Ticket_Summary'] = record['Ticket_Summary']\\r        row['RecommendedResolution']= record.get('RecommendedResolution','')\\r        row['lastUpdatedBy'] = datetime.now()\\r        results.append(row)\\r    return results""]},""position_x"":""479"",""position_y"":""277"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""ljmjO"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""KpZFx"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""RecommendedResolution"",""requirements"":"""",""params"":[],""script"":[""import requests\\rimport json\\rdef RecommendedResolution( dataset):    #python-script Data\\r    logger.info(\\""Fetching Recommended Resolution\\"")\\r    url =os.environ[\\""SemanticSearchURL\\""]\\r    for record in dataset:\\r        \\r        question = \\""What are the steps to resolve ticket with description:\\"" + record['shortdescription']\\r        payload = {\\""config\\"":{\\""VectorStoreConfig\\"":\\r            {\\""DB_Type\\"":\\""Faiss\\"",\\""query\\"":question,\\""index_name\\"":\\""LeapSop\\""},\\r            \\""LLMConfig\\"":{\\""LLM_Type\\"":\\""OnPrem\\"",\\""query\\"":question},\\r            \\""EmbeddingConfig\\"":{}}}\\r        headers = {\\r            'Content-Type': 'application/json'\\r                }\\r    \\r        try:\\r            response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False, proxies={'http':'','https':''})\\r        except:\\r            print('Connection to Semantic search failed. Please run Generic Rag chain and configure semantic search url in environment')\\r            break\\r        try:\\r            response=json.loads(response.text)\\r            record['RecommendedResolution'] =  response[0]['Answer']\\r        except:\\r            record['RecommendedResolution']= response.text\\r        \\r    return dataset""]},{""FunctionName"":""getAutomatedFollow_ups"",""requirements"":"""",""params"":[],""script"":[""from datetime import datetime\\r\\rdef getAutomatedFollow_ups(dataset):\\r    logger.info(\\""Fetching Automated FollowUps\\"")\\r    for record in dataset:\\r        ticket_content = record['number']\\r        current_date = datetime.now()\\r        updated_date = record['lastUpdated']\\r        prompt = f'''Draft a follow-up message for ticket number: {ticket_content}. \\r        Based on the above ticket data, identify ticket pendancy days = {current_date} - {updated_date}. The SLA for ticket pendancy is 7 days. \\r        If the ticket status is Open and with Support team then generate a response to update customer about work in progress. \\r        If the ticket status is Open and with Customer then generate a response to remind the customer to provide the inputs. \\r        If the ticket status is marked for closure and with Customer then generate a response to remind the customer to verify and close the ticket.'''\\r        #prompt_template = prompt # Needs to refine Custom\\r        #prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        #prompt = prompt_template.replace('{ticket content}', ticket_content,'{current date}', current_date,'{ticket last updated date}', updated_date)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=1,\\r            max_tokens=150,\\r            top_p=1,\\r            frequency_penalty=1.6,\\r            presence_penalty=0,\\r            stop=None)\\r        AutomatedFollow_ups_out = response['choices'][0]['message']['content']\\r        try:\\r            record['AutomatedFollow_ups'] = json.dumps(AutomatedFollow_ups_out)['Answer']\\r        except:\\r            record['AutomatedFollow_ups'] = AutomatedFollow_ups_out\\r    return dataset\\r""]},{""FunctionName"":""getFirstResponse"",""requirements"":"""",""params"":[],""script"":[""def getFirstResponse(dataset):\\r    logger.info(\\""Fetching First Response\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Based on this customer message {ticket content}, draft a response. To assess the candidate's ability to draft a first response, we were looking for the following:\\r        An understanding of the issue raised by the customer\\r        A clear and concise response that addresses the issue\\r        A polite and professional tone\\r        A clear call to action.\\r        If the provided context doesn't provide enough information, you are allowed to use your knowledge and experience to offer you the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=1,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        First_Response_out = response['choices'][0]['message']['content']\\r        try:\\r            record['First_Response'] = json.dumps(First_Response_out)['Answer']\\r        except:\\r            record['First_Response'] = First_Response_out\\r    return dataset""]},{""FunctionName"":""getLanguageTranslation"",""requirements"":"""",""params"":[],""script"":[""def getLanguageTranslation(dataset):\\r    logger.info(\\""Language Translation\\"")\\r    for record in dataset:\\r        ticket_content = record['Ticket_Summary']\\r        prompt = '''Translate this customer ticket from source language to English: {ticket content}.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.8,\\r            max_tokens=60,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Language_Translation_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Language_Translation'] = json.dumps(Language_Translation_out)['Answer']\\r        except:\\r            record['Language_Translation'] = Language_Translation_out\\r    return dataset""]},{""FunctionName"":""get_summary"",""requirements"":"""",""params"":[],""script"":[""from langchain_core.prompts import PromptTemplate\\rfrom langchain.output_parsers import ResponseSchema, StructuredOutputParser\\rfrom langchain.chat_models import AzureChatOpenAI\\rfrom langchain.chains import LLMChain\\r\\rdef get_summary(dataset):\\r    logger.info(\\""Summarizing Tickets\\"")\\r    for record in dataset:\\r        payload = record\\r        summary_template = \\""\\""\\""\\r    \\r                    given the information {information} about a ticket from I want you to generate :\\r    \\r                    1. Summary basing on the whole information given.\\r    \\r                    2. A short summary on SLA Timeline\\r    \\r                    3. A short summary on Resolution and worknotes\\r    \\r                    5. A short summary on Priority and urgency\\r    \\r                    6. A short summary on created_by, assignmentgroup and assignedto\\r    \\r                    7. A short summary on Current Status\\r    \\r                    {format_instructions}\\r    \\r                \\""\\""\\""\\r    \\r        llm = AzureChatOpenAI(\\r    \\r            deployment_name=os.environ['deploymentName'],\\r    \\r            model_name='gpt-35-turbo',\\r    \\r            openai_api_key=os.environ['app_OPENAI_API_KEY'],\\r    \\r            openai_api_version=os.environ['openai_api_version'],\\r    \\r            # openai_api_base='https://azureft.openai.azure.com/',\\r    \\r            openai_api_base=os.environ['openai_api_base'],\\r    \\r            openai_api_type=os.environ['openai_api_type'],\\r    \\r            streaming=True,\\r    \\r            verbose=True\\r    \\r            )\\r    \\r    \\r        response_schemas = [\\r    \\r            ResponseSchema(name=\\""Summary\\"", description=\\""Summary basing on the whole information given.\\""),\\r    \\r            ResponseSchema(name=\\""Description\\"", description=\\""A short summary shortdescription and description\\""),\\r    \\r            ResponseSchema(name=\\""ResolutionNotes\\"", description=\\""A short summary on Resolution and worknotes\\""),\\r    \\r            ResponseSchema(name=\\""Priority and Urgency\\"", description=\\""A short summary on Priority and urgency\\""),\\r    \\r            ResponseSchema(name=\\""Owner\\"", description=\\""A short summary on created_by, assignmentgroup and assignedto\\""),\\r    \\r            ResponseSchema(name=\\""current_status\\"", description=\\""A short summary on Current Status and how long the ticket has been open.\\""),\\r    \\r        ]\\r    \\r        output_parser = StructuredOutputParser.from_response_schemas(response_schemas)\\r    \\r        format_instructions = output_parser.get_format_instructions()\\r    \\r        summary_prompt_template = PromptTemplate(input_variables=[\\""information\\""], template=summary_template,\\r    \\r                                                 partial_variables={\\""format_instructions\\"": format_instructions})\\r    \\r        response = LLMChain(llm=llm, prompt=summary_prompt_template)\\r    \\r        # print(chain.run(information=information))\\r    \\r        result = response.run(information=payload)\\r    \\r        result = result[7:]\\r    \\r        result = result[:-3]\\r        try:\\r            result = json.loads(result)\\r        \\r            summary_result = f'''{result['Summary']}\\r            \\r            Below are the point wise details of the incident:\\r        \\r                1.Description:{result[\\""Description\\""]}\\r        \\r                2.Owner:{result['Owner']}\\r        \\r                3.Priority and Urgency:{result['Priority and Urgency']}\\r        \\r                4.Resolution Notes:{result['ResolutionNotes']}\\r        \\r                5.Current Status:{result['current_status']}\\r        \\r            '''\\r            try:\\r                record['Ticket_Summary'] = json.dumps(summary_result)['Answer']\\r            except:\\r                record['Ticket_Summary'] = summary_result\\r        except:\\r            return result\\r    return dataset\\r""]},{""FunctionName"":""getTicketSentiments"",""requirements"":"""",""params"":[],""script"":[""def getTicketSentiments(dataset):\\r    logger.info(\\""Fetching Sentiment\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the sentiment of this customer message: {ticket content}. Return the sentiment in the following json: ```Sentiment: ___\\r        Explanation: ____```\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=250,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Ticket_Sentiment_Analysis_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Ticket_Sentiment'] = json.dumps(Ticket_Sentiment_Analysis_out)['Answer']\\r        except:\\r            record['Ticket_Sentiment'] = Ticket_Sentiment_Analysis_out\\r    return dataset""]},{""FunctionName"":""getPriority"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""def getPriority(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Priority\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r        prompt = f\\""\\""\\""\\r        Use the following historical ticket data for learning, but do not reference it in your explanation:\\r        {related_tickets[['shortdescription','priority']]}\\r        Now, analyze the urgency of this new issue: {ticket_content}\\r        \\r        Provide a logical reason for the assigned priority based solely on the issue's content, impact, and urgency.\\r        Do not mention historical data or patterns in your explanation.\\r        Return the priority in the following template:\\r        ```\\r        Priority: [1-5]\\r        Explanation: [Provide a logical reason for the assigned priority, focusing on the impact and urgency of the issue.]\\r        ```\\r        \\""\\""\\""\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Priority_Assignment_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Priority'] = json.dumps(Priority_Assignment_out)['Answer']\\r        except:\\r            record['Priority'] = Priority_Assignment_out\\r    return dataset\\r""]},{""FunctionName"":""getIncidentCategorization"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""import pandas as pd\\rimport ast \\rdef getIncidentCategorization(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Incident Categorization\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        \\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r\\r        prompt = f'''Based on historical data, categorize this support ticket: \\""{ticket_content}\\"".\\r        Consider the following information:\\r         {related_tickets[['shortdescription','category']]}\\r        \\r    \\r        Please provide your categorization in the following template:\\r        ```\\r        Category: ___\\r        Explanation: ____\\r        ```\\r        If you believe a different category is more appropriate, please explain why.'''\\r    \\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        incident_out = response['choices'][0]['message']['content']\\r        try:\\r            record['incidentCategorization'] = json.dumps(incident_out)['Answer']\\r        except:\\r            record['incidentCategorization'] = incident_out\\r    return dataset""]},{""FunctionName"":""getEntities"",""requirements"":""openai==0.28"",""params"":[],""script"":[""import openai\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\ropenai.api_type = os.environ[\\""openai_api_type\\""]\\ropenai.api_base = os.environ[\\""openai_api_base\\""]\\ropenai.api_version = os.environ[\\""openai_api_version\\""]\\ropenai.api_key = os.environ[\\""app_OPENAI_API_KEY\\""]\\r\\rdef getEntities( dataset):   \\r    logger.info('Total Tickets : {0}'.format( len(dataset)))\\r    logger.info(\\""Fetching Entities\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as list of string in json: ```_____\\r\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r        prompt_template = prompt  # Needs to refine Custom\\r\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        def OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r            response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=temperature,\\r            max_tokens=max_tokens,\\r            top_p=top_p,\\r            frequency_penalty=frequency_penalty,\\r            presence_penalty=presence_penalty,\\r            stop=stop)\\r            return response\\r\\r        response = OpenAIChatCompletion(prompt,\\r                                    temperature=0.3,\\r                                    max_tokens=250,\\r                                    top_p=1,\\r                                    frequency_penalty=0,\\r                                    presence_penalty=0,\\r                                    stop=None)\\r\\r        Ticket_entities_out = response['choices'][0]['message']['content']\\r        try:\\r            record['entites'] = json.loads(Ticket_entities_out)['Answer']\\r        except:\\r            record['entites'] = Ticket_entities_out\\r    return dataset\\r    \\r    \\rdef RelatedTickets(query,adapter,leap_url,org):\\r    # python-script Data\\r    \\r    url =f\\""{leap_url}/api/aip/adapters/{adapter}/semanticsearch_infer/{org}?isInstance=true\\""\\r    question = query\\r  \\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    print('PAYLOAD: ',payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r  \\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r        \\r        \\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return df\\r    except:\\r        return response.text\\r\\r    ""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""KpZFx"",""alias"":""Dataset Loader"",""name"":""Dataset Loader"",""classname"":""DatasetLoader"",""category"":""Loader"",""attributes"":{""dataset"":{""lastmodifiedby"":""Anonymous"",""lastmodifieddate"":""2024-02-15 06:01:57"",""alias"":""GenAI Recommendations"",""id"":2684,""name"":""LEOGNRCM43086"",""description"":null,""schema"":null,""schemajson"":""null"",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""Select * from @projectname_genairecommendations\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""overwrite\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""@projectname_genairecommendations\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null}},""position_x"":""673"",""position_y"":""293"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""ZaHIH"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[],""formats"":{""dataset"":""dropdown""},""codeGeneration"":{""REST"":{},""requirements"":[],""imports"":[""import importlib""],""MYSQL"":{},""MSSQL"":{},""AWS"":{},""POSTGRESQL"":{},""script"":""def DatasetLoader_<id>(dataset,dataset_param={}):\\r    datasetName = dataset_param.get('alias',dataset_param.get('name'))\\r    loadertype = dataset_param['datasource'].get('type','')\\r    if loadertype == '':\\r        logger.error('Datasource Type mapping not found. Validate Dataset Loader datasource mapping')\\r    logger.info('Loading Dataset - {0} of type {1}'.format(datasetName, loadertype))\\r    datasetAttributes = dataset_param['attributes']\\r    if type(datasetAttributes) is str:\\r        datasetAttributes = json.loads(datasetAttributes)\\r    datasource = dataset_param['datasource']\\r    datasourceAttributes = json.loads(datasource['connectionDetails'])\\r    datasourceAttributes['salt'] = datasource.get('salt', '')\\r    datasetAttributes['schema'] = dataset_param.get('schema','')\\r    datasetAttributes['applySchema'] = False\\r    for item in datasourceAttributes.keys():\\r        if '_vault' not in item:\\r            from leaputils import Vault\\r            try:\\r                isvault=datasourceAttributes[item+'_vault']\\r                if isvault:\\r                    value = Vault.getPassword(datasourceAttributes[item])\\r                    datasourceAttributes[item] = value\\r            except:\\r                a=1\\r    loader = ''\\r    import importlib.util\\r    # load from plugins path\\r    EXTRA_PLUGINS_PATH = os.environ.get('EXTRA_PLUGINS_PATH','')\\r    if not os.path.exists(EXTRA_PLUGINS_PATH) or EXTRA_PLUGINS_PATH =='':\\r        EXTRA_PLUGINS_PATH = '/root/plugins'\\r        logger.error('EXTRA_PLUGINS_PATH not a valid Path. Please update icip.environment - EXTRA_PLUGINS_PATH constant')\\r    file_path = os.path.join(EXTRA_PLUGINS_PATH, 'loaders', f'{loadertype}.py')\\r    print('FilePath', file_path)\\r    \\r    spec = importlib.util.spec_from_file_location('Loader', file_path)\\r    module = importlib.util.module_from_spec(spec)\\r    sys.modules['Loader'] = module\\r    spec.loader.exec_module(module)\\r    class_name = loadertype  # ask user - className\\r    loader = getattr(module, class_name)\\r    loader = loader(datasourceAttributes, datasetAttributes)\\r    if loader == '':\\r        logger.error('No loader configured for type {0}'.format(loadertype))\\r    \\r    loader.loadData(dataset)\\r    print('Data Saved')\\r\\n""},""context"":[{""FunctionName"":""postProcessing"",""requirements"":"""",""params"":[],""script"":[""from datetime import datetime\\rdef postProcessing( dataset):    #python-script Data\\r    results = []\\r    for record in dataset:\\r        row = {}\\r        row['number'] = record['number']\\r        row['entites'] = record['entites']\\r        row['incidentCategorization'] = record['incidentCategorization']\\r        row['Priority'] = record['Priority']\\r        row['Ticket_Sentiment'] = record['Ticket_Sentiment']\\r        row['Language_Translation'] = record['Language_Translation']\\r        row['First_Response'] = record['First_Response']\\r        row['AutomatedFollow_ups'] = record['AutomatedFollow_ups']\\r        row['Ticket_Summary'] = record['Ticket_Summary']\\r        row['RecommendedResolution']= record.get('RecommendedResolution','')\\r        row['lastUpdatedBy'] = datetime.now()\\r        results.append(row)\\r    return results""]},{""FunctionName"":""RecommendedResolution"",""requirements"":"""",""params"":[],""script"":[""import requests\\rimport json\\rdef RecommendedResolution( dataset):    #python-script Data\\r    logger.info(\\""Fetching Recommended Resolution\\"")\\r    url =os.environ[\\""SemanticSearchURL\\""]\\r    for record in dataset:\\r        \\r        question = \\""What are the steps to resolve ticket with description:\\"" + record['shortdescription']\\r        payload = {\\""config\\"":{\\""VectorStoreConfig\\"":\\r            {\\""DB_Type\\"":\\""Faiss\\"",\\""query\\"":question,\\""index_name\\"":\\""LeapSop\\""},\\r            \\""LLMConfig\\"":{\\""LLM_Type\\"":\\""OnPrem\\"",\\""query\\"":question},\\r            \\""EmbeddingConfig\\"":{}}}\\r        headers = {\\r            'Content-Type': 'application/json'\\r                }\\r    \\r        try:\\r            response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False, proxies={'http':'','https':''})\\r        except:\\r            print('Connection to Semantic search failed. Please run Generic Rag chain and configure semantic search url in environment')\\r            break\\r        try:\\r            response=json.loads(response.text)\\r            record['RecommendedResolution'] =  response[0]['Answer']\\r        except:\\r            record['RecommendedResolution']= response.text\\r        \\r    return dataset""]},{""FunctionName"":""getAutomatedFollow_ups"",""requirements"":"""",""params"":[],""script"":[""from datetime import datetime\\r\\rdef getAutomatedFollow_ups(dataset):\\r    logger.info(\\""Fetching Automated FollowUps\\"")\\r    for record in dataset:\\r        ticket_content = record['number']\\r        current_date = datetime.now()\\r        updated_date = record['lastUpdated']\\r        prompt = f'''Draft a follow-up message for ticket number: {ticket_content}. \\r        Based on the above ticket data, identify ticket pendancy days = {current_date} - {updated_date}. The SLA for ticket pendancy is 7 days. \\r        If the ticket status is Open and with Support team then generate a response to update customer about work in progress. \\r        If the ticket status is Open and with Customer then generate a response to remind the customer to provide the inputs. \\r        If the ticket status is marked for closure and with Customer then generate a response to remind the customer to verify and close the ticket.'''\\r        #prompt_template = prompt # Needs to refine Custom\\r        #prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        #prompt = prompt_template.replace('{ticket content}', ticket_content,'{current date}', current_date,'{ticket last updated date}', updated_date)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=1,\\r            max_tokens=150,\\r            top_p=1,\\r            frequency_penalty=1.6,\\r            presence_penalty=0,\\r            stop=None)\\r        AutomatedFollow_ups_out = response['choices'][0]['message']['content']\\r        try:\\r            record['AutomatedFollow_ups'] = json.dumps(AutomatedFollow_ups_out)['Answer']\\r        except:\\r            record['AutomatedFollow_ups'] = AutomatedFollow_ups_out\\r    return dataset\\r""]},{""FunctionName"":""getFirstResponse"",""requirements"":"""",""params"":[],""script"":[""def getFirstResponse(dataset):\\r    logger.info(\\""Fetching First Response\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Based on this customer message {ticket content}, draft a response. To assess the candidate's ability to draft a first response, we were looking for the following:\\r        An understanding of the issue raised by the customer\\r        A clear and concise response that addresses the issue\\r        A polite and professional tone\\r        A clear call to action.\\r        If the provided context doesn't provide enough information, you are allowed to use your knowledge and experience to offer you the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=1,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        First_Response_out = response['choices'][0]['message']['content']\\r        try:\\r            record['First_Response'] = json.dumps(First_Response_out)['Answer']\\r        except:\\r            record['First_Response'] = First_Response_out\\r    return dataset""]},{""FunctionName"":""getLanguageTranslation"",""requirements"":"""",""params"":[],""script"":[""def getLanguageTranslation(dataset):\\r    logger.info(\\""Language Translation\\"")\\r    for record in dataset:\\r        ticket_content = record['Ticket_Summary']\\r        prompt = '''Translate this customer ticket from source language to English: {ticket content}.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.8,\\r            max_tokens=60,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Language_Translation_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Language_Translation'] = json.dumps(Language_Translation_out)['Answer']\\r        except:\\r            record['Language_Translation'] = Language_Translation_out\\r    return dataset""]},{""FunctionName"":""get_summary"",""requirements"":"""",""params"":[],""script"":[""from langchain_core.prompts import PromptTemplate\\rfrom langchain.output_parsers import ResponseSchema, StructuredOutputParser\\rfrom langchain.chat_models import AzureChatOpenAI\\rfrom langchain.chains import LLMChain\\r\\rdef get_summary(dataset):\\r    logger.info(\\""Summarizing Tickets\\"")\\r    for record in dataset:\\r        payload = record\\r        summary_template = \\""\\""\\""\\r    \\r                    given the information {information} about a ticket from I want you to generate :\\r    \\r                    1. Summary basing on the whole information given.\\r    \\r                    2. A short summary on SLA Timeline\\r    \\r                    3. A short summary on Resolution and worknotes\\r    \\r                    5. A short summary on Priority and urgency\\r    \\r                    6. A short summary on created_by, assignmentgroup and assignedto\\r    \\r                    7. A short summary on Current Status\\r    \\r                    {format_instructions}\\r    \\r                \\""\\""\\""\\r    \\r        llm = AzureChatOpenAI(\\r    \\r            deployment_name=os.environ['deploymentName'],\\r    \\r            model_name='gpt-35-turbo',\\r    \\r            openai_api_key=os.environ['app_OPENAI_API_KEY'],\\r    \\r            openai_api_version=os.environ['openai_api_version'],\\r    \\r            # openai_api_base='https://azureft.openai.azure.com/',\\r    \\r            openai_api_base=os.environ['openai_api_base'],\\r    \\r            openai_api_type=os.environ['openai_api_type'],\\r    \\r            streaming=True,\\r    \\r            verbose=True\\r    \\r            )\\r    \\r    \\r        response_schemas = [\\r    \\r            ResponseSchema(name=\\""Summary\\"", description=\\""Summary basing on the whole information given.\\""),\\r    \\r            ResponseSchema(name=\\""Description\\"", description=\\""A short summary shortdescription and description\\""),\\r    \\r            ResponseSchema(name=\\""ResolutionNotes\\"", description=\\""A short summary on Resolution and worknotes\\""),\\r    \\r            ResponseSchema(name=\\""Priority and Urgency\\"", description=\\""A short summary on Priority and urgency\\""),\\r    \\r            ResponseSchema(name=\\""Owner\\"", description=\\""A short summary on created_by, assignmentgroup and assignedto\\""),\\r    \\r            ResponseSchema(name=\\""current_status\\"", description=\\""A short summary on Current Status and how long the ticket has been open.\\""),\\r    \\r        ]\\r    \\r        output_parser = StructuredOutputParser.from_response_schemas(response_schemas)\\r    \\r        format_instructions = output_parser.get_format_instructions()\\r    \\r        summary_prompt_template = PromptTemplate(input_variables=[\\""information\\""], template=summary_template,\\r    \\r                                                 partial_variables={\\""format_instructions\\"": format_instructions})\\r    \\r        response = LLMChain(llm=llm, prompt=summary_prompt_template)\\r    \\r        # print(chain.run(information=information))\\r    \\r        result = response.run(information=payload)\\r    \\r        result = result[7:]\\r    \\r        result = result[:-3]\\r        try:\\r            result = json.loads(result)\\r        \\r            summary_result = f'''{result['Summary']}\\r            \\r            Below are the point wise details of the incident:\\r        \\r                1.Description:{result[\\""Description\\""]}\\r        \\r                2.Owner:{result['Owner']}\\r        \\r                3.Priority and Urgency:{result['Priority and Urgency']}\\r        \\r                4.Resolution Notes:{result['ResolutionNotes']}\\r        \\r                5.Current Status:{result['current_status']}\\r        \\r            '''\\r            try:\\r                record['Ticket_Summary'] = json.dumps(summary_result)['Answer']\\r            except:\\r                record['Ticket_Summary'] = summary_result\\r        except:\\r            return result\\r    return dataset\\r""]},{""FunctionName"":""getTicketSentiments"",""requirements"":"""",""params"":[],""script"":[""def getTicketSentiments(dataset):\\r    logger.info(\\""Fetching Sentiment\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the sentiment of this customer message: {ticket content}. Return the sentiment in the following json: ```Sentiment: ___\\r        Explanation: ____```\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r        prompt_template = prompt # Needs to refine Custom\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=250,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Ticket_Sentiment_Analysis_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Ticket_Sentiment'] = json.dumps(Ticket_Sentiment_Analysis_out)['Answer']\\r        except:\\r            record['Ticket_Sentiment'] = Ticket_Sentiment_Analysis_out\\r    return dataset""]},{""FunctionName"":""getPriority"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""def getPriority(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Priority\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r        prompt = f\\""\\""\\""\\r        Use the following historical ticket data for learning, but do not reference it in your explanation:\\r        {related_tickets[['shortdescription','priority']]}\\r        Now, analyze the urgency of this new issue: {ticket_content}\\r        \\r        Provide a logical reason for the assigned priority based solely on the issue's content, impact, and urgency.\\r        Do not mention historical data or patterns in your explanation.\\r        Return the priority in the following template:\\r        ```\\r        Priority: [1-5]\\r        Explanation: [Provide a logical reason for the assigned priority, focusing on the impact and urgency of the issue.]\\r        ```\\r        \\""\\""\\""\\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        Priority_Assignment_out = response['choices'][0]['message']['content']\\r        try:\\r            record['Priority'] = json.dumps(Priority_Assignment_out)['Answer']\\r        except:\\r            record['Priority'] = Priority_Assignment_out\\r    return dataset\\r""]},{""FunctionName"":""getIncidentCategorization"",""requirements"":"""",""params"":[{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""1""},{""name"":""leap_url"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""2""},{""name"":""org"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""3""}],""script"":[""import pandas as pd\\rimport ast \\rdef getIncidentCategorization(dataset,adapter_param,leap_url_param,org_param):\\r    logger.info(\\""Fetching Incident Categorization\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        \\r        related_tickets=RelatedTickets(ticket_content,adapter_param,leap_url_param,org_param)\\r\\r        prompt = f'''Based on historical data, categorize this support ticket: \\""{ticket_content}\\"".\\r        Consider the following information:\\r         {related_tickets[['shortdescription','category']]}\\r        \\r    \\r        Please provide your categorization in the following template:\\r        ```\\r        Category: ___\\r        Explanation: ____\\r        ```\\r        If you believe a different category is more appropriate, please explain why.'''\\r    \\r        response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            #messages = [{'role':'user','content':'List top 5 initiatives and associated metrics for business alignment and agility to improve user experience and optimize processes, applications'}],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=0.3,\\r            max_tokens=350,\\r            top_p=1,\\r            frequency_penalty=0,\\r            presence_penalty=0,\\r            stop=None)\\r        incident_out = response['choices'][0]['message']['content']\\r        try:\\r            record['incidentCategorization'] = json.dumps(incident_out)['Answer']\\r        except:\\r            record['incidentCategorization'] = incident_out\\r    return dataset""]},{""FunctionName"":""getEntities"",""requirements"":""openai==0.28"",""params"":[],""script"":[""import openai\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\ropenai.api_type = os.environ[\\""openai_api_type\\""]\\ropenai.api_base = os.environ[\\""openai_api_base\\""]\\ropenai.api_version = os.environ[\\""openai_api_version\\""]\\ropenai.api_key = os.environ[\\""app_OPENAI_API_KEY\\""]\\r\\rdef getEntities( dataset):   \\r    logger.info('Total Tickets : {0}'.format( len(dataset)))\\r    logger.info(\\""Fetching Entities\\"")\\r    for record in dataset:\\r        ticket_content = record['shortdescription']\\r        prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as list of string in json: ```_____\\r\\r        If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r        prompt_template = prompt  # Needs to refine Custom\\r\\r        prompt = prompt_template.replace('{ticket content}', ticket_content)\\r        def OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r            response = openai.ChatCompletion.create(engine=os.environ['deploymentName'],\\r            messages = [{'role':'user','content':prompt}],\\r            temperature=temperature,\\r            max_tokens=max_tokens,\\r            top_p=top_p,\\r            frequency_penalty=frequency_penalty,\\r            presence_penalty=presence_penalty,\\r            stop=stop)\\r            return response\\r\\r        response = OpenAIChatCompletion(prompt,\\r                                    temperature=0.3,\\r                                    max_tokens=250,\\r                                    top_p=1,\\r                                    frequency_penalty=0,\\r                                    presence_penalty=0,\\r                                    stop=None)\\r\\r        Ticket_entities_out = response['choices'][0]['message']['content']\\r        try:\\r            record['entites'] = json.loads(Ticket_entities_out)['Answer']\\r        except:\\r            record['entites'] = Ticket_entities_out\\r    return dataset\\r    \\r    \\rdef RelatedTickets(query,adapter,leap_url,org):\\r    # python-script Data\\r    \\r    url =f\\""{leap_url}/api/aip/adapters/{adapter}/semanticsearch_infer/{org}?isInstance=true\\""\\r    question = query\\r  \\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    print('PAYLOAD: ',payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r  \\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r        \\r        \\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return df\\r    except:\\r        return response.text\\r\\r    ""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-25 07:50:03"",""alias"":""Tickets"",""id"":889,""name"":""LEOTCKTS28745"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\""\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT * from @projectname_tickets where number not in (select number from @projectname_genairecommendations) AND shortdescription in ('CPU Utilization is high','Process Invoice') limit 5\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""},{""name"":""usedSecrets"",""value"":""app_OPENAI_API_KEY""}],""environment"":[{""name"":""SemanticSearchURL"",""value"":""http://victlpfst-11.ad.infosys.com:9080/Infer""},{""name"":""PROXY"",""value"":""http://blrproxy.ad.infosys.com:80""},{""name"":""openai_api_type"",""value"":""azure""},{""name"":""openai_api_base"",""value"":""https://azureft.openai.azure.com/""},{""name"":""openai_api_version"",""value"":""2023-03-15-preview""},{""name"":""deploymentName"",""value"":""gtp35turbo""},{""name"":""Leap_access_token"",""value"":""aec127c2-c984-33f6-9a3a-355xd1dof097""}],""default_runtime"":""{\\""dsAlias\\"":\\""LocalCluster\\"",\\""dsName\\"":\\""LEALCLCL12132\\"",\\""type\\"":\\""REMOTE\\""}""}","admin","ITSM-Batch-V2","2024-09-30 10:36:14","LEOITSM-71127","leo1311","DragNDropLite","90",NULL,"pipeline",NULL,"\0","0"
"admin","2024-09-23 14:02:16.991000","\0","",NULL,"{""elements"":[{""id"":""fxrST"",""alias"":""FlaskAPP"",""name"":""FlaskAPP"",""classname"":""FlaskAPP"",""category"":""FlaskAPP"",""attributes"":{""port"":""8503"",""script"":[""app = Flask(__name__)\\r\\r@app.route('/Custom', methods=['POST'])\\r\\rdef custom_request_post():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r    print(data)\\r\\r    answer=custom(query)\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r\\r@app.route('/entities', methods=['POST'])\\r\\rdef Ticket_entities_post():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r    print(data)\\r\\r    answer=Ticket_entities(query['shortdescription'])\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r@app.route('/recommendedResolution', methods=['POST'])\\r\\rdef Recommended_Resolution_post():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r    print(data)\\r\\r    answer=RecommendedResolution(query['shortdescription'])\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r@app.route('/relatedTickets', methods=['POST'])\\r\\rdef related_tickets_post():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r    print(data)\\r\\r    answer,df=RelatedTickets(query['shortdescription'])\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r\\r@app.route('/incident_categorization', methods=['POST'])\\r\\rdef Incident_Categorization_post():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r    print(data)\\r    \\r    response,df=RelatedTickets(query['shortdescription'])\\r    \\r    answer=Incident_Categorization(query['shortdescription'],df)\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r\\r@app.route('/priority_assignment', methods=['POST'])\\r\\rdef Priority_Assignment_post():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r    print(data)\\r    response,df=RelatedTickets(query['shortdescription'])\\r    \\r    answer=Priority_Assignment(query['shortdescription'],df)\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r\\r\\r\\r@app.route('/ticket_sentiment_analysis', methods=['POST'])\\r\\rdef Ticket_Sentiment_Analysis_post():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r\\r    answer=Ticket_Sentiment_Analysis(query['shortdescription'])\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r\\r\\r\\r@app.route('/language_translation', methods=['POST'])\\r\\rdef Language_Translation_post():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r    print(data)\\r    summary=get_summary(query)\\r    answer=Language_Translation(summary)\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r\\r\\r\\r@app.route('/first_response', methods=['POST'])\\r\\rdef First_Response_post():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r    answer=First_Response((query['shortdescription']))\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r\\r\\r\\r@app.route('/automated_follow_ups', methods=['POST'])\\r\\rdef Automated_Follow_ups_post():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r    print(data)\\r\\r    answer=AutomatedFollow_ups(query)\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r    \\r@app.route('/ticket_summarization', methods=['POST'])\\r\\rdef Ticket_Summarization():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r    print(data)\\r\\r    answer=get_summary(query)\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r\\r    \\r@app.route('/assign_ticket', methods=['POST'])\\r\\rdef Ticket_Assignment():\\r\\r    data = request.get_json()\\r\\r    query=data.get('query','')\\r\\r    print(data)\\r\\r    answer=assign_ticket(query)\\r\\r    answer={'Answer':answer}\\r\\r    return jsonify(answer),200\\r\\r@app.route('/root',methods=['GET'])\\r\\rdef infer_request_root():\\r\\r    return  jsonify({'message': 'success'}), 200""]},""position_x"":""797"",""position_y"":""193"",""connectors"":[],""inputEndpoints"":[""in""],""outputEndpoints"":[],""formats"":{""port"":""integer"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[""from flask import Flask"",""from flask import jsonify"",""from flask import request"",""import openai""],""requirements"":[""flask""],""script"":""def FlaskAPP(port_param=5000,script_param=''):\\r\\n    app.run(debug=True, host='0.0.0.0', port = port_param)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n""}},{""id"":""iEYTu"",""alias"":""Custom"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""custom"",""requirements"":""langchain,langchain_core"",""params"":[],""script"":[""from flask import jsonify\\rfrom flask import Flask\\rfrom flask import request\\rimport openai\\r\\r\\r\\rdef custom(custom_query):\\r\\r    ticket_content= custom_query\\r\\r    prompt='''As a IT Operations Customer Support bot, you are here to assist with any issues \\r\\r    a user might be facing with their IT Operations.\\r\\r    Please provide as much detail as possible about the problem, how to solve it, and steps a user should take to fix it.\\r\\r    If the provided context doesn't provide enough information, you are allowed to use your knowledge and experience to offer you the best possible assistance.\\r\\r    {ticket_content}'''\\r\\r    prompt_template = prompt # Needs to refine Custom\\r\\r    prompt = prompt_template.replace('{ticket content}', ticket_content)\\r\\r    response = OpenAIChatCompletion(prompt,\\r        temperature=1,\\r        max_tokens=100,\\r        top_p=0.5,\\r        frequency_penalty=0,\\r        presence_penalty=0,\\r        stop=None)\\r\\r    out = response['choices'][0]['message']['content']\\r\\r    \\r\\r    return out\\r""]},""position_x"":""65"",""position_y"":""35"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""LZANZ"",""alias"":""Automated Follow ups"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""AutomatedFollow_ups"",""requirements"":"""",""params"":[],""script"":[""from datetime import datetime\\rdef AutomatedFollow_ups(AutomatedFollow_ups_query):\\r\\r    ticket_content = AutomatedFollow_ups_query['number']\\r    current_date = datetime.now()\\r    updated_date = AutomatedFollow_ups_query['lastUpdated']\\r    prompt = f'''Draft a follow-up message for ticket number: {ticket_content}. \\r\\r    Based on the above ticket data, identify ticket pendancy days = {current_date} - {updated_date}. The SLA for ticket pendancy is 7 days. \\r\\r    If the ticket status is Open and with Support team then generate a response to update customer about work in progress. \\r\\r    If the ticket status is Open and with Customer then generate a response to remind the customer to provide the inputs. \\r\\r    If the ticket status is marked for closure and with Customer then generate a response to remind the customer to verify and close the ticket.'''\\r\\r    \\r    response = OpenAIChatCompletion(prompt,\\r        temperature=1,\\r        max_tokens=150,\\r        top_p=1,\\r        frequency_penalty=1.6,\\r        presence_penalty=0,\\r        stop=None)\\r\\r    AutomatedFollow_ups_out = response.choices[0].message.content\\r\\r    \\r\\r    return AutomatedFollow_ups_out\\r""]},""position_x"":""63"",""position_y"":""129"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""PYlUJ"",""alias"":""First Response"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""First_Response"",""requirements"":"""",""params"":[],""script"":[""def First_Response(First_Response_query):\\r\\r    ticket_content = First_Response_query\\r\\r    prompt = '''Based on this customer message {ticket content}, draft a response. To assess the candidate's ability to draft a first response, we were looking for the following:\\r\\r    An understanding of the issue raised by the customer\\r\\r    A clear and concise response that addresses the issue\\r\\r    A polite and professional tone\\r\\r    A clear call to action.\\r\\r    If the provided context doesn't provide enough information, you are allowed to use your knowledge and experience to offer you the best possible assistance.'''\\r\\r    prompt_template = prompt # Needs to refine Custom\\r\\r    prompt = prompt_template.replace('{ticket content}', ticket_content)\\r\\r    response = OpenAIChatCompletion(prompt,\\r\\r        temperature=1,\\r\\r        max_tokens=350,\\r\\r        top_p=1,\\r\\r        frequency_penalty=0,\\r\\r        presence_penalty=0,\\r\\r        stop=None)\\r\\r    First_Response_out = response.choices[0].message.content\\r\\r    \\r\\r    return First_Response_out""]},""position_x"":""74"",""position_y"":""242"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""tpwev"",""alias"":""Language Translation"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""Language_Translation"",""requirements"":"""",""params"":[],""script"":[""def Language_Translation(Language_Translation_query):\\r\\r    ticket_content = Language_Translation_query\\r\\r    prompt = '''Translate this customer ticket from source language to English: {ticket content}.'''\\r\\r    prompt_template = prompt # Needs to refine Custom\\r\\r    prompt = prompt_template.replace('{ticket content}', ticket_content)\\r\\r    response =OpenAIChatCompletion(prompt,\\r\\r        temperature=0.8,\\r\\r        max_tokens=60,\\r\\r        top_p=1,\\r\\r        frequency_penalty=0,\\r\\r        presence_penalty=0,\\r\\r        stop=None)\\r\\r    Language_Translation_out = response.choices[0].message.content\\r\\r    \\r\\r    return Language_Translation_out\\r""]},""position_x"":""235"",""position_y"":""133"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""EOADS"",""alias"":""Ticket Sentiment Analysis"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""Ticket_Sentiment_Analysis"",""requirements"":"""",""params"":[],""script"":[""def Ticket_Sentiment_Analysis(Ticket_Sentiment_Analysis_query):\\r\\r\\r\\r    ticket_content = Ticket_Sentiment_Analysis_query\\r\\r\\r\\r    prompt = '''Determine the sentiment of this customer message: {ticket content}. Return the sentiment in the following json: ```Sentiment: ___\\r\\r\\r\\r    Explanation: ____```\\r\\r\\r\\r    If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r\\r\\r    prompt_template = prompt # Needs to refine Custom\\r\\r\\r\\r    prompt = prompt_template.replace('{ticket content}', ticket_content)\\r\\r\\r\\r    response =OpenAIChatCompletion(prompt,\\r\\r\\r\\r        temperature=0.3,\\r\\r\\r\\r        max_tokens=250,\\r\\r\\r\\r        top_p=1,\\r\\r\\r\\r        frequency_penalty=0,\\r\\r\\r\\r        presence_penalty=0,\\r\\r\\r\\r        stop=None)\\r\\r\\r\\r    Ticket_Sentiment_Analysis_out = response.choices[0].message.content\\r\\r\\r\\r    \\r\\r\\r\\r    return Ticket_Sentiment_Analysis_out\\r\\r""]},""position_x"":""403"",""position_y"":""136"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""QRUmI"",""alias"":""Priority Assignment"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""Priority_Assignment"",""requirements"":"""",""params"":[],""script"":[""\\rdef Priority_Assignment(Priority_Assignment_query,df):\\r\\r    ticket_content = Priority_Assignment_query\\r\\r    prompt = f\\""\\""\\""\\r    Use the following historical ticket data for learning, but do not reference it in your explanation:\\r    {df[['shortdescription','priority']]}\\r    Now, analyze the urgency of this new issue: {ticket_content}\\r    \\r    Provide a logical reason for the assigned priority based solely on the issue's content, impact, and urgency.\\r    Do not mention historical data or patterns in your explanation.\\r    Return the priority in the following template:\\r    ```\\r    Priority: [1-5]\\r    Explanation: [Provide a logical reason for the assigned priority, focusing on the impact and urgency of the issue.]\\r    ```\\r    \\""\\""\\""\\r\\r    response = OpenAIChatCompletion(prompt,\\r\\r        temperature=0.3,\\r\\r        max_tokens=250,\\r\\r        top_p=1,\\r\\r        frequency_penalty=0,\\r\\r        presence_penalty=0,\\r\\r        stop=None)\\r\\r    Priority_Assignment_out = response.choices[0].message.content\\r\\r    \\r\\r    return Priority_Assignment_out""]},""position_x"":""413"",""position_y"":""39"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""TsFxd"",""alias"":""Incident Categorization"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""Incident_Categorization"",""requirements"":"""",""params"":[],""script"":[""\\rdef Incident_Categorization(incident_query,df):\\r\\r    ticket_content = incident_query\\r\\r    prompt = f'''Based on historical data, categorize this support ticket: \\""{ticket_content}\\"".\\r    Consider the following information:\\r     {df[['shortdescription','category']]}\\r    \\r\\r    Please provide your categorization in the following template:\\r    ```\\r    Category: ___\\r    Explanation: ____\\r    ```\\r    If you believe a different category is more appropriate, please explain why.'''\\r\\r    \\r\\r    response = OpenAIChatCompletion(prompt,\\r\\r        temperature=0.3,\\r\\r        max_tokens=250,\\r\\r        top_p=1,\\r\\r        frequency_penalty=0,\\r\\r        presence_penalty=0,\\r\\r        stop=None)\\r\\r    incident_out = response.choices[0].message.content\\r\\r    \\r\\r    return incident_out""]},""position_x"":""231"",""position_y"":""32"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""BkjOF"",""alias"":""Entities"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""Ticket_entities"",""requirements"":"""",""params"":[],""script"":[""import json\\rdef Ticket_entities(Ticket_entities_query):\\r\\r    ticket_content = Ticket_entities_query\\r\\r    prompt = '''Determine the named entites of this customer message: {ticket content}. Return  'named_entities' as a JSON list of string: ```_____\\r    \\r    The output must be a valid JSON object with a single key named 'named_entities' and no additional messages, notes or explanations.\\r\\r    If the provided context doesn't provide enough information, you are not allowed to use your knowledge hence write a best message to offer the best possible assistance.'''\\r\\r    prompt_template = prompt # Needs to refine Custom\\r\\r    prompt = prompt_template.replace('{ticket content}', ticket_content)\\r\\r    response = OpenAIChatCompletion(prompt,\\r\\r        temperature=0.3,\\r\\r        max_tokens=250,\\r\\r        top_p=1,\\r\\r        frequency_penalty=0,\\r\\r        presence_penalty=0,\\r\\r        stop=None)\\r\\r    Ticket_entities_out = response.choices[0].message.content\\r    try:\\r        return json.loads(Ticket_entities_out)\\r    except:\\r        return Ticket_entities_out\\r        \\r\\r""]},""position_x"":""260"",""position_y"":""253"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""xjMCC"",""alias"":""Ticket Summarization"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""get_summary"",""requirements"":"""",""params"":[],""script"":[""from langchain_core.prompts import PromptTemplate\\r\\rfrom langchain.output_parsers import ResponseSchema, StructuredOutputParser\\r\\rfrom langchain.chat_models import AzureChatOpenAI\\r\\rfrom langchain.chains import LLMChain\\r\\rimport json\\r\\rimport mysql.connector\\r\\r\\r\\rdef get_summary(payload):\\r\\r    summary_template = \\""\\""\\""\\r\\r                given the information {information} about a ticket from I want you to generate :\\r\\r                1. Summary basing on the whole information given.\\r\\r                2. A short summary on SLA Timeline\\r\\r                3. A short summary on Resolution and worknotes\\r\\r                5. A short summary on Priority and urgency\\r\\r                6. A short summary on created_by, assignmentgroup and assignedto\\r\\r                7. A short summary on Current Status\\r\\r                {format_instructions}\\r\\r            \\""\\""\\""\\r\\r    llm = AzureChatOpenAI(\\r\\r        deployment_name='gtp35turbo',\\r\\r        model_name='gpt-35-turbo',\\r\\r        openai_api_key='85b968a4b5c84d849c99661788c2c1ed',\\r\\r        openai_api_version='2023-03-15-preview',\\r\\r        # openai_api_base='https://azureft.openai.azure.com/',\\r\\r        openai_api_base='https://azureft.openai.azure.com/',\\r\\r        openai_api_type='azure',\\r\\r        streaming=True,\\r\\r        verbose=True\\r\\r        )\\r\\r\\r    response_schemas = [\\r\\r        ResponseSchema(name=\\""Summary\\"", description=\\""Summary basing on the whole information given.\\""),\\r\\r        ResponseSchema(name=\\""Description\\"", description=\\""A short summary shortdescription and description\\""),\\r\\r        ResponseSchema(name=\\""ResolutionNotes\\"", description=\\""A short summary on Resolution and worknotes\\""),\\r\\r        ResponseSchema(name=\\""Priority and Urgency\\"", description=\\""A short summary on Priority and urgency\\""),\\r\\r        ResponseSchema(name=\\""Owner\\"", description=\\""A short summary on created_by, assignmentgroup and assignedto\\""),\\r\\r        ResponseSchema(name=\\""current_status\\"", description=\\""A short summary on Current Status and how long the ticket has been open.\\""),\\r\\r    ]\\r\\r    output_parser = StructuredOutputParser.from_response_schemas(response_schemas)\\r\\r    format_instructions = output_parser.get_format_instructions()\\r\\r    summary_prompt_template = PromptTemplate(input_variables=[\\""information\\""], template=summary_template,\\r\\r                                             partial_variables={\\""format_instructions\\"": format_instructions})\\r\\r    response = LLMChain(llm=llm, prompt=summary_prompt_template)\\r\\r    # print(chain.run(information=information))\\r\\r    result = response.run(information=payload)\\r\\r    result = result[7:]\\r\\r    result = result[:-3]\\r    try:\\r        result = json.loads(result)\\r    \\r        summary_result = f'''{result['Summary']}\\r        \\r        Below are the point wise details of the incident:\\r    \\r            1.Description:{result[\\""Description\\""]}\\r    \\r            2.Owner:{result['Owner']}\\r    \\r            3.Priority and Urgency:{result['Priority and Urgency']}\\r    \\r            4.Resolution Notes:{result['ResolutionNotes']}\\r    \\r            5.Current Status:{result['current_status']}\\r    \\r        '''\\r        return summary_result\\r    except:\\r        return result\\r\\r   ""]},""position_x"":""433"",""position_y"":""259"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""gFaEb"",""alias"":""OpenAIChatCompletion"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""OpenAIChatCompletion"",""requirements"":""openai==1.30.1"",""params"":[],""script"":[""from openai import AzureOpenAI\\r\\ropenai.proxy = {'http' : os.environ['PROXY'],'https' : os.environ['PROXY']}\\rapi_type = os.environ[\\""openai_api_type\\""]\\rapi_base = os.environ[\\""openai_api_base\\""]\\rapi_version = os.environ[\\""openai_api_version\\""]\\rapi_key = os.environ.get(\\""app_OPENAI_API_KEY\\"",\\""85b968a4b5c84d849c99661788c2c1ed\\"")\\ropenai_client = AzureOpenAI(\\r        api_key=\\""c20dfca2800f4cd6a172c642e20d1aa0\\"",\\r        api_version=\\""2024-02-01\\"",\\r        azure_endpoint=\\""https://leapazureopenai.openai.azure.com/\\""\\r    )\\r\\rdef OpenAIChatCompletion( prompt,temperature=0.3,max_tokens=350,top_p=1,frequency_penalty=0,presence_penalty=0,   stop=None):    #python-script Data\\r    response = openai_client.chat.completions.create(model='gpt-35-turbo',\\r    messages = [{'role':'user','content':prompt}],\\r    temperature=temperature,\\r    max_tokens=max_tokens,\\r    top_p=top_p,\\r    frequency_penalty=frequency_penalty,\\r    presence_penalty=presence_penalty,\\r    stop=stop)\\r    return response""]},""position_x"":""778"",""position_y"":""63"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""mBvIr"",""alias"":""RecommendedResolution"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""RecommendedResolution"",""requirements"":"""",""params"":[],""script"":[""import requests\\rimport json\\rimport re\\rdef RecommendedResolution( query):    #python-script Data\\r    url =os.environ[\\""SemanticSearchURL\\""]\\r    # question = \\""What are the steps to resolve \\"" + query +\\"" ticket\\""\\r    pattern = r'(_id(:\\\\d+)?|\\\\bid\\\\b|\\\\d+)'\\r    result = re.sub(pattern, '', query, flags=re.IGNORECASE)\\r    result = re.sub(r'[_\\\\s:]+', ' ', result).strip()\\r    query = result\\r    question = \\""What are the steps to resolve the\\"" + query +  \\""issues?\\""\\r    # payload = {\\""config\\"":{\\""VectorStoreConfig\\"":{\\""DB_Type\\"":\\""Faiss\\"",\\""query\\"":question,\\""index_name\\"":\\""SOP\\""},\\""LLMConfig\\"":{\\""LLM_Type\\"":\\""AzureOpenAI\\"",\\""api_key\\"":\\""85b968a4b5c84d849c99661788c2c1ed\\"",\\""api_version\\"":\\""2023-03-15-preview\\"",\\""engine\\"":\\""gtp35turbo\\"",\\""api_base\\"":\\""https://azureft.openai.azure.com\\"",\\""api_type\\"":\\""azure\\"",\\""query\\"":question,\\""max_tokens\\"":1000,\\""prompt_template\\"":\\""Answer the query based on the context below\\""},\\""EmbeddingConfig\\"":{}}}\\r    # payload = {\\""index_name\\"": \\""SOP\\"", \\""query\\"": \\""What are the steps to resolve invoice processing issues?\\""}\\r    payload = {\\""index_name\\"": \\""SOP\\"", \\""query\\"": question}\\r    logger.error(payload)\\r    headers = {\\r        'Content-Type': 'application/json'\\r            }\\r\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False, proxies={'http':'','https':''})\\r    logger.error(response.text)\\r    try:\\r        response=json.loads(response.text)\\r        return response[0]['Answer']\\r    except:\\r        return response.text""]},""position_x"":""594"",""position_y"":""41"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""cTRvz"",""alias"":""Related-Tickets"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""RelatedTickets"",""requirements"":"""",""params"":[{""name"":""Leap_URL"",""value"":""https://leap2:7000"",""type"":""Text"",""alias"":""https://leap2:7000"",""index"":""1""},{""name"":""Leap_Project_Name"",""value"":""leo1311"",""type"":""Text"",""alias"":""leo1311"",""index"":""2""},{""name"":""adapter"",""value"":""TicketsSearch-Adapter-Instance"",""type"":""Text"",""alias"":""TicketsSearch-Adapter-Instance"",""index"":""3""}],""script"":[""import requests\\rimport json\\rimport pandas as pd\\rimport ast\\rdef RelatedTickets(query,Leap_URL_param,Leap_Project_Name_param,adapter_param):  # python-script Data\\r    adapter = adapter_param\\r    url =f\\""{Leap_URL_param}/api/aip/adapters/{adapter}/semanticsearch_infer/{Leap_Project_Name_param}?isInstance=true\\""\\r    question = query\\r    payload = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":question}\\r    logger.error(payload)\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=json.dumps(payload), verify=False,\\r                                proxies={'http': '', 'https': ''})\\r    logger.error(response.text)\\r    try:\\r        response = json.loads(response.text)\\r        tickets = []\\r        ticket_data = response[1]['context'][0]['metadata']['data']['number']\\r        for ticket_number in ticket_data:\\r            tickets.append(response[1]['context'][0]['page_content'].split('\\\\n')[2:][ticket_data.index(ticket_number)].split('|')[2])\\r\\r\\r        data = [ast.literal_eval(item.strip()) for item in tickets]\\r        \\r        # Create DataFrame\\r        df = pd.DataFrame(data)\\r        # return response[0]['Answer']\\r        return response,df\\r    except:\\r        return response.text""]},""position_x"":""596"",""position_y"":""144"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""}},{""id"":""wmCXK"",""alias"":""Ticket Assignment"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""assign_ticket"",""requirements"":"""",""params"":[],""script"":[""\\rdef assign_ticket( query):    #python-script Data\\r\\r    assignee = 'xyz_user'\\r    return dataset""]},""position_x"":""626"",""position_y"":""260"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""}],""environment"":[{""name"":""PROXY"",""value"":""http://blrproxy.ad.infosys.com:80""},{""name"":""openai_api_type"",""value"":""azure""},{""name"":""openai_api_base"",""value"":""https://azureft.openai.azure.com/""},{""name"":""openai_api_version"",""value"":""2023-03-15-preview""},{""name"":""Leap_access_token"",""value"":""aec127c2-c984-33f6-9a3a-355xd1dof097""}],""default_runtime"":""{\\""dsAlias\\"":\\""LocalCluster\\"",\\""dsName\\"":\\""LEALCLCL12132\\"",\\""type\\"":\\""REMOTE\\""}"",""latest_jobid"":""284dfcd0-ef67-4087-b2ee-e84076bcbb8f""}","admin","ITSM Endpoints - II","2024-09-30 10:34:07","LEOITSMN74494","leo1311","DragNDropLite","62",NULL,"chain",NULL,"\0","0"
"admin","2024-09-30 12:34:59.268000","\0","Flask app for Knowledge Search",NULL,"{""elements"":[{""id"":""VknlU"",""alias"":""create chat context object"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""create_chat_context_object"",""requirements"":"""",""params"":[],""script"":[""class ChatContext:\\r    #: Unique chat session id\\r    chat_id: str = None\\r    #: Unique chat user id, to be derived from jwt implicitly once auth is implemented\\r    chat_user_id: str = None\\r    #: Context storage for the session\\r    chat_context: list[str] = None\\r    # User query\\r    chat_user_query: str = None\\r    #: AI chatbot response\\r    chat_system_response: str = None\\r    #: Send the user uploaded file in blob format\\r    chat_user_upload_file: object = None\\r    #: User uploaded file type\\r    chat_user_upload_file_type: str = None\\r    #: Response time for the chat in miliseconds\\r    chat_response_time: float = None\\r    #: RAI metric value\\r    chat_rai_metric: float = None\\r    #: Confidence score/ accuracy metric for the chat query response\\r    chat_confidence_score: float = None\\r    #: If chat response contain a file, populate it with the extention such as png, jpg, mp4, mp3\\r    chat_response_file_type: list[str] = None\\r    #: If chat response contain a file, populate it with the extention such as png, jpg, mp4, mp3\\r    chat_response_file_data: list[object] = None\\r\\rdef create_chat_context_object(chat_id, chat_user_id, chat_user_query, chat_system_response, chat_response_time):\\r\\r    chat_context_obj = ChatContext()\\r\\r    chat_context_obj.chat_id = chat_id\\r\\r    chat_context_obj.chat_user_id = chat_user_id\\r\\r    chat_context_obj.chat_user_query = chat_user_query\\r\\r    chat_context_obj.chat_system_response = chat_system_response\\r\\r    chat_context_obj.chat_response_time = chat_response_time\\r\\r    return chat_context_obj\\r\\r\\r\\rchat_context: ChatContext = ChatContext\\r\\rchat_history: dict = dict()""]},""position_x"":""691"",""position_y"":""132"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""EbpDp"",""alias"":""FlaskAPP"",""name"":""FlaskAPP"",""classname"":""FlaskAPP"",""category"":""FlaskAPP"",""attributes"":{""port"":""8514"",""script"":[""\\r\\r\\rapp = Flask(__name__)\\r\\rCORS(app)\\r\\r\\""\\""\\""Do chat. send the user query and get the response back\\r\\r\\""\\""\\""\\r\\r\\r\\r\\r\\r@app.route(\\""/api/chat\\"", methods=[\\""POST\\""])\\r\\rdef do_chat():\\r\\r    data = json.loads(request.get_data())\\r\\r    chat_id = data.get('chat_id', None)\\r\\r    if chat_id is None or chat_id == \\""\\"" or chat_id == \\""null\\"":\\r\\r        chat_id = uuid.uuid4().hex\\r\\r    chat_user_id = data.get('chat_user_id', None)\\r\\r    if chat_user_id is None:\\r\\r        raise ValueError(\\""Error: User ID not provided\\"")\\r\\r    chat_user_query = data.get('chat_user_query')\\r\\r    logger.info(f\\""User Query: {chat_user_query}\\"")\\r\\r    previous_chat_history = chat_history.get(chat_id, [])\\r\\r    memory = intialise_memory(previous_chat_history)\\r\\r    chat_time = datetime.now().strftime(\\""%I:%M %p\\"")\\r\\r    current_date = datetime.now().strftime(\\""%d-%b-%Y\\"")\\r\\r    thread = Thread(target=db_start_chat_session, args=(chat_user_id, chat_id, str(chat_time), current_date))\\r\\r    thread.start()\\r\\r    start = time.time()\\r\\r    chat_system_response_dict = get_chain_response(chat_user_query, memory)\\r\\r    end = time.time()\\r\\r    chat_response_time = (end - start) * 10 ** 3\\r\\r    chat_system_response = chat_system_response_dict['chat_system_response']\\r\\r    current_chat_context = create_chat_context_object(chat_id, chat_user_id, chat_user_query,\\r\\r                                                      chat_system_response, chat_response_time)\\r\\r    update_chat = chat_history.get(chat_id, [])\\r\\r    update_chat.append(current_chat_context)\\r\\r    chat_history[chat_id] = update_chat\\r\\r    global flag\\r\\r    global references\\r\\r    if flag:\\r\\r        ref = references\\r\\r        references = []\\r\\r        flag = False\\r\\r    else:\\r\\r        ref = []\\r\\r    response_time = datetime.now().strftime(\\""%I:%M %p\\"")\\r\\r    thread = Thread(target=db_add_chat_question_response, args=(chat_id, chat_user_query, str(chat_time),\\r\\r                                                                chat_system_response_dict['chat_chain_of_thoughts'],\\r\\r                                                                chat_response_time,\\r\\r                                                                chat_system_response, str(response_time), ref))\\r\\r    thread.start()\\r\\r    response = {\\r\\r        \\""chat_id\\"": chat_id,\\r\\r        \\""chat_user_id\\"": chat_user_id,\\r\\r        \\""chat_response_time\\"": chat_response_time,\\r\\r        \\""chat_chain_of_thoughts\\"": chat_system_response_dict['chat_chain_of_thoughts'],\\r\\r        \\""Chat_time\\"": str(datetime.now()),\\r\\r        \\""references\\"": ref\\r\\r    }\\r\\r    response.update(chat_system_response_dict)\\r\\r    return response\\r\\r\\r\\r\\r\\r@app.route(\\""/api/get_chat_intro\\"", methods=[\\""GET\\""])\\r\\rdef get_chat_intro():\\r\\r    try:\\r\\r        response_dict = dict()\\r\\r        response_dict[\\""chat_system_intro\\""] = \\""How may I help you \\""\\r\\r        response_dict[\\""chat_suggestions\\""] = [\\r\\r            {\\r\\r                \\""Options\\"":\\r\\r                    [\\r\\r                        \\""Process Tickets\\"", \\""Troubleshoot\\"", \\""Self Help\\"", \\""Knowledge Search\\""\\r\\r                    ]\\r\\r            }\\r\\r        ]\\r\\r        response = json.dumps(response_dict)\\r\\r        return response\\r\\r    except Exception as e:\\r\\r        app.logger.error(e)\\r\\r\\r\\r\\r\\r@app.route(\\""/api/getSessionChat\\"", methods=[\\""POST\\""])\\r\\rdef getSessionChat():\\r\\r    try:\\r\\r        data = json.loads(request.get_data())\\r\\r        session_id = data.get('chat_id', None)\\r\\r        chat_user_id = data.get('chat_user_id', None)\\r\\r        db_data = db_fetch_chat_session_records(chat_user_id, session_id)\\r\\r        num = 0\\r\\r        data = []\\r\\r        intro = json.loads(get_chat_intro())\\r\\r        for suggestion in intro[\\""chat_suggestions\\""]:\\r\\r            if \\""Options\\"" in suggestion:\\r\\r                suggestion[\\""Queries\\""] = suggestion.pop(\\""Options\\"")\\r\\r        intro[\\""chat_time\\""] = db_fetch_chat_time(session_id)\\r\\r        chat_intro = {\\r\\r            \\""chatbotIntro\\"":\\r\\r                intro\\r\\r        }\\r\\r        data.append(dict(chat_intro))\\r\\r        for i in db_data:\\r\\r            user = f\\""user{num}\\""\\r\\r            bot = f\\""bot{num + 1}\\""\\r\\r            num += 1\\r\\r            user_data = {\\r\\r                user: {\\r\\r                    \\""chat_id\\"": i['session_id'],\\r\\r                    \\""chat_user_query\\"": i['chat_user_query'],\\r\\r                    \\""chat_user_id\\"": 12,\\r\\r                    \\""chat_time\\"": i['query_time']\\r\\r                }\\r\\r            }\\r\\r            bot_data = {\\r\\r                bot: {\\r\\r                    \\""chat_chain_of_thoughts\\"": i['chat_chain_of_thoughts'],\\r\\r                    \\""chat_id\\"": i['session_id'],\\r\\r                    \\""chat_response_time\\"": i['chat_response_time'],\\r\\r                    \\""chat_system_response\\"": i['message'],\\r\\r                    \\""references\\"": i['references'],\\r\\r                    \\""chat_user_id\\"": 12,\\r\\r                    \\""chat_time\\"": i['response_time']\\r\\r                }\\r\\r            }\\r\\r            data.append(dict(user_data))\\r\\r            data.append(dict(bot_data))\\r\\r        return data\\r\\r    except Exception as e:\\r\\r        logger.error(f\\""Exception in history method: {e} \\"")\\r\\r\\r\\r\\r\\r@app.route(\\""/api/userChatHistory\\"", methods=[\\""POST\\""])\\r\\rdef get_user_chat_history():\\r\\r    try:\\r\\r        data = json.loads(request.get_data())\\r\\r        chat_user_id = data.get('chat_user_id', None)\\r\\r        result = db_get_user_chat_history(chat_user_id)\\r\\r        result = {'records': result}\\r\\r        return result\\r\\r    except Exception as e:\\r\\r        logger.error(f\\""Exception in get_User_Session method: {e} \\"")\\r\\r\\r\\r\\r\\r@app.route('/healthCheck', methods=['GET'])\\r\\rdef healthCheck():\\r\\r    response = {'Instance': os.environ['Leap_URL'],  'Project': os.environ['Leap_Project_Name'],\\r\\r                'Health': 'up', 'Chain': 'ITSM IT Assistant v4', 'Job ID': \\""LEOITSMT46125\\"", \\""Hosted On\\"": os.environ[\\""POD\\""]}\\r\\r    return jsonify(response), 200""]},""position_x"":""693"",""position_y"":""307"",""connectors"":[],""inputEndpoints"":[""in""],""outputEndpoints"":[],""formats"":{""port"":""integer"",""script"":""textarea""},""codeGeneration"":{""imports"":[""from flask import Flask"",""from flask import jsonify"",""from flask import request"",""import openai""],""requirements"":[""flask""],""script"":""def FlaskAPP(port_param=5000,script_param=''):\\r\\n    app.run(debug=True, host='0.0.0.0', port = port_param)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[]},{""id"":""lTghn"",""alias"":""Intialise Memory"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""intialise_memory"",""requirements"":"""",""params"":[],""script"":[""def intialise_memory(previous_chat_history):\\r\\r    try:\\r\\r        logger.info(\\""Initialising memory...........\\"")\\r\\r        memory = ConversationBufferMemory(memory_key=\\""chat_history\\"", return_messages=True, input_key=\\""input\\"",\\r\\r                                          output_key=\\""output\\"")\\r\\r        if len(previous_chat_history) > 0:\\r\\r            for context_obj in previous_chat_history:\\r\\r                ai_message = str(context_obj.chat_system_response)\\r\\r                memory.chat_memory.add_user_message(context_obj.chat_user_query)\\r\\r                memory.chat_memory.add_ai_message(ai_message)\\r\\r        return memory\\r\\r    except Exception as e:\\r\\r        logger.debug(f\\""Exception in initialise memory method: {e}\\"")\\r\\r\\r\\r\\r\\rsystem = '''Respond to the human as helpfully and accurately as possible. You have access to the following tools:\\r\\r{tools}\\r\\rUse a json blob to specify a tool by providing an action key (tool name) and an action_input key (tool input).\\r\\rValid \\""action\\"" values: \\""Final Answer\\"" or {tool_names}\\r\\rProvide only ONE action per $JSON_BLOB, as shown:\\r\\r```\\r\\r{{\\r\\r\\""action\\"": $TOOL_NAME,\\r\\r\\""action_input\\"": $INPUT\\r\\r}}\\r\\r```\\r\\rFollow this format:\\r\\rQuestion: input question to answer\\r\\rThought: consider previous responses and subsequent steps\\r\\rAction:\\r\\r```\\r\\r$JSON_BLOB\\r\\r```\\r\\rObservation: action result\\r\\r... (repeat Thought/Action/Observation N times)\\r\\rThought: I know what to respond\\r\\rAction:\\r\\r```\\r\\r{{\\r\\r\\""action\\"": \\""Final Answer\\"",\\r\\r\\""action_input\\"": \\""Final response to human\\""\\r\\r}}\\r\\rBegin! Reminder to ALWAYS respond with a valid json blob of a single action. \\r\\rYou should always try to use only the specified tools for the user's query.\\r\\rDo not ask for default parameters of tools.\\r\\rIf the user asks to fetch or get something from database then don't convert the user query to SQL query just pass the\\r\\rsame natural language user query as the action_input. \\r\\rIf user provides important information such as role ID, system ID, case ID, knowledge base, ticket number save this information in memory and\\r\\ruse this information for subsequent user queries. \\r\\rPlease generate a response using only the defined tools available to you.\\r\\r'''\\r\\rhuman = '''\\r\\r{input}\\r\\r{agent_scratchpad}\\r\\r(reminder to respond in a JSON blob no matter what)'''\\r\\rprompt = ChatPromptTemplate.from_messages(\\r\\r    [\\r\\r        (\\""system\\"", system),\\r\\r        MessagesPlaceholder(\\""chat_history\\"", optional=True),\\r\\r        (\\""human\\"", human),\\r\\r    ]\\r\\r)\\r\\r""]},""position_x"":""519"",""position_y"":""312"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""uxQll"",""alias"":""Get chain response"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""get_chain_response"",""requirements"":"""",""params"":[],""script"":[""def get_chain_response(chat_user_query, memory):\\r\\r    # try:\\r\\r    chat_system_response = {}\\r\\r    Answer_dict = {}\\r\\r    chain_of_thoughts = []\\r\\r    tools = [knowledge_search, sop_search]\\r\\r    agent = create_structured_chat_agent(llm, tools, prompt)\\r\\r    agent_executor = AgentExecutor(agent=agent, tools=tools, verbose=True, return_intermediate_steps=True,\\r\\r                                   memory=memory, handle_parsing_errors=True)\\r\\r    try:\\r\\r        chat_system_response = agent_executor.invoke({\\""input\\"": chat_user_query})\\r\\r\\r\\r    except requests.RequestException as r:\\r\\r        chat_system_response[\\""output\\""] = \\""API overloaded, please try again after sometime...\\""\\r\\r        chat_system_response[\\""intermediate_steps\\""] = []\\r\\r    except Exception as e:\\r\\r        chat_system_response[\\""output\\""] = e\\r\\r        chat_system_response[\\""intermediate_steps\\""] = []\\r\\r    try:\\r\\r        Answer_dict = json.loads(chat_system_response[\\""output\\""])\\r\\r    except Exception as e:\\r\\r        if isinstance(chat_system_response[\\""output\\""], dict):\\r\\r            return chat_system_response[\\""output\\""]\\r\\r        else:\\r\\r            system_response = chat_system_response[\\""output\\""]\\r\\r            Answer_dict[\\""chat_system_response\\""] = system_response\\r\\r    if len(chat_system_response['intermediate_steps']) > 0:\\r\\r        temp_dict = dict(chat_system_response['intermediate_steps'][0][0])\\r\\r        value = temp_dict.get('tool', 'NA')\\r\\r        logger.info\\r\\r        if \\""_Exception\\"" not in value:\\r\\r            tool_input = temp_dict.get('tool_input', {})\\r\\r            if type(tool_input) != str:\\r\\r                tool_input = json.dumps(tool_input)\\r\\r            response_dict = {\\r\\r                'tool': temp_dict.get('tool', 'NA'),\\r\\r                'tool_input': tool_input,\\r\\r                'observation': f\\""After understanding user query, I decided to use {temp_dict.get('tool', 'NA')} tool\\"",\\r\\r                'type': \\""AgentAction\\""\\r\\r            }\\r\\r        chain_of_thoughts.append(response_dict)\\r\\r        Answer_dict[\\""chat_chain_of_thoughts\\""] = chain_of_thoughts\\r\\r    else:\\r\\r        Answer_dict[\\""chat_chain_of_thoughts\\""] = \\""No tool has been used.\\""\\r\\r        return Answer_dict\\r\\r    return Answer_dict""]},""position_x"":""342"",""position_y"":""310"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""ywOgE"",""alias"":""Get adapter response"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""get_adapter_response"",""requirements"":"""",""params"":[],""script"":[""def get_adapter_response(url, index=None, query=None, type=\\""post\\""):\\r\\r    '''\\r\\r    using this method to get the adapter response\\r\\r    '''\\r\\r    logger.debug(f\\"" get_adapter_response called with index{index}\\"")\\r\\r    header = {\\r\\r        'Accept': 'application/json, text/plain, */*',\\r\\r        'Content-Type': 'application/json',\\r\\r        'Project': '2',\\r\\r        'ProjectName': 'leo1311',\\r\\r        'Access-Token': os.environ['Leap_access_token'],\\r\\r    }\\r\\r    payload = {\\""query\\"": query, \\""index_name\\"": index}\\r\\r    if type == \\""post\\"":\\r\\r        response = requests.post(url=url, headers=header, json=payload, verify=False)\\r\\r        logger.info(response)\\r\\r        if response.status_code == 200:\\r\\r            try:\\r\\r\\r\\r                answer = json.loads(response.text)[0].get(\\""Answer\\"")\\r\\r                return answer\\r\\r            except Exception as e:\\r\\r                response = f\\""Error in parsing the response: {e}\\""\\r\\r                return response\\r\\r        else:\\r\\r            response = f\\""The is an error in POST response, response status: {response.status_code}\\""\\r\\r            return response\\r\\r    else:\\r\\r        response = requests.get(url=url, headers=header, verify=False)\\r\\r\\r\\r        logger.debug(f\\"" get_adapter_response returns {response}\\"")\\r\\r        if response.status_code == 200:\\r\\r            return json.loads(response.text)\\r\\r        else:\\r\\r            response = f\\""The is an error in GET response, response status: {response.status_code}\\""\\r\\r            return response""]},""position_x"":""338"",""position_y"":""137"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""QzVBJ"",""alias"":""Tools"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""tempFunc"",""requirements"":"""",""params"":[],""script"":[""def tempFunc():\\r    pass\\r\\r@tool(\\""Knowledge Search\\"", return_direct=True)\\rdef knowledge_search(query='', knowledge_base=''):\\r    '''\\r    use this tool for knowledge search. if user has not provided any knowledge base then ask the user to select knowledge_base.\\r    After user selects the knowledge_base , then show suggested queries\\r    Available Knowledge Base are  SAP, Infosys-SAP-KB, SOP and App Help\\r    Do not assume any knowledge base name and query on your own\\r    If user choose the knowledge base name , then ask user for the query. Don't generate random query\\r    Parameters:\\r        query (str): A question in natural language which is sent by user. If user has not given any query then use ''\\r        knowledge_base(str): knowledge_base name to search on\\r    Returns:\\r        returns response for the user query.\\r    '''\\r    final_response = dict()\\r    if knowledge_base == '' and query =='':\\r        print(\\""Inside IF WIth Knowledge Base and Query and empty\\"")\\r        index_list = [\\""App Help\\"", \\""SAP\\"", \\""Infosys-SAP-KB\\"", \\""SOP\\""]\\r        final_response = {\\r            \\""chat_system_response\\"": \\""Choose knowledge base\\"",\\r            'chat_suggestions': index_list\\r        }\\r    \\r    elif knowledge_base == \\""App Help\\"" and query!= \\""\\"":\\r        try:\\r            headers = {\\r                'Content-Type': 'application/json',\\r            }\\r            json_data = {\\r                \\""config\\"": {\\r                    \\""VectorStoreConfig\\"": {\\r                        \\""DB_Type\\"": \\""Qdrant\\"",\\r                        \\""query\\"": query,\\r                        \\""index_name\\"": \\""confluence\\"",\\r                        \\""k\\"": 4\\r                    },\\r                    \\""LLMConfig\\"": {\\r                        \\""LLM_Type\\"": \\""bedrock\\"",\\r                        \\""query\\"": query,\\r                        \\""max_tokens\\"": 8000,\\r                        \\""temperature\\"": 0,\\r                        \\""top_p\\"": 0.9\\r                    },\\r                    \\""EmbeddingConfig\\"": {}\\r                }\\r            }\\r            url = \\""http://victadpst-38:8080/ConfluenceSearch\\""\\r            response = requests.post(url, headers=headers, json=json_data, verify=False)\\r            if response.status_code == 200:\\r                import ast\\r                answer = ast.literal_eval(response.text)[0].get('Answer')\\r                context = ast.literal_eval(response.text)[1]\\r                lst = context.get('context')\\r                response_list = list()\\r                for source in lst[0:4]:\\r                    temp_dict = dict()\\r                    temp_dict['dataset_id'] = source.get('metadata')['id']\\r                    temp_dict['source'] = source.get('metadata')['source']\\r                    temp_dict['context'] = source.get('page_content').replace('''\\\\n''', \\"" \\"")\\r                    response_list.append(temp_dict)\\r                    global flag\\r                    flag = True\\r                    global references\\r                    references = response_list\\r                final_response = {\\r                        \\""chat_system_response\\"": answer\\r                    }\\r            else:\\r                answer = f\\""There is an issue in Adapter, response status: {response.status_code}\\""\\r                final_response = {\\r                    \\""chat_system_response\\"": answer\\r                }\\r                \\r        except Exception as e:\\r            print(f\\""Got Exception in confluence Method with msg: {e}\\"")\\r            \\r    elif knowledge_base == \\""App Help\\"" and query == \\""\\"":\\r        questions = [\\r            \\""How to create an Adapter ?\\"",\\r            \\""How to create an App ?\\"",\\r            \\""How to create a Connection ?\\""\\r                    ]\\r                    \\r        final_response = {\\r                \\""chat_system_response\\"": \\""Suggested queries\\"",\\r                'chat_suggestions': questions\\r            }\\r    \\r    elif knowledge_base != '' and query == '':\\r        print(\\""Inside ELIF WIth Knowledge Base is not null and Query is empty\\"")\\r        suggested_queries = []\\r        answer = get_adapter_response(url=\\""https://leap2:7000/api/aip/mltopics/list/activeMltopicsByOrg/leo1311\\"",\\r                                      type=\\""get\\"")\\r        for i in answer:\\r            if i['topicname'] == knowledge_base:\\r                suggested_queries = json.loads(i['suggested_queries'])\\r                print(f\\""Suggested Queries: {suggested_queries}\\"")\\r                print(f\\""Suggested Query type: {type(suggested_queries)}\\"")\\r        final_response = {\\r            \\""chat_system_response\\"": \\""Suggested queries\\"",\\r            'chat_suggestions': suggested_queries\\r        }\\r\\r    elif knowledge_base != \\""\\"" and query != \\""\\"":\\r        answer = get_adapter_response(url=\\""https://leap2:7000/api/aip/mltopics/list/activeMltopicsByOrg/leo1311\\"",\\r                                      type=\\""get\\"")\\r        \\r        if knowledge_base == \\""SAP\\"":\\r            index = \\""AzureOpenAI_SAP\\""\\r        else:\\r            index = knowledge_base\\r\\r        for i in answer:\\r\\r            if i['topicname'] == knowledge_base:\\r                kb_instance = i['adapterinstance']\\r\\r        instance_url = f'https://leap2:7000/api/aip/adapters/{kb_instance}/semanticsearch_infer/leo1311?isInstance=true'\\r\\r        kb_response = get_adapter_response(url=instance_url, type=\\""post\\"", query=query, index=index)\\r\\r        queryforurl = urllib.parse.quote(query)\\r\\r        url = f'landing/aip/datasets?page=1&search={queryforurl}&type=&org=leo1311&roleId=1&searchBy=Content&topics={knowledge_base}'\\r\\r        final_response = {\\r\\r            \\""chat_system_response\\"": kb_response,\\r\\r            \\""navigateUrl\\"": url\\r\\r        }      \\r    \\r    logger.info(f\\""Response JSON in Knowledge search: {final_response}\\"")\\r    return json.dumps(final_response)\\r\\r\\r\\r\\r@tool(\\""SOP Search\\"", return_direct=True)\\rdef sop_search(query: str):\\r    '''\\r    use this tool to get SOPs of the given query. Give answer in points.\\r    Look for answers for the questions like how to resolve user query or steps to reolve the user query\\r    Parameters:\\r        query (str): A question in natural language which is sent by user.\\r    Returns:\\r        returns response for the user query.\\r    '''\\r    sop_instance = \\""SemanticSearch-Azure-Instance\\""\\r    index = \\""SOP\\""\\r    instance_url = f\\""{Leap_URL}/api/aip/adapters/{sop_instance}/semanticsearch_infer/{Leap_Project_Name}?isInstance=true\\""\\r    kb_response = get_adapter_response(url=instance_url, type=\\""post\\"", query=query,\\r                                       index=index)\\r    if \\""I'm sorry\\"" not in kb_response:\\r        main_response = kb_response\\r        url = f\\""landing/aip/aip/datasets?page=1&search={query}&type=&org={Leap_Project_Name}&roleId=1&searchBy=Content&topics=SOP\\""\\r    else:\\r        main_response = \\""No SOP found for the query\\""\\r    final_response = {\\r        \\""chat_system_response\\"": main_response,\\r        \\""navigateUrl\\"": url\\r    }\\r    return json.dumps(final_response)""]},""position_x"":""144"",""position_y"":""136"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""WnFmF"",""alias"":""Invoke LLM"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""llm_invoke"",""requirements"":"""",""params"":[],""script"":[""from langchain.chat_models import AzureChatOpenAI\\rimport os\\r\\rllm = AzureChatOpenAI(\\r    deployment_name=os.environ['deploymentName'],\\r    model_name='gpt-35-turbo',  # This should be the full model name, e.g., 'gpt-35-turbo'\\r    openai_api_key=os.environ['app_OPENAI_API_KEY'],\\r    openai_api_version=os.environ['Azure_openai_api_version'],\\r    openai_api_base=os.environ['app_OPENAI_BASE'],  # Uncomment this line and remove the hardcoded value\\r    openai_api_type='azure',\\r    streaming=True,\\r    verbose=True\\r)\\r\\r\\rdef llm_invoke(data, user_prompt):\\r\\r    try:\\r\\r        prompt = ChatPromptTemplate.from_template(user_prompt)\\r\\r        chain = prompt | llm\\r\\r        try:\\r\\r            response = chain.invoke({\\""data\\"": data})\\r\\r            formatted_response = response.content\\r\\r            logger.info(formatted_response)\\r\\r        except:\\r\\r            formatted_response = \\""API overloaded, please try again after sometime...\\""\\r\\r        return formatted_response\\r\\r    except Exception as e:\\r\\r        logger.error(f\\""Exception in llm_invoke method: {e}\\"")""]},""position_x"":""146"",""position_y"":""316"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""cbYbV"",""alias"":""Sessions"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""get_mysql_connection"",""requirements"":"""",""params"":[],""script"":[""import os\\rimport logging as logger\\rimport json\\r\\rimport sys\\rimport mysql.connector\\rfrom langchain.chains.sql_database.query import create_sql_query_chain\\rfrom langchain_community.utilities.sql_database import SQLDatabase\\rfrom threading import Thread\\rfrom langchain_openai import AzureChatOpenAI\\rfrom langchain.agents import AgentExecutor, tool, create_structured_chat_agent\\rimport requests\\r\\rrequests.packages.urllib3.disable_warnings()\\rfrom langchain_core.prompts import PromptTemplate\\rimport logging\\rfrom langchain.memory import ConversationBufferMemory\\rimport certifi\\rfrom flask import Flask, jsonify, request\\rfrom flask_cors import CORS\\rimport uuid\\rimport os, time, json\\rfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\\rfrom datetime import datetime\\rimport urllib.parse\\r\\rLeap_Project_Id = 2\\rLeap_Project_Name = 'leo1311'\\rLeap_URL = os.environ['Leap_url']\\r\\rdef get_mysql_connection():\\r\\r    mydb = mysql.connector.connect(\\r\\r        host=os.environ['app_DB_HOST'],\\r\\r        user=os.environ['app_mysql_user'],\\r\\r        password=os.environ['app_DB_PASSWORD'],\\r\\r        database=os.environ['Data_DB'],\\r\\r        port=os.environ['Data_DB_port']\\r\\r    )\\r\\r    mycursor = mydb.cursor(dictionary=True)\\r\\r    return mydb, mycursor\\r\\r\\r\\r\\r\\rdef db_start_chat_session(chat_user_id: str, session_id: str, chat_time: str, date: str):\\r\\r    try:\\r\\r        table_name = \\""chatsession\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        # No existing record with the same chat_user_id and session_id, insert the new record\\r\\r        insert_query = f\\""INSERT INTO {table_name}  SELECT '{chat_user_id}', '{session_id}','{chat_time}', '{date}' ,'' AS t1 WHERE NOT EXISTS (SELECT session_id FROM {table_name} WHERE chat_user_id = '{chat_user_id}' AND session_id = '{session_id}')\\""\\r\\r        cursor.execute(insert_query)\\r\\r        connection.commit()\\r\\r        connection.close()\\r\\r        sys.exit()\\r\\r    except Exception as e:\\r\\r        logger.error(f\\""Error inserting record: {e}....\\"")\\r\\r\\r\\r\\r\\rdef db_get_user_chat_history(chat_user_id: str):\\r\\r    table_name = \\""chatsession\\""\\r\\r    connection, cursor = get_mysql_connection()\\r\\r    cursor.execute(\\r\\r        f\\""SELECT chat_time, date as chat_date, summary, session_id FROM {table_name} WHERE chat_user_id='{chat_user_id}'\\"")\\r\\r    rows = cursor.fetchall()\\r\\r    return rows\\r\\r\\r\\r\\r\\rdef db_update_chat_summary(session_id: str, summary: str):\\r\\r    try:\\r\\r        table_name = \\""chatsession\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        insert_query = f\\""Update {table_name} set summary = %s   WHERE  session_id = %s\\""\\r\\r        values = (summary, session_id)\\r\\r        cursor.execute(insert_query, values)\\r\\r        connection.commit()\\r\\r        connection.close()\\r\\r    except Exception as e:\\r\\r        connection.close()\\r\\r        logger.error(f\\""Error inserting record: {e}....\\"")\\r\\r\\r\\r\\r\\rdef db_add_chat_question_response(session_id, chat_user_query, query_time, chat_chain_of_thoughts,\\r\\r                                  chat_response_time, response,\\r\\r                                  response_time, references):\\r\\r    # Connect to the SQLite database\\r\\r    try:\\r\\r        table_name = \\""chathistory\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        source_list = json.dumps(references)\\r\\r        default_response = 'API overloaded, please try again after sometime...'\\r\\r        if response != default_response:\\r\\r            chat_user_query = chat_user_query.replace('\\""', '')\\r\\r            query = f\\""\\""\\""INSERT INTO {table_name} ( session_id, chat_user_query,query_time,chat_chain_of_thoughts,chat_response_time, message,response_time,source_references) \\r\\r                            VALUES (%s,%s,%s,%s,%s,%s,%s,%s)\\""\\""\\""\\r\\r            values = (\\r\\r                session_id, chat_user_query, query_time, json.dumps(chat_chain_of_thoughts), chat_response_time,\\r\\r                response, response_time, source_list)\\r\\r            cursor.execute(query, values)\\r\\r            # Commit the changes and close the connection\\r\\r            connection.commit()\\r\\r        connection.close()\\r\\r        summary = fetch_session_records_summary(session_id)\\r\\r        db_update_chat_summary(session_id, summary)\\r\\r    except:\\r\\r        connection.close()\\r\\r        print(response)\\r\\r    sys.exit()\\r\\r\\r\\r\\r\\r# except Exception as e:\\r\\r#     logger.error(f\\""Error inserting data: {e}...\\"")\\r\\rdef db_fetch_chat_session_records(chat_user_id, session_id):\\r\\r    try:\\r\\r        table_name = \\""chathistory\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        # Fetch data from the table based on session_id\\r\\r        query = f\\""\\""\\""SELECT id, session_id, chat_user_query,query_time,chat_chain_of_thoughts,chat_response_time, message,response_time,source_references as `references` FROM {table_name} WHERE session_id='{session_id}'\\""\\""\\""\\r\\r        cursor.execute(query)\\r\\r        rows = cursor.fetchall()\\r\\r        # Convert rows to the desired format\\r\\r        connection.close()\\r\\r        for r in rows:\\r\\r            r['chat_chain_of_thoughts'] = json.loads(r['chat_chain_of_thoughts'])\\r\\r            r['references'] = json.loads(r['references'])\\r\\r        return rows\\r\\r    except Exception as e:\\r\\r        connection.close()\\r\\r        logger.error(f\\""Error fetching records: {e}...\\"")\\r\\r\\r\\r\\r\\rdef fetch_session_records_summary(session_id):\\r\\r    try:\\r\\r        table_name2 = \\""chathistory\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        # Limiting to 2 records per session_id...\\r\\r        cursor.execute(\\r\\r            f\\""SELECT chat_user_query FROM {table_name2} WHERE session_id='{session_id}' LIMIT 6\\"")\\r\\r        user_questions = cursor.fetchall()\\r\\r        summary_prompt = \\""\\""\\""\\r\\r                        generate the summary of Topic discussed in the context in 20 words. Remember to not summerize with extra unnecessary words in summary.\\r\\r                        {data} \\r\\r                        \\""\\""\\""\\r\\r        chat_summary = llm_invoke(user_questions, summary_prompt)\\r\\r        return chat_summary\\r\\r    except Exception as e:\\r\\r        connection.close()\\r\\r        logger.error(f\\""Error fetching session records: {e}...\\"")\\r\\r\\r\\r\\r\\rdef db_fetch_chat_time(session_id):\\r\\r    try:\\r\\r        table_name = \\""chatsession\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        cursor.execute(f\\""SELECT chat_time FROM {table_name} WHERE session_id='{session_id}'\\"")\\r\\r        row = list(cursor.fetchone().values())\\r\\r        connection.close()\\r\\r        return row[0]\\r\\r    except Exception as e:\\r\\r        connection.close()\\r\\r        logger.error(f\\""Error fetching chat time: {e}...\\"")""]},""position_x"":""515"",""position_y"":""134"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]}],""pipeline_attributes"":[{""name"":""usedSecrets"",""value"":""app_DB_HOST""},{""name"":""usedSecrets"",""value"":""app_DB_PASSWORD""},{""name"":""usedSecrets"",""value"":""app_mysql_user""},{""name"":""usedSecrets"",""value"":""app_OPENAI_API_KEY""},{""name"":""usedSecrets"",""value"":""app_OPENAI_BASE""}],""environment"":[{""name"":""Leap_access_token"",""value"":""aec127c2-c984-33f6-9a3a-355xd1dof097""},{""name"":""ICAP_URL"",""value"":""http://victlptst-42:5000""},{""name"":""Data_DB_port"",""value"":""3307""},{""name"":""Data_DB"",""value"":""leap_7000_ref_data""},{""name"":""Confluence_search_url"",""value"":""http://victadpst-38:8080/ConfluenceSearch""},{""name"":""Azure_openai_api_version"",""value"":""2023-07-01-preview""},{""name"":""deploymentName"",""value"":""gtp35turbo""},{""name"":""Leap_url"",""value"":""https://leap2:7000""}]}","admin","Knowledge Search Chatbot ","2024-10-07 04:53:22","LEOKNWLD96127","leo1311","DragNDropLite","51",NULL,"chain",NULL,"\0","0"
"admin","2024-10-01 05:25:21.530000","\0","Flask app for Leo Chatbot",NULL,"{""elements"":[{""id"":""VknlU"",""alias"":""create chat context object"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""create_chat_context_object"",""requirements"":"""",""params"":[],""script"":[""\\r# from leaputils.processoutputs import processOutput\\rimport os\\rimport logging as logger\\rimport json\\r\\rimport sys\\rimport mysql.connector\\rfrom langchain.chains.sql_database.query import create_sql_query_chain\\rfrom langchain_community.utilities.sql_database import SQLDatabase\\rfrom threading import Thread\\rfrom langchain_openai import AzureChatOpenAI\\rfrom langchain.agents import AgentExecutor, tool, create_structured_chat_agent\\rimport requests\\r\\rrequests.packages.urllib3.disable_warnings()\\rfrom langchain_core.prompts import PromptTemplate\\rimport logging\\rfrom langchain.memory import ConversationBufferMemory\\rimport certifi\\rfrom flask import Flask, jsonify, request\\rfrom flask_cors import CORS\\rimport uuid\\rimport os, time, json\\rfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\\rfrom datetime import datetime\\rimport urllib.parse\\r\\rclass ChatContext:\\r    #: Unique chat session id\\r    chat_id: str = None\\r    #: Unique chat user id, to be derived from jwt implicitly once auth is implemented\\r    chat_user_id: str = None\\r    #: Context storage for the session\\r    chat_context: list[str] = None\\r    # User query\\r    chat_user_query: str = None\\r    #: AI chatbot response\\r    chat_system_response: str = None\\r    #: Send the user uploaded file in blob format\\r    chat_user_upload_file: object = None\\r    #: User uploaded file type\\r    chat_user_upload_file_type: str = None\\r    #: Response time for the chat in miliseconds\\r    chat_response_time: float = None\\r    #: RAI metric value\\r    chat_rai_metric: float = None\\r    #: Confidence score/ accuracy metric for the chat query response\\r    chat_confidence_score: float = None\\r    #: If chat response contain a file, populate it with the extention such as png, jpg, mp4, mp3\\r    chat_response_file_type: list[str] = None\\r    #: If chat response contain a file, populate it with the extention such as png, jpg, mp4, mp3\\r    chat_response_file_data: list[object] = None\\r\\rdef create_chat_context_object(chat_id, chat_user_id, chat_user_query, chat_system_response, chat_response_time):\\r    chat_context_obj = ChatContext()\\r    chat_context_obj.chat_id = chat_id\\r    chat_context_obj.chat_user_id = chat_user_id\\r    chat_context_obj.chat_user_query = chat_user_query\\r    chat_context_obj.chat_system_response = chat_system_response\\r    chat_context_obj.chat_response_time = chat_response_time\\r    return chat_context_obj\\r\\r\\rchat_context: ChatContext = ChatContext\\r\\rchat_history: dict = dict()""]},""position_x"":""454"",""position_y"":""262"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""EbpDp"",""alias"":""FlaskAPP"",""name"":""FlaskAPP"",""classname"":""FlaskAPP"",""category"":""FlaskAPP"",""attributes"":{""port"":""8514"",""script"":[""\\r\\r\\rapp = Flask(__name__)\\r\\rCORS(app)\\r\\r\\""\\""\\""Do chat. send the user query and get the response back\\r\\r\\""\\""\\""\\r\\r\\r\\r\\r\\r@app.route(\\""/api/chat\\"", methods=[\\""POST\\""])\\r\\rdef do_chat():\\r\\r    data = json.loads(request.get_data())\\r\\r    chat_id = data.get('chat_id', None)\\r\\r    if chat_id is None or chat_id == \\""\\"" or chat_id == \\""null\\"":\\r\\r        chat_id = uuid.uuid4().hex\\r\\r    chat_user_id = data.get('chat_user_id', None)\\r\\r    if chat_user_id is None:\\r\\r        raise ValueError(\\""Error: User ID not provided\\"")\\r\\r    chat_user_query = data.get('chat_user_query')\\r\\r    logger.info(f\\""User Query: {chat_user_query}\\"")\\r\\r    previous_chat_history = chat_history.get(chat_id, [])\\r\\r    memory = intialise_memory(previous_chat_history)\\r\\r    chat_time = datetime.now().strftime(\\""%I:%M %p\\"")\\r\\r    current_date = datetime.now().strftime(\\""%d-%b-%Y\\"")\\r\\r    thread = Thread(target=db_start_chat_session, args=(chat_user_id, chat_id, str(chat_time), current_date))\\r\\r    thread.start()\\r\\r    start = time.time()\\r\\r    chat_system_response_dict = get_chain_response(chat_user_query, memory)\\r\\r    end = time.time()\\r\\r    chat_response_time = (end - start) * 10 ** 3\\r\\r    chat_system_response = chat_system_response_dict['chat_system_response']\\r\\r    current_chat_context = create_chat_context_object(chat_id, chat_user_id, chat_user_query,\\r\\r                                                      chat_system_response, chat_response_time)\\r\\r    update_chat = chat_history.get(chat_id, [])\\r\\r    update_chat.append(current_chat_context)\\r\\r    chat_history[chat_id] = update_chat\\r\\r    global flag\\r\\r    global references\\r\\r    if flag:\\r\\r        ref = references\\r\\r        references = []\\r\\r        flag = False\\r\\r    else:\\r\\r        ref = []\\r\\r    response_time = datetime.now().strftime(\\""%I:%M %p\\"")\\r\\r    thread = Thread(target=db_add_chat_question_response, args=(chat_id, chat_user_query, str(chat_time),\\r\\r                                                                chat_system_response_dict['chat_chain_of_thoughts'],\\r\\r                                                                chat_response_time,\\r\\r                                                                chat_system_response, str(response_time), ref))\\r\\r    thread.start()\\r\\r    response = {\\r\\r        \\""chat_id\\"": chat_id,\\r\\r        \\""chat_user_id\\"": chat_user_id,\\r\\r        \\""chat_response_time\\"": chat_response_time,\\r\\r        \\""chat_chain_of_thoughts\\"": chat_system_response_dict['chat_chain_of_thoughts'],\\r\\r        \\""Chat_time\\"": str(datetime.now()),\\r\\r        \\""references\\"": ref\\r\\r    }\\r\\r    response.update(chat_system_response_dict)\\r\\r    return response\\r\\r\\r\\r\\r\\r@app.route(\\""/api/get_chat_intro\\"", methods=[\\""GET\\""])\\r\\rdef get_chat_intro():\\r\\r    try:\\r\\r        response_dict = dict()\\r\\r        response_dict[\\""chat_system_intro\\""] = \\""How may I help you \\""\\r\\r        response_dict[\\""chat_suggestions\\""] = [\\r\\r            {\\r\\r                \\""Options\\"":\\r\\r                    [\\r\\r                        \\""Process Tickets\\"", \\""Troubleshoot\\"", \\""Self Help\\"", \\""Knowledge Search\\""\\r\\r                    ]\\r\\r            }\\r\\r        ]\\r\\r        response = json.dumps(response_dict)\\r\\r        return response\\r\\r    except Exception as e:\\r\\r        app.logger.error(e)\\r\\r\\r\\r\\r\\r@app.route(\\""/api/getSessionChat\\"", methods=[\\""POST\\""])\\r\\rdef getSessionChat():\\r\\r    try:\\r\\r        data = json.loads(request.get_data())\\r\\r        session_id = data.get('chat_id', None)\\r\\r        chat_user_id = data.get('chat_user_id', None)\\r\\r        db_data = db_fetch_chat_session_records(chat_user_id, session_id)\\r\\r        num = 0\\r\\r        data = []\\r\\r        intro = json.loads(get_chat_intro())\\r\\r        for suggestion in intro[\\""chat_suggestions\\""]:\\r\\r            if \\""Options\\"" in suggestion:\\r\\r                suggestion[\\""Queries\\""] = suggestion.pop(\\""Options\\"")\\r\\r        intro[\\""chat_time\\""] = db_fetch_chat_time(session_id)\\r\\r        chat_intro = {\\r\\r            \\""chatbotIntro\\"":\\r\\r                intro\\r\\r        }\\r\\r        data.append(dict(chat_intro))\\r\\r        for i in db_data:\\r\\r            user = f\\""user{num}\\""\\r\\r            bot = f\\""bot{num + 1}\\""\\r\\r            num += 1\\r\\r            user_data = {\\r\\r                user: {\\r\\r                    \\""chat_id\\"": i['session_id'],\\r\\r                    \\""chat_user_query\\"": i['chat_user_query'],\\r\\r                    \\""chat_user_id\\"": 12,\\r\\r                    \\""chat_time\\"": i['query_time']\\r\\r                }\\r\\r            }\\r\\r            bot_data = {\\r\\r                bot: {\\r\\r                    \\""chat_chain_of_thoughts\\"": i['chat_chain_of_thoughts'],\\r\\r                    \\""chat_id\\"": i['session_id'],\\r\\r                    \\""chat_response_time\\"": i['chat_response_time'],\\r\\r                    \\""chat_system_response\\"": i['message'],\\r\\r                    \\""references\\"": i['references'],\\r\\r                    \\""chat_user_id\\"": 12,\\r\\r                    \\""chat_time\\"": i['response_time']\\r\\r                }\\r\\r            }\\r\\r            data.append(dict(user_data))\\r\\r            data.append(dict(bot_data))\\r\\r        return data\\r\\r    except Exception as e:\\r\\r        logger.error(f\\""Exception in history method: {e} \\"")\\r\\r\\r\\r\\r\\r@app.route(\\""/api/userChatHistory\\"", methods=[\\""POST\\""])\\r\\rdef get_user_chat_history():\\r\\r    try:\\r\\r        data = json.loads(request.get_data())\\r\\r        chat_user_id = data.get('chat_user_id', None)\\r\\r        result = db_get_user_chat_history(chat_user_id)\\r\\r        result = {'records': result}\\r\\r        return result\\r\\r    except Exception as e:\\r\\r        logger.error(f\\""Exception in get_User_Session method: {e} \\"")\\r\\r\\r\\r\\r\\r@app.route('/healthCheck', methods=['GET'])\\r\\rdef healthCheck():\\r\\r    response = {'Instance': os.environ['Leap_URL'],  'Project': os.environ['Leap_Project_Name'],\\r\\r                'Health': 'up', 'Chain': 'ITSM IT Assistant v4', 'Job ID': \\""LEOITSMT46125\\"", \\""Hosted On\\"": os.environ[\\""POD\\""]}\\r\\r    return jsonify(response), 200""]},""position_x"":""608"",""position_y"":""319"",""connectors"":[],""inputEndpoints"":[""in""],""outputEndpoints"":[],""formats"":{""port"":""integer"",""script"":""textarea""},""codeGeneration"":{""imports"":[""from flask import Flask"",""from flask import jsonify"",""from flask import request"",""import openai""],""requirements"":[""flask""],""script"":""def FlaskAPP(port_param=5000,script_param=''):\\r\\n    app.run(debug=True, host='0.0.0.0', port = port_param)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[]},{""id"":""lTghn"",""alias"":""Intialise Agent"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""intialise_memory"",""requirements"":"""",""params"":[],""script"":[""def intialise_memory(previous_chat_history):\\r\\r    try:\\r\\r        logger.info(\\""Initialising memory...........\\"")\\r\\r        memory = ConversationBufferMemory(memory_key=\\""chat_history\\"", return_messages=True, input_key=\\""input\\"",\\r\\r                                          output_key=\\""output\\"")\\r\\r        if len(previous_chat_history) > 0:\\r\\r            for context_obj in previous_chat_history:\\r\\r                ai_message = str(context_obj.chat_system_response)\\r\\r                memory.chat_memory.add_user_message(context_obj.chat_user_query)\\r\\r                memory.chat_memory.add_ai_message(ai_message)\\r\\r        return memory\\r\\r    except Exception as e:\\r\\r        logger.debug(f\\""Exception in initialise memory method: {e}\\"")\\r\\r\\r\\r\\r\\rsystem = '''Respond to the human as helpfully and accurately as possible. You have access to the following tools:\\r\\r{tools}\\r\\rUse a json blob to specify a tool by providing an action key (tool name) and an action_input key (tool input).\\r\\rValid \\""action\\"" values: \\""Final Answer\\"" or {tool_names}\\r\\rProvide only ONE action per $JSON_BLOB, as shown:\\r\\r```\\r\\r{{\\r\\r\\""action\\"": $TOOL_NAME,\\r\\r\\""action_input\\"": $INPUT\\r\\r}}\\r\\r```\\r\\rFollow this format:\\r\\rQuestion: input question to answer\\r\\rThought: consider previous responses and subsequent steps\\r\\rAction:\\r\\r```\\r\\r$JSON_BLOB\\r\\r```\\r\\rObservation: action result\\r\\r... (repeat Thought/Action/Observation N times)\\r\\rThought: I know what to respond\\r\\rAction:\\r\\r```\\r\\r{{\\r\\r\\""action\\"": \\""Final Answer\\"",\\r\\r\\""action_input\\"": \\""Final response to human\\""\\r\\r}}\\r\\rBegin! Reminder to ALWAYS respond with a valid json blob of a single action. \\r\\rYou should always try to use only the specified tools for the user's query.\\r\\r Do not ask for default parameters of tools.\\r\\r If the user asks to fetch or get something from database then don't convert the user query to SQL query just pass the\\r\\r  same natural language user query as the action_input. \\r\\r  If user provides important information such as role ID, system ID, case ID, knowledge base, ticket number save this information in memory and\\r\\r   use this information for subsequent user queries. \\r\\rPlease generate a response using only the defined tools available to you.\\r\\r Try to use knowledge search tool for an general queries. first ask the user for knowledge base and then ask for query. \\r\\r SAve knowledge base name in memory for subsequent questions\\r\\r don't generate random queries for knowledge search tool\\r\\r When user asks for main menu then clear the memory and start fresh\\r\\r\\r\\r Check all tools before responding if you are authorized for system admin tasks. You are authorized to do tasks like role assignment and password reset'''\\r\\rhuman = '''\\r\\r{input}\\r\\r{agent_scratchpad}\\r\\r(reminder to respond in a JSON blob no matter what)'''\\r\\rprompt = ChatPromptTemplate.from_messages(\\r\\r    [\\r\\r        (\\""system\\"", system),\\r\\r        MessagesPlaceholder(\\""chat_history\\"", optional=True),\\r\\r        (\\""human\\"", human),\\r\\r    ]\\r\\r)\\r\\r""]},""position_x"":""452"",""position_y"":""379"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""uxQll"",""alias"":""Get chain response"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""get_chain_response"",""requirements"":"""",""params"":[],""script"":[""def get_chain_response(chat_user_query, memory):\\r\\r    # try:\\r\\r    chat_system_response = {}\\r\\r    Answer_dict = {}\\r\\r    chain_of_thoughts = []\\r\\r    tools = [fetch_tickets, fetch_tickets_recommendation, resolve_ticket, verify_ticket, url_navigator, password_reset,\\r\\r             role_assignment, fetch_alerts, get_case_status,enrich_ticket,\\r\\r             get_workflow_status, knowledge_search, related_tickets, related_ci, self_help, main_menu]  # sop_search\\r\\r    agent = create_structured_chat_agent(llm, tools, prompt)\\r\\r    agent_executor = AgentExecutor(agent=agent, tools=tools, verbose=True, return_intermediate_steps=True,\\r\\r                                   memory=memory, handle_parsing_errors=True)\\r\\r    try:\\r\\r        chat_system_response = agent_executor.invoke({\\""input\\"": chat_user_query})\\r\\r\\r\\r    except requests.RequestException as r:\\r\\r        chat_system_response[\\""output\\""] = \\""API overloaded, please try again after sometime...\\""\\r\\r        chat_system_response[\\""intermediate_steps\\""] = []\\r\\r    except Exception as e:\\r\\r        chat_system_response[\\""output\\""] = e\\r\\r        chat_system_response[\\""intermediate_steps\\""] = []\\r\\r    try:\\r\\r        Answer_dict = json.loads(chat_system_response[\\""output\\""])\\r\\r    except Exception as e:\\r\\r        if isinstance(chat_system_response[\\""output\\""], dict):\\r\\r            return chat_system_response[\\""output\\""]\\r\\r        else:\\r\\r            system_response = chat_system_response[\\""output\\""]\\r\\r            Answer_dict[\\""chat_system_response\\""] = system_response\\r\\r    if len(chat_system_response['intermediate_steps']) > 0:\\r\\r        temp_dict = dict(chat_system_response['intermediate_steps'][0][0])\\r\\r        value = temp_dict.get('tool', 'NA')\\r\\r        logger.info\\r\\r        if \\""_Exception\\"" not in value:\\r\\r            tool_input = temp_dict.get('tool_input', {})\\r\\r            if type(tool_input) != str:\\r\\r                tool_input = json.dumps(tool_input)\\r\\r            response_dict = {\\r\\r                'tool': temp_dict.get('tool', 'NA'),\\r\\r                'tool_input': tool_input,\\r\\r                'observation': f\\""After understanding user query, I decided to use {temp_dict.get('tool', 'NA')} tool\\"",\\r\\r                'type': \\""AgentAction\\""\\r\\r            }\\r\\r        chain_of_thoughts.append(response_dict)\\r\\r        Answer_dict[\\""chat_chain_of_thoughts\\""] = chain_of_thoughts\\r\\r    else:\\r\\r        Answer_dict[\\""chat_chain_of_thoughts\\""] = \\""No tool has been used.\\""\\r\\r        return Answer_dict\\r\\r    return Answer_dict""]},""position_x"":""607"",""position_y"":""212"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""ywOgE"",""alias"":""Get adapter response"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""get_adapter_response"",""requirements"":"""",""params"":[],""script"":[""\\r\\r\\rdef get_adapter_response(url, index=None, query=None, type=\\""post\\""):\\r\\r    '''\\r\\r    using this method to get the adapter response\\r\\r    '''\\r\\r    logger.debug(f\\"" get_adapter_response called with index{index}\\"")\\r\\r    header = {\\r\\r        'Accept': 'application/json, text/plain, */*',\\r\\r        'Content-Type': 'application/json',\\r\\r        'Project': Leap_Project_Id,\\r\\r        'ProjectName': Leap_Project_Name,\\r\\r        'Access-Token': os.environ['Leap_access_token'],\\r\\r    }\\r\\r    payload = {\\""query\\"": query, \\""index_name\\"": index}\\r\\r    if type == \\""post\\"":\\r\\r        response = requests.post(url=url, headers=header, json=payload, verify=False)\\r\\r        logger.info(response)\\r\\r        if response.status_code == 200:\\r\\r            try:\\r\\r\\r\\r                answer = json.loads(response.text)[0].get(\\""Answer\\"")\\r\\r                return answer\\r\\r            except Exception as e:\\r\\r                response = f\\""Error in parsing the response: {e}\\""\\r\\r                return response\\r\\r        else:\\r\\r            response = f\\""The is an error in POST response, response status: {response.status_code}\\""\\r\\r            return response\\r\\r    else:\\r\\r        response = requests.get(url=url, headers=header, verify=False)\\r\\r\\r\\r        logger.debug(f\\"" get_adapter_response returns {response}\\"")\\r\\r        if response.status_code == 200:\\r\\r            return json.loads(response.text)\\r\\r        else:\\r\\r            response = f\\""The is an error in GET response, response status: {response.status_code}\\""\\r\\r            return response""]},""position_x"":""276"",""position_y"":""330"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""FYNTA"",""alias"":""Trigger EMF workflow"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""trigger_emf_workflow"",""requirements"":"""",""params"":[],""script"":[""\\rdef trigger_emf_workflow(payload):\\r\\r    import requests\\r\\r    import json\\r\\r    url = Leap_URL+\\""/api/emf/triggerWorkflow\\""\\r\\r    payload = json.dumps(payload)\\r\\r    header = {\\r\\r        'Accept': 'application/json, text/plain, */*',\\r\\r        'Content-Type': 'application/json',\\r\\r        'Project': Leap_Project_Id,\\r\\r        'ProjectName': Leap_Project_Name,\\r\\r        'Access-Token': os.environ['Leap_access_token'],\\r\\r    }\\r\\r    response = requests.request(\\""POST\\"", url, headers=header, data=payload, verify=False)\\r\\r    logger.info(response.text)\\r\\r    if response.status_code == 202:\\r\\r        workflowInstanceid = json.loads(response.text)[\\""workflowInstanceId\\""]\\r\\r        workflowId = json.loads(response.text)[\\""workflowId\\""]\\r\\r    return workflowInstanceid, workflowId""]},""position_x"":""275"",""position_y"":""73"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""RqjRt"",""alias"":""Get Status"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""get_workflow_status"",""requirements"":"""",""params"":[],""script"":[""def get_workflow_status(workflowInstanceid, workflowid):\\r\\r    status = ''\\r\\r    return status""]},""position_x"":""441"",""position_y"":""141"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""WMUpQ"",""alias"":""Extract Tickets"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""icap_extract_tickets"",""requirements"":"""",""params"":[],""script"":[""def icap_extract_tickets(shortdescription):\\r\\r    url = os.environ[\\""ICAP_URL\\""]+\\""/api/Extractors/extract_tickets?applicationId=2\\""\\r\\r    logger.info(\\""Extracting Tickets\\"")\\r\\r    logger.info(shortdescription)\\r\\r    payload = json.dumps({\\r\\r        \\""shortDescription\\"": shortdescription,\\r\\r        \\""BotId\\"": \\""27\\""\\r\\r    })\\r\\r    headers = {\\r\\r        'Content-Type': 'application/json'\\r\\r    }\\r\\r\\r\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=payload)\\r\\r\\r\\r    logger.info(response.text)""]},""position_x"":""92"",""position_y"":""120"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""bpUth"",""alias"":""Classify Ticket"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""icap_classify_ticket"",""requirements"":"""",""params"":[],""script"":[""def icap_classify_ticket(number):\\r\\r    url = os.environ[\\""ICAP_URL\\""]+\\""/api/Classifier/classify_ticket?applicationId=2\\""\\r\\r\\r\\r    payload = json.dumps({\\r\\r        \\""ticketId\\"": number\\r\\r    })\\r\\r    headers = {\\r\\r        'Content-Type': 'application/json'\\r\\r    }\\r\\r\\r\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=payload)\\r\\r\\r\\r    print(response.text)\\r\\r    return response.text""]},""position_x"":""94"",""position_y"":""236"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""KGWQH"",""alias"":""Verify Ticket"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""icap_verify_ticket"",""requirements"":"""",""params"":[],""script"":[""def icap_verify_ticket(number):\\r    url = os.environ[\\""ICAP_URL\\""]+\\""/api/Classifier/verify_ticket?applicationId=2\\""\\r    payload = json.dumps({\\r        \\""ticketId\\"": number,\\r        \\""ManualVerificationNeeded\\"": \\""no\\""\\r    })\\r    headers = {\\r        'Content-Type': 'application/json'\\r    }\\r\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=payload)\\r\\r    print(response.text)\\r\\r    return response.text""]},""position_x"":""92"",""position_y"":""341"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""XraxM"",""alias"":""Create Case"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""create_case"",""requirements"":"""",""params"":[],""script"":[""def create_case(type, payload):\\r\\r    '''\\r\\r    use to create case\\r\\r    '''\\r\\r    header = {\\r\\r        'Accept': 'application/json, text/plain, */*',\\r\\r        'Content-Type': 'application/json',\\r\\r        'Project': Leap_Project_Id,\\r\\r        'ProjectName': Leap_Project_Name,\\r\\r        'Access-Token': os.environ[\\""Leap_access_token\\""]\\r\\r    }\\r\\r    url = f'''{Leap_URL}/api/aip/inbox/startProcess/{Leap_Project_Name}/{type}/Manual?ocrIdList='''\\r\\r    json_data = payload\\r\\r    response = requests.post(url=url, headers=header, json=json_data, verify=False)\\r\\r    logger.info(\\""Create Case \\"" + response.text)\\r\\r    if response.status_code == 201:\\r\\r        status_message = response.text\\r\\r        return status_message\\r\\r    else:\\r\\r        return response.text\\r\\r\\r\\r\\r\\rdef getCaseStatus(case_id: str):\\r\\r    '''\\r\\r    use to get status of the case based on case ID provided, case ID is of the format RA:00000165.\\r\\r    '''\\r\\r    header = {\\r\\r        'Accept': 'application/json, text/plain, */*',\\r\\r        'Content-Type': 'application/json',\\r\\r        'Project': Leap_Project_Id,\\r\\r        'ProjectName': Leap_Project_Name,\\r\\r        'Access-Token':  os.environ[\\""Leap_access_token\\""]\\r\\r    }\\r\\r    url = f'''{Leap_URL}/api/aip/datasets/searchData?page=0&size=1&sortEvent=BID&sortOrder=-1&datasetName=JCIJC_DM87192&projectName={Leap_Project_Name}&searchParams=%7B'and':%5B%7B'or':%7B'property':'business_key_','equality':'=','value':\\""{case_id}\\""%7D%7D%5D%7D'''\\r\\r    response = requests.get(url=url, headers=header, verify=False)\\r\\r    print(response)\\r\\r    if response.status_code == 200:\\r\\r        status_message = response.text\\r\\r        response = llm_invoke(status_message, \\""summarize the data {data}\\"")\\r\\r        return response\\r\\r""]},""position_x"":""439"",""position_y"":""15"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""QzVBJ"",""alias"":""Ticket Recommendation"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""tempFunc"",""requirements"":"""",""params"":[],""script"":[""\\r@tool(\\""Get ticket recommendations\\"", return_direct=True)\\r\\rdef fetch_tickets_recommendation(number: str) -> str:\\r\\r    \\""\\""\\""\\r\\r    Use this tool to show recommendations for a ticket. Recommendations include recommended SOP, recommended assignment, recommended assignee,\\r\\r    etc\\r\\r    Parameters:\\r\\r        number (str): Ticket number\\r\\r    Returns:\\r\\r       Navigates to  recommendations tab\\r\\r    \\""\\""\\""\\r\\r    navigateurl = \\""landing/aip/tickets/create-ticket/{0}?tab=Recommendations\\"".format(number)\\r\\r    final_answer = {\\r\\r        \\""chat_system_response\\"": \\""Showing recommendations for the ticket\\"",\\r\\r        \\""navigateUrl\\"": navigateurl\\r\\r    }\\r\\r    return json.dumps(final_answer)\\r    \\r@tool(\\""Fetch Tickets\\"", return_direct=True)\\rdef fetch_tickets(query: str) -> str:\\r    \\""\\""\\""\\r    Use this tool  to answer all the queries related to ticket or details.\\r    If user asks to process tickets then fetch top 5 tickets from database and send the data , do not summarize\\r    If user asks for troubleshoot tickets then fetch top 5 tickets with column tags=troubleshoot from database and send the data , do not summarize\\r    If user asks to fetch details of the ticket then get the details from database based on number of tickets\\r    Parameters:\\r        query (str): A question in natural language form which is sent by user.\\r    Returns:\\r        A  dictionary containing the relevant details fetched from the database based on the SQL query.\\r    \\""\\""\\""\\r    host = os.environ['app_DB_HOST']\\r    user = os.environ['app_mysql_user']\\r    password = os.environ['app_DB_PASSWORD']\\r    database = os.environ['Data_DB']\\r    port = os.environ['Data_DB_port']\\r    encoded_password = urllib.parse.quote(password)\\r    connection_string = f\\""mysql://{user}:{encoded_password}@{host}:{port}/{database}\\""\\r    table_name = Leap_Project_Name+\\""_tickets\\""\\r    db = SQLDatabase.from_uri(connection_string, include_tables=[table_name])\\r    template = '''\\r            Given an input question, first create a syntactically correct query to run, then look at the results of the query \\r            and return the answer and it should be {top_k} \\r            In SQL query try to include \\r            shortdescription, priority, assignedto, number, createdDate, createdby , configurationItem and state  columns.\\r            for ticket use type in (incident , incidents) and for alerts use type=alerts. Always get top results ordered by createddate in descending order.\\r            If user asks to process tickets then fetch top 5 tickets from database  where category is Functional Issues and send the data , do not summarize\\r            If user asks for troubleshoot tickets then fetch top 5 tickets where column tags has value troubleshoot from database and send the data , do not summarize\\r            If user asks for ticket details then get the details of ticket based on number from database and the sql query should include \\r            shortdescription, priority, assignedto, number, createdDate, createdby , configurationItem and state  columns.\\r            If user asks for recurring issues then fetch top 5 most occuring short descriptions\\r            Only use the following tables: {table_info}.\\r            Question: {input}\\r            and just return the SQL Query to run as the final response without mentioning SQL: in the final response.\\r            '''\\r    prompt = PromptTemplate.from_template(template)\\r    chain = create_sql_query_chain(llm, db, prompt=prompt)\\r    response = chain.invoke({\\""question\\"": query})\\r    print(response)\\r    mydb = mysql.connector.connect(\\r    host = os.environ['app_DB_HOST'],\\r    user = os.environ['app_mysql_user'],\\r    password = os.environ['app_DB_PASSWORD'],\\r    database = os.environ['Data_DB'],\\r    port = os.environ['Data_DB_port']\\r    )\\r    mycursor = mydb.cursor(dictionary=True)\\r    mycursor.execute(response)\\r    data = mycursor.fetchall()\\r    try:\\r        if len(data) == 1 and data[0]['number'] is not None:\\r            navigateurl = \\""landing/aip/tickets/create-ticket/{0}?tab=Summary\\"".format(data[0]['number'])\\r        elif len(data) > 0:\\r            navigateurl = \\""landing/aip/tickets/incident\\""\\r        user_prompt = '''\\r                For the given data  - \\r                {data}\\r                Generated summary for each of the object in  the following format:\\r                Number: INC424244\\r                Short Descrption: short description\\r                The ticket was created by admin, on Thu, 01 Oct 2020 17:11:11 GMT with high priority and it's been assigned to DAS group and the ticket is currently in open state.\\r\\r                DO not fail for misiing information , summarize whatever you can\\r                '''\\r        answer = llm_invoke(data, user_prompt=user_prompt)\\r        final_answer = {\\r            \\""chat_system_response\\"": answer,\\r            \\""navigateUrl\\"": navigateurl\\r        }\\r        print(final_answer)\\r        return json.dumps(final_answer)\\r    except:\\r        final_answer = {\\r            \\""chat_system_response\\"": data}\\r        return json.dumps(final_answer)\\r\\r\\r@tool(\\""Fetch Alerts\\"", return_direct=True)\\rdef fetch_alerts(query: str) -> str:\\r    \\""\\""\\""\\r    Use this tool  to answer all the queries related to alerts or alert details.\\r    If user asks to fetch details of the ticket then get the details from database based on alert number\\r    Parameters:\\r        query (str): A question in natural language form which is sent by user.\\r    Returns:\\r        A  dictionary containing the relevant details fetched from the database based on the SQL query.\\r    \\""\\""\\""\\r    host = os.environ['app_DB_HOST']\\r    user = os.environ['app_mysql_user']\\r    password = os.environ['app_DB_PASSWORD']\\r    database = os.environ['Data_DB']\\r    port = os.environ['Data_DB_port']\\r    encoded_password = urllib.parse.quote(password)\\r    # connection_string=os.environ.get('app_sql_connection')\\r    connection_string = f\\""mysql://{user}:{encoded_password}@{host}:{port}/{database}\\""\\r    table_name = Leap_Project_Name+\\""_tickets\\""\\r    db = SQLDatabase.from_uri(connection_string, include_tables=[table_name])\\r    template = '''\\r            Given an input question, first create a syntactically correct query to run, then look at the results of the query \\r            and return the answer and it should be {top_k} and the sql query should include \\r            shortdescription, priority, assignedto, number, createdDate, createdby , configurationItem and state  columns for all the query unless and untill the query wants to have some specific columns then have those only.\\r            for alerts use type=alerts. Always get top results ordered by createddate in descending order.\\r            If user asks for alert details then get the details of alert based on number from database\\r            If user asks for recurring issues then fetch top 5 most occuring short descriptions\\r            Only use the following tables: {table_info}.\\r            Question: {input}\\r            amd just return the SQL Query to run as the final response without mentioning SQL: in the final response.\\r            '''\\r    prompt = PromptTemplate.from_template(template)\\r    chain = create_sql_query_chain(llm, db, prompt=prompt)\\r    response = chain.invoke({\\""question\\"": query})\\r    mydb = mysql.connector.connect(\\r        host=os.environ['app_DB_HOST'],\\r    user = os.environ['app_mysql_user'],\\r    password = os.environ['app_DB_PASSWORD'],\\r    database = os.environ['Data_DB'],\\r    port = os.environ['Data_DB_port']\\r    )\\r    mycursor = mydb.cursor(dictionary=True)\\r    mycursor.execute(response)\\r    data = mycursor.fetchall()\\r    if len(data) == 1:\\r        navigateurl = \\""landing/aip/tickets/create-ticket/{0}?tab=Summary\\"".format(data[0]['number'])\\r    else:\\r        navigateurl = \\""landing/aip/tickets/alerts\\""\\r    user_prompt = '''\\r            For the given data  - \\r            {data}\\r            Generated summary for each of the object in  the following format:\\r            Number: INC424244\\r            Details:\\r            This ticket has short description as Process_Invoice_Id:12345, the ticket was created by admin, on Thu, 01 Oct 2020 17:11:11 GMT with high priority and it's been assigned to DAS group and the ticket is currently in open state.\\r            '''\\r    answer = llm_invoke(data, user_prompt=user_prompt)\\r    final_answer = {\\r        \\""chat_system_response\\"": answer,\\r        \\""navigateUrl\\"": navigateurl\\r    }\\r    return json.dumps(final_answer)\\r\\r\\r@tool(\\""Related CIs\\"", return_direct=True)\\rdef related_ci(number: str) -> str:\\r    \\""\\""\\""\\r    Use this tool  to fetch configurationItem and cmdb_ci_sys_id from the database for a given ticket\\r    Parameters:\\r        number (str): ticket number\\r    Returns:\\r        A  dictionary containing the relevant details fetched from the database based on the SQL query.\\r    \\""\\""\\""\\r\\r\\r    table_name = os.environ[\\""Leap_Project_Name\\""]+\\""_tickets\\""\\r    mydb = mysql.connector.connect(\\r    host=os.environ['app_DB_HOST'],\\r    user = os.environ['app_mysql_user'],\\r    password = os.environ['app_DB_PASSWORD'],\\r    database = os.environ['Data_DB'],\\r    port = os.environ['Data_DB_port']\\r    )\\r    mycursor = mydb.cursor(dictionary=True)\\r    mycursor.execute(f\\""Select configurationItem ,cmdb_ci_sys_id from {table_name} where number = '{number}' \\"")\\r    data = mycursor.fetchall()\\r    if len(data) > 0:\\r        navigateURL = 'landing/iamp-graph/network/ConfigItem?cmdb_ci_sys_id={0}'.format(data[0]['cmdb_ci_sys_id'])\\r        final_answer = {\\r            \\""chat_system_response\\"": \\""Showing graph for \\"" + data[0]['configurationItem'],\\r            \\""navigateUrl\\"": navigateURL\\r        }\\r    else:\\r        final_answer = {\\r            \\""chat_system_response\\"": \\""Could not find any related CIs\\""\\r        }\\r    return json.dumps(final_answer)\\r\\r\\r@tool(\\""Ticket Resolver\\"", return_direct=True)\\rdef resolve_ticket(number, shortdescription):\\r    '''\\r    use this tool when user asks to resolve a ticket, do not use this tool to troubleshoot or fetch details of ticket\\r    parameter:\\r        number(str) : Ticket/Alert number to resolve\\r        shortdescription(str) : short description of the ticket to resolve ; if short description is not found then fetch the details of the ticket using number\\r        return: returns response for the user query\\r    '''\\r    if shortdescription == None or shortdescription == '':\\r        shortdescription = fetch_tickets(\\""Get short description of ticket \\"" + number)\\r        logger.info(shortdescription)\\r\\r    response = icap_classify_ticket(number)\\r    logger.info(response)\\r    if json.loads(response)['ErrorData'] == \\""No tickets found to classify.\\"":\\r        icap_extract_tickets(shortdescription)\\r    response = icap_classify_ticket(number)\\r    logger.info(response)\\r    answer = {\\r        \\""chat_system_response\\"": \\""Ticket Classified Successfully\\"",\\r        'chat_suggestions': [json.loads(response)['SuccessData'].title() + \\"". Proceed with verification.\\"",\\r                             \\""No, do not verify ticket\\""]\\r    }\\r\\r    return json.dumps(answer)\\r\\r\\r@tool(\\""Verify Ticket\\"", return_direct=True)\\rdef verify_ticket(number: str, workflowName: str, verified: bool):\\r    '''\\r        use this tool when user asks to proceed with ticket verification\\r        parameter:\\r            number(str) : Ticket/Alert number to resolve\\r            workflowname(str) : workflowname assigned to ticket\\r            verified(bool): ticket is verified or not  If user proceeds with resolution then True else False\\r        return: returns response for the user query\\r        '''\\r    if verified == True:\\r        try:\\r            import random\\r            import string\\r            random_digits = ''.join(random.choices(string.digits, k=4))\\r            # Construct the unique ID with the desired format\\r            unique_id = f\\""WFE{random_digits}\\""\\r            payload = {\\""eventTypeName\\"": \\""Resolve Ticket\\"",\\r                       \\""context\\"": {\\""requestId\\"": unique_id,\\r                                   \\""ticketId\\"": number}}\\r            workflowInstanceid, workflowid = trigger_emf_workflow(payload)\\r            if workflowInstanceid is not None and workflowInstanceid != '':\\r                answer = {\\r                    \\""chat_system_response\\"": f\\""Workflow triggered successfully. \\"",\\r                    \\""navigateUrl\\"": f\\""landing/iamp-eda/trigger-workflow?workflowId={workflowid}&instanceid={workflowInstanceid}\\"",\\r                    'chat_suggestions': [\\r                        f\\""Get Workflow Status. WorkflowId:{workflowid}, InstanceId={workflowInstanceid} \\""]\\r                }\\r                return json.dumps(answer)\\r            else:\\r                answer = {\\r                    \\""chat_system_response\\"": \\""Unable to trigger workflow!!\\""\\r                }\\r            return json.dumps(answer)\\r        except Exception as e:\\r            logger.error(f\\""Got Exception in Code Method with msg: {e}\\"")\\r    else:\\r        answer = {\\r            \\""chat_system_response\\"": \\""Ticket resolution not triggered\\""\\r        }\\r        return json.dumps(answer)\\r\\r\\r@tool(\\""Enrich Ticket\\"", return_direct=True)\\rdef enrich_ticket(number: str):\\r    '''\\r        use this tool when user asks to enrich the ticket\\r        parameter:\\r            number(str) : Ticket/Alert number to enrich\\r        return: returns response for the user query\\r        '''\\r    try:\\r        import random\\r        import string\\r        random_digits = ''.join(random.choices(string.digits, k=4))\\r        # Construct the unique ID with the desired format\\r        unique_id = f\\""WFE{random_digits}\\""\\r        payload = {\\""eventTypeName\\"": \\""Fetch Ticket Details\\"",\\r                   \\""context\\"": {\\""ExecutionId\\"": unique_id,\\r                               \\""ticketId\\"": number}}\\r        workflowInstanceid, workflowid = trigger_emf_workflow(payload)\\r        if workflowInstanceid is not None and workflowInstanceid != '':\\r            answer = {\\r                \\""chat_system_response\\"": f\\""Workflow triggered successfully. \\"",\\r                \\""navigateUrl\\"": f\\""landing/iamp-eda/trigger-workflow?workflowId={workflowid}&instanceid={workflowInstanceid}\\"",\\r                'chat_suggestions': [\\r                    f\\""Get Workflow Status. WorkflowId:{workflowid}, InstanceId={workflowInstanceid} \\""]\\r            }\\r            return json.dumps(answer)\\r        else:\\r            answer = {\\r                \\""chat_system_response\\"": \\""Unable to trigger workflow!!\\""\\r            }\\r        return json.dumps(answer)\\r    except Exception as e:\\r        logger.error(f\\""Got Exception in Code Method with msg: {e}\\"")\\r\\r\\r@tool(\\""Self help\\"", return_direct=True)\\rdef self_help(query: str) -> str:\\r    '''\\r    Use this tool to give menu options available for self help:\\r    The options are-\\r        1. Role Assignment\\r        2. Password Reset\\r    '''\\r    try:\\r        list = [\\""Role Assignment\\"", \\""Password Reset\\""]\\r        answer = {\\r            \\""chat_system_response\\"": \\""Choose from the options\\"",\\r            'chat_suggestions': list\\r        }\\r        return json.dumps(answer)\\r        # return final\\r    except Exception as e:\\r        logger.debug(f\\""Exception in self help tool : {e}\\"")\\r\\r\\r@tool(\\""main menu\\"", return_direct=True)\\rdef main_menu(query: str) -> str:\\r    '''\\r    Use this tool to give main menu options or if user want to know what all can be done with this chatbot\\r    The options are-\\r        1. Process Tickets\\r        2. Troubleshoot Tickets\\r        3. Self help\\r        4. Knowledge search\\r    '''\\r    try:\\r        list = [\\""Process Tickets\\"", \\""Troubleshoot Tickets\\"", \\""Self help\\"", \\""Knowledge search\\""]\\r        answer = {\\r            \\""chat_system_response\\"": \\""Choose from the options\\"",\\r            'chat_suggestions': list\\r        }\\r        return json.dumps(answer)\\r        # return final\\r    except Exception as e:\\r        logger.debug(f\\""Exception in self help tool : {e}\\"")\\r\\r\\r@tool(\\""Password Reset\\"", return_direct=True)\\rdef password_reset(system_id='', old_password='', new_password='') -> str:\\r    '''\\r    Use this tool to reset password for a system. password is set for a system; it is not mandatory\\r    parameter:\\r        system_id(str) : System Id for which the password rest has to be done.\\r        old_password(str) : Old password\\r        new_password(str) : New password\\r    return: returns response for the user query\\r    '''\\r    try:\\r        if system_id is None or system_id == '' or old_password is None or old_password == '' or new_password is None or new_password == '':\\r            answer = {\\r                'chat_system_response': \\""LEOPSWRD43672\\"",\\r                'type': 'Form',\\r                'chat_formName': \\""LEOPSWRD43672\\"",\\r                'form_fields': {\\r                    'system_id': system_id,\\r                    'old_password': old_password,\\r                    'new_password': new_password,\\r                    'requested_by': \\""\\""\\r                },\\r                'chat_suggestions': None\\r            }\\r            return json.dumps(answer)\\r        else:\\r            response = create_case('Password_reset', payload={\\r                'system_id': system_id,\\r                'old_password': old_password,\\r                'new_password': new_password,\\r                'requested_by': \\""\\""\\r            })\\r            answer = {\\r                'chat_system_response': \\""Case Created successfully!\\""\\r            }\\r            return json.dumps(answer)\\r    except Exception as e:\\r        logger.debug(f\\""Exception in  tool : {e}\\"")\\r\\r\\r@tool(\\""Role Assignment\\"", return_direct=True)\\rdef role_assignment(system_id='', role_id='') -> str:\\r    '''\\r    Use this tool for role assignment queries. if user has not provided system_id or role_id then take empty as default\\r    parameter:\\r        system_id(str) : System Id\\r        role_id:(str) : Role id\\r    return: returns response for the user query\\r    '''\\r    if system_id is None or system_id == '' or role_id is None or role_id == '':\\r        answer = {\\r            'chat_system_response': \\""JCITSTXW52953\\"",\\r            'type': 'Form',\\r            'chat_formName': \\""JCITSTXW52953\\"",\\r            'form_fields': {\\r                'system_id': system_id,\\r                'role_id': role_id,\\r                'requested_by': \\""\\""\\r            },\\r            'chat_suggestions': None\\r        }\\r        return json.dumps(answer)\\r    else:\\r        logger.info(\\""In else of Role assignment\\"")\\r        response = create_case('RoleAssignment', payload={\\r            'system_id': system_id,\\r            'role_id': role_id,\\r            'requested_by': \\""admin@infosys.com\\""\\r        })\\r        logger.info(response)\\r        answer = {\\r            'chat_system_response': response\\r        }\\r        return json.dumps(answer)\\r\\r\\r@tool(\\""Navigator\\"", return_direct=True)\\rdef url_navigator(query: str) -> str:\\r    '''\\r    use this tool, when user asks to navigate or when user query is related to navigate\\r    parameters: query: user query asking to navigate\\r    returns: Returns navigate urls\\r    '''\\r    try:\\r        user_prompt = '''\\r        Understand the query and match with the following list of options and return most relevant option from the list\\r        query list = [navigate to tickets, navigate to tickets_analytics, navigate to bcc, navigate to cis, navigate to emf]\\r        {data}\\r        '''\\r        prompt = ChatPromptTemplate.from_template(user_prompt)\\r        chain = prompt | llm\\r        response = chain.invoke({\\""data\\"": query})\\r        if (response.content).lower() == \\""navigate to tickets\\"":\\r            final = \\""landing/aip/tickets/alerts\\""\\r        elif (response.content).lower() == \\""navigate to bcc\\"":\\r            final = \\""landing/cc/OCC/52\\""\\r        elif (response.content).lower() == \\""navigate to tickets_analytics\\"":\\r            final = \\""landing/dynamicDashboard/grid/OCC/2\\""\\r        elif (response.content).lower() == \\""navigate to cis\\"":\\r            final = \\""landing/iamp-cis\\""\\r        elif (response.content).lower() == \\""navigate to emf\\"":\\r            final = \\""landing/iamp-eda\\""\\r        else:\\r            final = \\""Unable to locate navigate url\\""\\r            query = final\\r        answer = {\\r            \\""chat_system_response\\"": query,\\r            # \\""chat_chain_of_thoughts\\"":\\"" \\"",\\r            \\""navigateUrl\\"": final\\r        }\\r        return json.dumps(answer)\\r        # return final\\r    except Exception as e:\\r        logger.debug(f\\""Exception in URL navigator tool : {e}\\"")\\r\\r\\r@tool(\\""Workflow Status\\"", return_direct=True)\\rdef get_workflow_status(workflowId, instanceid):\\r    '''\\r    use this tool to get the status of the workflow\\r    parameter: workflowId(str): workflowid of the workflow\\r    parameter: workflowId(str): instanceid of the workflow\\r    returns: returns the status of the workflow\\r    '''\\r    try:\\r\\r        answer = {\\r            \\""chat_system_response\\"": \\""Refreshed Status\\"",\\r            \\""navigateUrl\\"": f\\""landing/iamp-eda/trigger-workflow?workflowId={workflowId}&instanceid={instanceid}\\""\\r        }\\r        return json.dumps(answer)\\r    except Exception as e:\\r        logger.error(f\\""Got Exception in Workflow Status Method with msg: {e}\\"")\\r\\r\\r@tool(\\""Case Status\\"", return_direct=True)\\rdef get_case_status(caseId):\\r    '''\\r    use this tool to get the status of the case\\r    parameter: caseId(str): case id\\r    returns: returns the status of the case\\r    '''\\r    try:\\r        response = getCaseStatus(caseId)\\r        answer = {\\r            \\""chat_system_response\\"": response\\r        }\\r        return json.dumps(answer)\\r    except Exception as e:\\r        logger.error(f\\""Got Exception in Workflow Status Method with msg: {e}\\"")\\r\\r\\r@tool(\\""Related Tickets\\"", return_direct=True)\\rdef related_tickets(shortdescription, number):\\r    '''\\r    use this tool to get related tickets of any ticket based on its short description\\r    parameter:\\r        shortdescription(str) : short description of the ticket\\r        number(str): ticket number for which related tickets are fetched\\r    return: returns response for the user query\\r    '''\\r    # try:\\r    headers = {\\r        'Content-Type': 'application/json', \\""access-token\\"": os.environ['Leap_access_token'], \\""Project\\"": \\""2\\""\\r    }\\r    json_data = {\\""index_name\\"":\\""leapdemo-leo1311-tickets\\"",\\""query\\"":shortdescription}\\r    url = f'''{Leap_URL}/api/aip/adapters/TicketsSearch-Adapter-Instance/semanticsearch_infer/{Leap_Project_Name}'''\\r    response = requests.post(url, headers=headers, json=json_data, verify=False)\\r    mainAnswer = \\""Related Tickets\\"" + os.linesep\\r    if response.status_code == 200:\\r        answer = json.loads(response.text)[0].get('Answer')\\r        navigateurl = \\""landing/aip/tickets/create-ticket/{0}?tab=Summary\\"".format(number)\\r\\r        answer = {\\r            \\""chat_system_response\\"": answer,\\r            \\""navigateUrl\\"": navigateurl\\r        }\\r        return json.dumps(answer)\\r    else:\\r        mainAnswer = f\\""There is an issue in Adapter, response status: {response.status_code}\\""\\r\\r    return mainAnswer\\r\\r\\r\\r@tool(\\""Knowledge Search\\"", return_direct=True)\\rdef knowledge_search(query='', knowledge_base=''):\\r    '''\\r    use this tool for knowledge search. if user has not provided any knowledge base then ask the user to select knowledge_base.\\r    After user selects the knowledge_base , then show suggested queries\\r    Available Knowledge Base are  SAP, Infosys-SAP-KB, SOP and App Help\\r    Do not assume any knowledge base name and query on your own\\r    If user choose the knowledge base name , then ask user for the query. Don't generate random query\\r    Parameters:\\r        query (str): A question in natural language which is sent by user. If user has not given any query then use ''\\r        knowledge_base(str): knowledge_base name to search on\\r    Returns:\\r        returns response for the user query.\\r    '''\\r    final_response = dict()\\r    if knowledge_base == '' and query =='':\\r        print(\\""Inside IF WIth Knowledge Base and Query and empty\\"")\\r        index_list = [\\""App Help\\"", \\""SAP\\"", \\""Infosys-SAP-KB\\"", \\""SOP\\""]\\r        final_response = {\\r            \\""chat_system_response\\"": \\""Choose knowledge base\\"",\\r            'chat_suggestions': index_list\\r        }\\r    \\r    elif knowledge_base == \\""App Help\\"" and query!= \\""\\"":\\r        try:\\r            headers = {\\r                'Content-Type': 'application/json',\\r            }\\r            json_data = {\\r                \\""config\\"": {\\r                    \\""VectorStoreConfig\\"": {\\r                        \\""DB_Type\\"": \\""Qdrant\\"",\\r                        \\""query\\"": query,\\r                        \\""index_name\\"": \\""confluence\\"",\\r                        \\""k\\"": 4\\r                    },\\r                    \\""LLMConfig\\"": {\\r                        \\""LLM_Type\\"": \\""bedrock\\"",\\r                        \\""query\\"": query,\\r                        \\""max_tokens\\"": 8000,\\r                        \\""temperature\\"": 0,\\r                        \\""top_p\\"": 0.9\\r                    },\\r                    \\""EmbeddingConfig\\"": {}\\r                }\\r            }\\r            url = \\""http://victadpst-38:8080/ConfluenceSearch\\""\\r            response = requests.post(url, headers=headers, json=json_data, verify=False)\\r            if response.status_code == 200:\\r                import ast\\r                answer = ast.literal_eval(response.text)[0].get('Answer')\\r                context = ast.literal_eval(response.text)[1]\\r                lst = context.get('context')\\r                response_list = list()\\r                for source in lst[0:4]:\\r                    temp_dict = dict()\\r                    temp_dict['dataset_id'] = source.get('metadata')['id']\\r                    temp_dict['source'] = source.get('metadata')['source']\\r                    temp_dict['context'] = source.get('page_content').replace('''\\r''', \\"" \\"")\\r                    response_list.append(temp_dict)\\r                    global flag\\r                    flag = True\\r                    global references\\r                    references = response_list\\r                final_response = {\\r                    \\""chat_system_response\\"": answer\\r                }\\r            else:\\r                answer = f\\""There is an issue in Adapter, response status: {response.status_code}\\""\\r                # print(f\\""Answer: {answer}\\"")\\r                final_response = {\\r                    \\""chat_system_response\\"": answer\\r                }\\r                \\r        except Exception as e:\\r            print(f\\""Got Exception in confluence Method with msg: {e}\\"")\\r            \\r    elif knowledge_base == \\""App Help\\"" and query == \\""\\"":\\r        questions = [\\r            \\""How to create an Adapter ?\\"",\\r            \\""How to create an App ?\\"",\\r            \\""How to create a Connection ?\\""\\r                    ]\\r                    \\r        final_response = {\\r                \\""chat_system_response\\"": \\""Suggested queries\\"",\\r                'chat_suggestions': questions\\r            }\\r    \\r    elif knowledge_base != '' and query == '':\\r        print(\\""Inside ELIF WIth Knowledge Base is not null and Query is empty\\"")\\r        suggested_queries = []\\r        answer = get_adapter_response(url=\\""https://leap2:7000/api/aip/mltopics/list/activeMltopicsByOrg/leo1311\\"",\\r                                      type=\\""get\\"")\\r        for i in answer:\\r            if i['topicname'] == knowledge_base:\\r                suggested_queries = json.loads(i['suggested_queries'])\\r                print(f\\""Suggested Queries: {suggested_queries}\\"")\\r                print(f\\""Suggested Query type: {type(suggested_queries)}\\"")\\r        final_response = {\\r            \\""chat_system_response\\"": \\""Suggested queries\\"",\\r            'chat_suggestions': suggested_queries\\r        }\\r\\r    elif knowledge_base != \\""\\"" and query != \\""\\"":\\r        answer = get_adapter_response(url=\\""https://leap2:7000/api/aip/mltopics/list/activeMltopicsByOrg/leo1311\\"",\\r                                      type=\\""get\\"")\\r        \\r        if knowledge_base == \\""SAP\\"":\\r            index = \\""AzureOpenAI_SAP\\""\\r        else:\\r            index = knowledge_base\\r\\r        for i in answer:\\r\\r            if i['topicname'] == knowledge_base:\\r                kb_instance = i['adapterinstance']\\r\\r        instance_url = f'https://leap2:7000/api/aip/adapters/{kb_instance}/semanticsearch_infer/leo1311?isInstance=true'\\r\\r        kb_response = get_adapter_response(url=instance_url, type=\\""post\\"", query=query, index=index)\\r\\r        queryforurl = urllib.parse.quote(query)\\r\\r        url = f'landing/aip/datasets?page=1&search={queryforurl}&type=&org=leo1311&roleId=1&searchBy=Content&topics={knowledge_base}'\\r\\r        final_response = {\\r\\r            \\""chat_system_response\\"": kb_response,\\r\\r            \\""navigateUrl\\"": url\\r\\r        }      \\r    \\r    logger.info(f\\""Response JSON in Knowledge search: {final_response}\\"")\\r    return json.dumps(final_response)\\r\\r\\r@tool(\\""SOP Search\\"", return_direct=True)\\rdef sop_search(query: str):\\r    '''\\r    use this tool to get SOPs of the given query. Give answer in points.\\r    Look for answers for the questions like how to resolve user query or steps to reolve the user query\\r    Parameters:\\r        query (str): A question in natural language which is sent by user.\\r    Returns:\\r        returns response for the user query.\\r    '''\\r    sop_instance = \\""SemanticSearch-Azure-Instance\\""\\r    index = \\""SOP\\""\\r    instance_url = f\\""{Leap_URL}/api/aip/adapters/{sop_instance}/semanticsearch_infer/{Leap_Project_Name}?isInstance=true\\""\\r    kb_response = get_adapter_response(url=instance_url, type=\\""post\\"", query=query,\\r                                       index=index)\\r    if \\""I'm sorry\\"" not in kb_response:\\r        main_response = kb_response\\r        url = f\\""landing/aip/aip/datasets?page=1&search={query}&type=&org={Leap_Project_Name}&roleId=1&searchBy=Content&topics=SOP\\""\\r    else:\\r        main_response = \\""No SOP found for the query\\""\\r    final_response = {\\r        \\""chat_system_response\\"": main_response,\\r        \\""navigateUrl\\"": url\\r    }\\r    return json.dumps(final_response)\\r    \\r    \\rdef tempFunc():\\r    pass""]},""position_x"":""92"",""position_y"":""11"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""WnFmF"",""alias"":""Invoke LLM"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""llm_invoke"",""requirements"":"""",""params"":[],""script"":[""\\rfrom langchain.chains.sql_database.query import create_sql_query_chain\\rfrom langchain_community.utilities.sql_database import SQLDatabase\\rfrom threading import Thread\\rfrom langchain_openai import AzureChatOpenAI\\rfrom langchain.agents import AgentExecutor, tool, create_structured_chat_agent\\rimport requests\\r\\rrequests.packages.urllib3.disable_warnings()\\rfrom langchain_core.prompts import PromptTemplate\\rimport logging\\rfrom langchain.memory import ConversationBufferMemory\\rimport certifi\\rfrom flask import Flask, jsonify, request\\rfrom flask_cors import CORS\\rimport uuid\\rimport os, time, json\\rfrom langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder\\rfrom datetime import datetime\\rimport urllib.parse\\r           \\r\\rfrom langchain.chat_models import AzureChatOpenAI\\rimport os\\r\\rllm = AzureChatOpenAI(\\r    deployment_name=os.environ['deploymentName'],\\r    model_name='gpt-35-turbo',  # This should be the full model name, e.g., 'gpt-35-turbo'\\r    openai_api_key=os.environ['app_OPENAI_API_KEY'],\\r    openai_api_version=os.environ['Azure_openai_api_version'],\\r    openai_api_base=os.environ['app_OPENAI_BASE'],  # Uncomment this line and remove the hardcoded value\\r    openai_api_type='azure',\\r    streaming=True,\\r    verbose=True\\r)\\r\\r\\r\\r\\rdef llm_invoke(data, user_prompt):\\r\\r    try:\\r\\r        prompt = ChatPromptTemplate.from_template(user_prompt)\\r\\r        chain = prompt | llm\\r\\r        try:\\r\\r            response = chain.invoke({\\""data\\"": data})\\r\\r            formatted_response = response.content\\r\\r            logger.info(formatted_response)\\r\\r        except:\\r\\r            formatted_response = \\""API overloaded, please try again after sometime...\\""\\r\\r        return formatted_response\\r\\r    except Exception as e:\\r\\r        logger.error(f\\""Exception in llm_invoke method: {e}\\"")""]},""position_x"":""594"",""position_y"":""92"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""cbYbV"",""alias"":""Sessions"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""get_mysql_connection"",""requirements"":"""",""params"":[],""script"":[""Leap_Project_Id = 2\\rLeap_Project_Name = 'leo1311'\\rLeap_URL = os.environ['Leap_url']\\r\\rdef get_mysql_connection():\\r\\r    mydb = mysql.connector.connect(\\r\\r        host=os.environ['app_DB_HOST'],\\r\\r        user=os.environ['app_mysql_user'],\\r\\r        password=os.environ['app_DB_PASSWORD'],\\r\\r        database=os.environ['Data_DB'],\\r\\r        port=os.environ['Data_DB_port']\\r\\r    )\\r\\r    mycursor = mydb.cursor(dictionary=True)\\r\\r    return mydb, mycursor\\r\\r\\r\\r\\r\\rdef db_start_chat_session(chat_user_id: str, session_id: str, chat_time: str, date: str):\\r\\r    try:\\r\\r        table_name = \\""chatsession\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        # No existing record with the same chat_user_id and session_id, insert the new record\\r\\r        insert_query = f\\""INSERT INTO {table_name}  SELECT '{chat_user_id}', '{session_id}','{chat_time}', '{date}' ,'' AS t1 WHERE NOT EXISTS (SELECT session_id FROM {table_name} WHERE chat_user_id = '{chat_user_id}' AND session_id = '{session_id}')\\""\\r\\r        cursor.execute(insert_query)\\r\\r        connection.commit()\\r\\r        connection.close()\\r\\r        sys.exit()\\r\\r    except Exception as e:\\r\\r        logger.error(f\\""Error inserting record: {e}....\\"")\\r\\r\\r\\r\\r\\rdef db_get_user_chat_history(chat_user_id: str):\\r\\r    table_name = \\""chatsession\\""\\r\\r    connection, cursor = get_mysql_connection()\\r\\r    cursor.execute(\\r\\r        f\\""SELECT chat_time, date as chat_date, summary, session_id FROM {table_name} WHERE chat_user_id='{chat_user_id}'\\"")\\r\\r    rows = cursor.fetchall()\\r\\r    return rows\\r\\r\\r\\r\\r\\rdef db_update_chat_summary(session_id: str, summary: str):\\r\\r    try:\\r\\r        table_name = \\""chatsession\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        insert_query = f\\""Update {table_name} set summary = %s   WHERE  session_id = %s\\""\\r\\r        values = (summary, session_id)\\r\\r        cursor.execute(insert_query, values)\\r\\r        connection.commit()\\r\\r        connection.close()\\r\\r    except Exception as e:\\r\\r        connection.close()\\r\\r        logger.error(f\\""Error inserting record: {e}....\\"")\\r\\r\\r\\r\\r\\rdef db_add_chat_question_response(session_id, chat_user_query, query_time, chat_chain_of_thoughts,\\r\\r                                  chat_response_time, response,\\r\\r                                  response_time, references):\\r\\r    # Connect to the SQLite database\\r\\r    try:\\r\\r        table_name = \\""chathistory\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        source_list = json.dumps(references)\\r\\r        default_response = 'API overloaded, please try again after sometime...'\\r\\r        if response != default_response:\\r\\r            chat_user_query = chat_user_query.replace('\\""', '')\\r\\r            query = f\\""\\""\\""INSERT INTO {table_name} ( session_id, chat_user_query,query_time,chat_chain_of_thoughts,chat_response_time, message,response_time,source_references) \\r\\r                            VALUES (%s,%s,%s,%s,%s,%s,%s,%s)\\""\\""\\""\\r\\r            values = (\\r\\r                session_id, chat_user_query, query_time, json.dumps(chat_chain_of_thoughts), chat_response_time,\\r\\r                response, response_time, source_list)\\r\\r            cursor.execute(query, values)\\r\\r            # Commit the changes and close the connection\\r\\r            connection.commit()\\r\\r        connection.close()\\r\\r        summary = fetch_session_records_summary(session_id)\\r\\r        db_update_chat_summary(session_id, summary)\\r\\r    except:\\r\\r        connection.close()\\r\\r        print(response)\\r\\r    sys.exit()\\r\\r\\r\\r\\r\\r# except Exception as e:\\r\\r#     logger.error(f\\""Error inserting data: {e}...\\"")\\r\\rdef db_fetch_chat_session_records(chat_user_id, session_id):\\r\\r    try:\\r\\r        table_name = \\""chathistory\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        # Fetch data from the table based on session_id\\r\\r        query = f\\""\\""\\""SELECT id, session_id, chat_user_query,query_time,chat_chain_of_thoughts,chat_response_time, message,response_time,source_references as `references` FROM {table_name} WHERE session_id='{session_id}'\\""\\""\\""\\r\\r        cursor.execute(query)\\r\\r        rows = cursor.fetchall()\\r\\r        # Convert rows to the desired format\\r\\r        connection.close()\\r\\r        for r in rows:\\r\\r            r['chat_chain_of_thoughts'] = json.loads(r['chat_chain_of_thoughts'])\\r\\r            r['references'] = json.loads(r['references'])\\r\\r        return rows\\r\\r    except Exception as e:\\r\\r        connection.close()\\r\\r        logger.error(f\\""Error fetching records: {e}...\\"")\\r\\r\\r\\r\\r\\rdef fetch_session_records_summary(session_id):\\r\\r    try:\\r\\r        table_name2 = \\""chathistory\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        # Limiting to 2 records per session_id...\\r\\r        cursor.execute(\\r\\r            f\\""SELECT chat_user_query FROM {table_name2} WHERE session_id='{session_id}' LIMIT 6\\"")\\r\\r        user_questions = cursor.fetchall()\\r\\r        summary_prompt = \\""\\""\\""\\r\\r                        generate the summary of Topic discussed in the context in 20 words. Remember to not summerize with extra unnecessary words in summary.\\r\\r                        {data} \\r\\r                        \\""\\""\\""\\r\\r        chat_summary = llm_invoke(user_questions, summary_prompt)\\r\\r        return chat_summary\\r\\r    except Exception as e:\\r\\r        connection.close()\\r\\r        logger.error(f\\""Error fetching session records: {e}...\\"")\\r\\r\\r\\r\\r\\rdef db_fetch_chat_time(session_id):\\r\\r    try:\\r\\r        table_name = \\""chatsession\\""\\r\\r        connection, cursor = get_mysql_connection()\\r\\r        cursor.execute(f\\""SELECT chat_time FROM {table_name} WHERE session_id='{session_id}'\\"")\\r\\r        row = list(cursor.fetchone().values())\\r\\r        connection.close()\\r\\r        return row[0]\\r\\r    except Exception as e:\\r\\r        connection.close()\\r\\r        logger.error(f\\""Error fetching chat time: {e}...\\"")""]},""position_x"":""277"",""position_y"":""207"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]}],""pipeline_attributes"":[{""name"":""usedSecrets"",""value"":""app_DB_HOST""},{""name"":""usedSecrets"",""value"":""app_DB_PASSWORD""},{""name"":""usedSecrets"",""value"":""app_mysql_user""},{""name"":""usedSecrets"",""value"":""app_OPENAI_API_KEY""},{""name"":""usedSecrets"",""value"":""app_OPENAI_BASE""}],""environment"":[{""name"":""Leap_access_token"",""value"":""aec127c2-c984-33f6-9a3a-355xd1dof097""},{""name"":""ICAP_URL"",""value"":""http://victlptst-42:5000""},{""name"":""Data_DB_port"",""value"":""3307""},{""name"":""Data_DB"",""value"":""leap_7000_ref_data""},{""name"":""Confluence_search_url"",""value"":""http://victadpst-38:8080/ConfluenceSearch""},{""name"":""Azure_openai_api_version"",""value"":""2023-07-01-preview""},{""name"":""deploymentName"",""value"":""gtp35turbo""},{""name"":""Leap_url"",""value"":""https://leap2:7000""}]}","admin","Leo Chatbot","2024-10-11 06:15:34","LEOLCHTB10964","leo1311","DragNDropLite","27",NULL,"chain",NULL,"\0","0"
"admin","2024-09-27 04:36:42.666000","\0","Flask chain of ticket search ",NULL,"{""elements"":[{""id"":""xjTxw"",""alias"":""Vectordb Config"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""PythonScript"",""requirements"":""azure-common==1.1.28, openai==0.27.10, azure-search-documents==11.4.0b8,qdrant_client, semantic-kernel==0.3.14.dev0, azure-core==1.29.4, flask"",""params"":[],""script"":[""class VectordbConfig:\\r\\r    def __init__(self, config_json: Optional[Any] = {}):\\r\\r        self.DB_Type: Optional[str] = config_json.get('DB_Type', \\""Faiss\\"")\\r\\r        self.elastic_search_url: str = config_json.get('elastic_search_url', os.environ.get('app_elastic_search_url'))\\r\\r        self.index_name: Optional[str] = config_json.get('index_name', \\""Vector_Store\\"")\\r\\r        self.qdrant_url: Optional[str] = config_json.get('qdrant_url', os.environ.get('app_QDRANT_URL'))\\r\\r        self.force_recreate: Optional[bool] = config_json.get('force_recreate', False)\\r\\r        self.query: Optional[str] = config_json.get('query', \\""Hi, How are you?\\"")\\r\\r        self.k: Optional[int] = config_json.get('k', 10)\\r\\r        self.score: Optional[float] = config_json.get('score', 0.8)\\r\\rdef PythonScript():\\r    pass""]},""position_x"":""80"",""position_y"":""0"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""yJcqT"",""alias"":""Query VectorDB"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""PythonScript"",""requirements"":"""",""params"":[],""script"":[""class QueryVectorDB:\\r\\r    def __init__(self, embedding) -> None:\\r        self.embeddings = embedding\\r    \\r    def get_similar_docs(self, config):\\r        \\""\\""\\""`Meta Faiss` vector store.\\r        To use, you must have the ``faiss`` python package installed.\\r        Example:\\r            .. code-block:: python\\r                from langchain_community.embeddings.openai import OpenAIEmbeddings\\r                from langchain_community.vectorstores import FAISS\\r                embeddings = OpenAIEmbeddings()\\r                texts = [\\""FAISS is an important library\\"", \\""LangChain supports FAISS\\""]\\r                faiss = FAISS.from_texts(texts, embeddings)\\r        \\""\\""\\""\\r        try:\\r            if config.DB_Type.lower() == 'faiss':\\r                return self.get_similar_docs_faiss_db(embeddings=self.embeddings,\\r                                                      persist_directory='/' + config.index_name, query=config.query,\\r                                                      k=config.k)\\r            elif config.DB_Type.lower() == 'chroma':\\r                return self.get_similar_docs_chroma_db(embeddings=self.embeddings,\\r                                                       persist_directory='/' + config.index_name, query=config.query,\\r                                                       k=config.k)\\r            elif config.DB_Type.lower() == 'elasticsearch':\\r                return self.get_similar_docs_elastic_db(embeddings=self.embeddings, docs=self.docs,\\r                                                        es_url=config.elastic_search_url, index_name=config.index_name,\\r                                                        query=config.query, k=config.k)\\r            elif config.DB_Type.lower() == 'qdrant':\\r                return self.get_similar_docs_qdrant_db(embeddings=self.embeddings, qdrant_url=config.qdrant_url,\\r                                                       collection_name=config.index_name, query=config.query,\\r                                                       k=config.k, score=config.score)\\r        except Exception as e:\\r            logger.info('Exception in get_similar_docs', e)\\r            raise e\\r\\r    def get_similar_docs_chroma_db(self, embeddings: Any = None, persist_directory: str = \\""\\"", query: str = '',\\r                                   k: int = None):\\r        \\""\\""\\""`ChromaDB` vector store.\\r        To use, you should have the ``chromadb`` python package installed.\\r        Example:\\r        .. code-block:: python\\r        from langchain_community.vectorstores import Chroma\\r        from langchain_community.embeddings.openai import OpenAIEmbeddings\\r        embeddings = OpenAIEmbeddings()\\r        vectorstore = Chroma(\\""langchain_store\\"", embeddings)\\""\\""\\""\\r        try:\\r            from langchain_community.vectorstores import Chroma\\r            db3 = Chroma(persist_directory=persist_directory, embeddings=embeddings)\\r            docs = db3.similarity_search(query, k=k)\\r\\r            return docs\\r        except Exception as e:\\r            logger.info('Exception in get_similar_docs_chroma_db', e)\\r            raise e\\r\\r    def get_similar_docs_faiss_db(self, embeddings: Any = None, persist_directory: str = \\""\\"", query: str = '',\\r                                  k: int = None):\\r        try:\\r            from langchain.vectorstores import FAISS\\r            db = FAISS.load_local(persist_directory, embeddings, allow_dangerous_deserialization=True)\\r            docs = db.similarity_search(query, k=k)\\r\\r            return docs\\r        except Exception as e:\\r            logger.info('Exception in get_similar_docs_faiss_db', e)\\r            raise e\\r\\r    def get_similar_docs_qdrant_db(self, qdrant_url: str = '', embeddings: Any = '', query: str = '',\\r                                   collection_name: str = '', k: int = None, score: float = 0.80):\\r        \\""\\""\\""\\r        QdrantvectorDb\\r        Args:[]\\r            embeddings=self.embeddings, # Vector embeddings to use for similarity search\\r            qdrant_url=config.qdrant_url, # URL of Qdrant search server\\r            collection_name=config.index_name, # Name of indexed document collection in Qdrant\\r            query=config.query # Search query text to find similar documents for\\r        \\""\\""\\""\\r        try:\\r            from qdrant_client import QdrantClient\\r\\r            client = QdrantClient(url=qdrant_url)\\r            if 'HuggingFaceEmbeddings' in str(type(embeddings)):\\r                from sentence_transformers import SentenceTransformer\\r                model = embeddings.model_name\\r                name = model.split('/')\\r                encoder = SentenceTransformer(name[1])\\r                query_vector = encoder.encode(query).tolist()\\r            elif 'AzureOpenAIEmbeddings' in str(type(embeddings)):\\r                import openai\\r                model = embeddings.deployment\\r                openai.api_key = embeddings.openai_api_key\\r                openai.api_version = embeddings.openai_api_version\\r                openai.api_type = embeddings.openai_api_type\\r                openai.api_base = embeddings.openai_api_base\\r                query_vector = openai.Embedding.create(\\r                    engine=model,\\r                    input=query,\\r                    model=embeddings.model,\\r                )['data'][0]['embedding']\\r            elif 'BedrockEmbeddings' in str(type(embeddings)):\\r                import json\\r                model_id = embeddings.model_id\\r                bedrock = embeddings.client\\r                input_text = query\\r                body = json.dumps({\\r                    \\""inputText\\"": input_text\\r                })\\r                accept = \\""application/json\\""\\r                content_type = \\""application/json\\""\\r                query_vector = bedrock.invoke_model(\\r                    body=body, modelId=model_id, accept=accept, contentType=content_type\\r                )\\r                query_vector = json.loads(query_vector.get('body').read())['embedding']\\r            hits = client.search(collection_name=collection_name, query_vector=query_vector, limit=k)\\r            l = []\\r            for hit in hits:\\r                if hit.score >= 0.8:\\r                    l.append(hit.payload)\\r\\r            if len(l) == 0:\\r                return \\""No Related Ticket found for the input query\\""\\r\\r            return l\\r        except Exception as e:\\r            logger.info('Exception in get_similar_docs_qdrant_db', e)\\r            raise e\\r\\r    def get_similar_docs_elastic_db(self, embeddings: Any = None, docs: Any = None, query: str = '', es_url=\\""\\"",\\r                                    index_name=\\""\\"", k: int = None):\\r        \\""\\""\\""`Elasticsearch` vector store.\\r        Args:\\r            index_name: Name of the Elasticsearch index to create.\\r            es_url: URL of the Elasticsearch instance to connect to.\\r            cloud_id: Cloud ID of the Elasticsearch instance to connect to.\\r            es_user: Username to use when connecting to Elasticsearch.\\r            es_password: Password to use when connecting to Elasticsearch.\\r            es_api_key: API key to use when connecting to Elasticsearch.\\r            es_connection: Optional pre-existing Elasticsearch connection.\\r            vector_query_field: Optional. Name of the field to store\\r                                the embedding vectors in.\\r            query_field: Optional. Name of the field to store the texts in.\\r            strategy: Optional. Retrieval strategy to use when searching the index.\\r                        Defaults to ApproxRetrievalStrategy. Can be one of\\r                        ExactRetrievalStrategy, ApproxRetrievalStrategy,\\r                        or SparseRetrievalStrategy.\\r            distance_strategy: Optional. Distance strategy to use when\\r                                searching the index.\\r                                Defaults to COSINE. Can be one of COSINE,\\r                                    EUCLIDEAN_DISTANCE, or DOT_PRODUCT.\\r        \\""\\""\\""\\r        try:\\r            from langchain_community.vectorstores import ElasticsearchStore\\r            db = ElasticsearchStore.from_documents(\\r                docs,\\r                embeddings,\\r                es_url=es_url,\\r                index_name=index_name,\\r            )\\r            db.client.indices.refresh(index=index_name)\\r            results = db.similarity_search(query, k=k)\\r            return results\\r        except Exception as e:\\r            logger.info('Exception in get_similar_docs_elastic_db', e)\\r            raise e\\r        \\rdef PythonScript():\\r    pass""]},""position_x"":""79"",""position_y"":""111"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""WDtCT"",""alias"":""FlaskAPP"",""name"":""FlaskAPP"",""classname"":""FlaskAPP"",""category"":""FlaskAPP"",""attributes"":{""port"":""8420"",""script"":[""app = Flask(__name__)\\r@app.route('/Ingest', methods=['POST'])\\r\\rdef ingest():\\r\\r    data = request.get_json()\\r\\r    collection_name_param = data.get('index_name', '')\\r\\r    url_param = data.get('qdrant_url', os.environ['app_QDRANT_URL'])\\r\\r    counter_param = data.get('counter', 1)\\r\\r    total_rows_param = data.get('total_rows', 2000)\\r\\r    new_collection_param = data.get('new_index', 'true')\\r\\r    # config=data.get('config','')\\r\\r    embedding_model_deployment_name_param = \\""openaiada2\\""\\r\\r    azure_openai_endpoint_param = \\""https://azureft.openai.azure.com/\\""\\r\\r    init_kernel = Addkernel()\\r\\r    dataobj = AzureTextEmbeddingService(init_kernel, embedding_model_deployment_name_param, azure_openai_endpoint_param)\\r\\r\\r\\r    json_string = GetData()\\r\\r\\r\\r    StoreEmbeddingsInQdrant(dataobj, json_string, collection_name_param, url_param, counter_param, total_rows_param,\\r\\r                            new_collection_param)\\r\\r\\r\\r    answer = {'Status': 'Success'}\\r\\r    return jsonify(answer), 200\\r\\r\\r\\r@app.route('/Infer', methods=['POST'])\\r\\rdef infer():\\r\\r    data = request.get_json()\\r\\r    DB_Type = data.get('DB_Type', 'Qdrant')\\r\\r    query = data.get('query', 'Hi')\\r\\r    index_name = data.get('index_name', data)\\r\\r    config = {\\""EmbeddingConfig\\"": {\\""embedding_type\\"": \\""AzureOpenAI\\""},\\r\\r              \\""VectorStoreConfig\\"": {\\""DB_Type\\"": DB_Type, \\""query\\"": query, \\""index_name\\"": index_name},\\r\\r              \\""LLMConfig\\"": {\\""LLM_Type\\"": \\""AzureOpenAI\\"", \\""temperature\\"": 0, \\""query\\"": query,\\r\\r                            \\""prompt_template\\"": \\""Human: Use the following pieces of context to provide a concise answer to the question at the end. If you dont know the answer, just say that you dont know, dont try to make up an answer{context}.For the query, if it requires drawing a table give results as a table markdown format.Question: {question}Assistant: \\"",\\r\\r                            \\""max_tokens\\"": 2000}}\\r\\r\\r\\r\\r\\r    embeddingmodels_infer_obj = EmbeddingModels()\\r\\r    embedding_config_obj = EmbeddingConfig(config['EmbeddingConfig'])\\r\\r    embeddings_out = embeddingmodels_infer_obj.get_embedding_function(embedding_config_obj)\\r\\r    vector_config_obj = VectordbConfig(config[\\""VectorStoreConfig\\""])\\r\\r    query_vector_db_obj = QueryVectorDB(embeddings_out)\\r\\r    similar_docs = query_vector_db_obj.get_similar_docs(vector_config_obj)\\r\\r    numberlist = []\\r\\r    if str(type(similar_docs[0])) != '''<class 'dict'>''':\\r\\r        context_list = []\\r\\r        for i in similar_docs:\\r\\r            d = {}\\r\\r            d[\\""page_content\\""] = i.page_content\\r\\r            d[\\""metadata\\""] = i.metadata\\r\\r            context_list.append(d)\\r\\r    else:\\r\\r        context_list = []\\r\\r        for i in range(len(similar_docs)):\\r\\r            d = {}\\r\\r            d[\\""page_content\\""] = similar_docs[i][\\""_text\\""]\\r\\r            d[\\""metadata\\""] = similar_docs[i]['_id']\\r\\r            context_list.append(d)\\r\\r            numberlist.append(similar_docs[i]['_id'])\\r\\r\\r\\r\\r\\r    answer = {'Answer': f\\""There are {len(context_list)} records found with numbers - {(',').join(numberlist)}\\"",\\r\\r              \\""dataset_id\\"": \\""Tickets\\"",\\r\\r              \\""dataset_type\\"": \\""MYSQL\\"",\\r\\r              \\""organization\\"": os.environ['Leap_Project_Name']\\r\\r              }\\r\\r\\r\\r    context = {'context': [{\\r\\r        \\""metadata\\"": {\\r\\r            \\""dataset_id\\"": \\""Tickets\\"",\\r\\r            \\""data\\"": {\\""number\\"": numberlist},\\r\\r            \\""dataset_type\\"": \\""MYSQL\\"",\\r\\r            \\""organization\\"": os.environ['Leap_Project_Name'],\\r\\r            \\""source\\"": \\""/RAG_data3_Tickets/Tickets\\""\\r\\r        }, \\""page_content\\"": pd.DataFrame(context_list).to_markdown()}]}\\r\\r\\r\\r    return jsonify(answer, context), 200\\r\\r\\r\\r\\r\\r@app.route('/root', methods=['GET'])\\r\\rdef root():\\r\\r    return jsonify({\\""Message\\"": \\""Success\\""})\\r\\r\\r\\r@app.route('/healthCheck', methods=['GET'])\\r\\rdef healthCheck():\\r\\r    response = {'Instance': os.environ['Leap_URL'],  'Project': os.environ['Leap_Project_Name'],\\r\\r                'Health': 'up', \\""Hosted On\\"": os.environ[\\""POD\\""]}\\r\\r    return jsonify(response), 200""]},""position_x"":""588"",""position_y"":""148"",""connectors"":[],""inputEndpoints"":[""in""],""outputEndpoints"":[],""formats"":{""port"":""integer"",""script"":""textarea""},""codeGeneration"":{""imports"":[""from flask import Flask"",""from flask import jsonify"",""from flask import request"",""import openai""],""requirements"":[""flask""],""script"":""def FlaskAPP(port_param=5000,script_param=''):\\r\\n    app.run(debug=True, host='0.0.0.0', port = port_param)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[]},{""id"":""rlbgO"",""alias"":""Embedding Config "",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""PythonScript"",""requirements"":"""",""params"":[],""script"":[""class EmbeddingConfig:\\r    def __init__(self, config_json: Optional[Any] = {}):\\r        self.embedding_type: Optional[str] = config_json.get('embedding_type', \\""HuggingFace\\"")\\r        self.model_name: Optional[str] = config_json.get('model_name', \\""sentence-transformers/all-MiniLM-L6-v2\\"")\\r        self.azure_openai_api_key: Optional[str] = config_json.get('azure_openai_api_key',\\r                                                                   os.environ.get('app_OPENAI_API_KEY'))\\r        self.azure_openai_endpoint: Optional[str] = config_json.get('azure_openai_endpoint',\\r                                                                    'https://azureft.openai.azure.com/')\\r        self.azure_api_version: Optional[str] = config_json.get('azure_api_version', '2023-03-15-preview')\\r        self.azure_deployment: Optional[str] = config_json.get('azure_deployment', 'openaiada2')\\r        self.openai_model: Optional[str] = config_json.get('openai_model', 'text-embedding-ada-002')\\r        self.openai_api_base: Optional[str] = config_json.get('openai_api_base', 'https://azureft.openai.azure.com/')\\r        self.openai_api_type: Optional[str] = config_json.get('openai_api_type', 'azure')\\r        self.bedrock_access_id: Optional[str] = config_json.get('bedrock_access_id',\\r                                                                os.environ.get('app_aws_secret_access_id'))\\r        self.bedrock_access_key: Optional[str] = config_json.get('bedrock_access_key',\\r                                                                 os.environ.get('app_aws_secret_access_key'))\\r        self.bedrock_region_name: Optional[str] = config_json.get('bedrock_region_name', 'us-east-1')\\r        self.bedrock_endpoint_url: Optional[str] = config_json.get('bedrock_endpoint_url',\\r                                                                   'https://bedrock-runtime.us-east-1.amazonaws.com')\\r        self.bedrock_model_id: Optional[str] = config_json.get('bedrock_model_id', 'amazon.titan-embed-g1-text-02')\\r        self.elastic_search_model_id: Optional[str] = config_json.get('elastic_search_model_id', None)\\r        self.elastic_search_cloud_id: Optional[str] = config_json.get('elastic_search_cloud_id', None)\\r        self.elastic_search_user_id: Optional[str] = config_json.get('elastic_search_user_id', None)\\r        self.elastic_search_password: Optional[str] = config_json.get('elastic_search_password', None)\\r\\r\\r\\rdef PythonScript():\\r    pass""]},""position_x"":""81"",""position_y"":""212"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""pNDwM"",""alias"":""Embedding Models"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""PythonScript"",""requirements"":"""",""params"":[],""script"":[""class EmbeddingModels:\\r\\r    def __init__(self) -> None:\\r\\r        pass\\r\\r\\r\\r    def get_embedding_function(self, config):\\r\\r        \\""\\""\\""Embedding Model Defination for vector db. We support FaissDB,chromadb,ElasticsearchDB, it's not required if you prepared your own vector db.\\r\\r        Args:\\r\\r            embedding_type(str): Type of Embedding to be used, We support HuggingFace, AzureOpenAI, Bedrock, ElasticSearch, Default is HuggingFace.\\r\\r            model_name(str): Model Name to generate the embedding according to your embedding type, Default is \\""sentence-transformers/all-MiniLM-L6-v2\\"".\\r\\r            AzureOpenAI_Params(str):azure_openai_api_key,\\r\\r                                    azure_openai_endpoint,\\r\\r                                    azure_api_version,\\r\\r                                    azure_deployment,\\r\\r                                    model_name= Open AI Embedding Model Name ,\\r\\r                                    openai_api_base,\\r\\r                                    openai_api_type\\r\\r            Bedrock_Params(str):bedrock_access_id,\\r\\r                                bedrock_access_key,\\r\\r                                bedrock_region_name,\\r\\r                                bedrock_endpoint_url,\\r\\r                                bedrock_model_id\\r\\r            ElasticSearch_Params(str):  elastic_search_model_id,\\r\\r                                        elastic_search_cloud_id,\\r\\r                                        elastic_search_user,\\r\\r                                        elastic_search_password\\r\\r        \\""\\""\\""\\r\\r        try:\\r\\r            logger.info(config.azure_openai_api_key)\\r\\r            if config.embedding_type.strip().lower() == \\""huggingface\\"":\\r\\r                return self.HuggingFace(model_name=config.model_name)\\r\\r            elif config.embedding_type.strip().lower() == \\""azureopenai\\"":\\r\\r                return self.AzureOpenAI(azure_openai_api_key_param=config.azure_openai_api_key,\\r\\r                                        azure_api_version_param=config.azure_api_version,\\r\\r                                        azure_deployment_param=config.azure_deployment, model_param=config.openai_model,\\r\\r                                        openai_api_base_param=config.openai_api_base,\\r\\r                                        openai_api_type_param=config.openai_api_type)\\r\\r            elif config.embedding_type.strip().lower() == \\""bedrock\\"":\\r\\r                return self.Bedrock(access_id_param=config.bedrock_access_id,\\r\\r                                    access_key_param=config.bedrock_access_key,\\r\\r                                    region_name_param=config.bedrock_region_name,\\r\\r                                    endpoint_url_param=config.bedrock_endpoint_url,\\r\\r                                    model_id_param=config.bedrock_model_id)\\r\\r            elif config.embedding_type.strip().lower() == \\""elasticsearch\\"":\\r\\r                return self.ElasticSearch(elastic_model_id_param=config.elastic_search_model_id,\\r\\r                                          es_cloud_id_param=config.elastic_search_cloud_id,\\r\\r                                          es_user_param=config.elastic_search_user,\\r\\r                                          es_password_param=config.elastic_search_password)\\r\\r            else:\\r\\r                raise Exception(\\r\\r                    \\""Unknown embedding type, we support only ElasticSearch, Bedrock, AzureOpenAI, and HuggingFace\\"")\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_embedding_function', e)\\r\\r            raise e\\r\\r\\r\\r    def HuggingFace(self, model_name: str = ''):\\r\\r        try:\\r\\r            from langchain.embeddings import HuggingFaceEmbeddings\\r\\r            embeddings = HuggingFaceEmbeddings(\\r\\r                model_name=model_name\\r\\r            )\\r\\r            return embeddings\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in HuggingFace', e)\\r\\r            raise e\\r\\r\\r\\r    def AzureOpenAI(self, azure_openai_api_key_param: str = '', azure_api_version_param: str = '',\\r\\r                    azure_deployment_param: str = '', model_param: str = '', openai_api_base_param: str = '',\\r\\r                    openai_api_type_param: str = ''):\\r\\r        try:\\r\\r            from langchain_community.embeddings import AzureOpenAIEmbeddings\\r\\r            embeddings = AzureOpenAIEmbeddings(api_key=azure_openai_api_key_param, api_version=azure_api_version_param,\\r\\r                                               azure_deployment=azure_deployment_param, model=model_param,\\r\\r                                               openai_api_type=openai_api_type_param, base_url=openai_api_base_param)\\r\\r            return embeddings\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in AzureOpenAI', e)\\r\\r            raise e\\r\\r\\r\\r    def Bedrock(self, access_id_param: str = '', access_key_param: str = '', region_name_param: str = '',\\r\\r                endpoint_url_param: str = '', model_id_param: str = ''):\\r\\r        try:\\r\\r            import boto3\\r\\r            from langchain.embeddings import BedrockEmbeddings\\r\\r            bedrock = boto3.client('bedrock-runtime', aws_access_key_id=access_id_param,\\r\\r                                   aws_secret_access_key=access_key_param, region_name=region_name_param,\\r\\r                                   endpoint_url=endpoint_url_param)\\r\\r            embeddings = BedrockEmbeddings(\\r\\r                model_id=model_id_param,\\r\\r                client=bedrock\\r\\r            )\\r\\r            embeddings\\r\\r            return embeddings\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in Bedrock', e)\\r\\r            raise e\\r\\r\\r\\r    def Elastic_search(self, model_id_param: str = '', es_cloud_id_param: str = '', es_user_param: str = '',\\r\\r                       es_password_param: str = ''):\\r\\r        try:\\r\\r            from langchain.embeddings.elasticsearch import ElasticsearchEmbeddings\\r\\r            embeddings = ElasticsearchEmbeddings.from_credentials(\\r\\r                model_id=model_id_param,\\r\\r                es_cloud_id=es_cloud_id_param,\\r\\r                es_user=es_user_param,\\r\\r                es_password=es_password_param,\\r\\r            )\\r\\r            return embeddings\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in Elastic_search', e)\\r\\r            raise e\\r\\r""]},""position_x"":""81"",""position_y"":""323"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""JibEs"",""alias"":""Connection"",""name"":""Connection"",""classname"":""Connection"",""category"":""Connection"",""attributes"":{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-27 05:45:25"",""alias"":""Ticket Search"",""id"":3205,""name"":""LEOTCKTS78163"",""description"":"""",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""encTfQ/qcmsIf62JcNXgrPyRnuauW/3ypLq\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""EN2JGJeZhBFDkMPpV3BD0eJP1FMgu0eNNiiRuv11Yi4ivwFsDAnpohiDYJQii5So7REzDG8rmgIic2xs8iYWHg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-27 05:45:25"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":null,""forruntime"":null,""foradapter"":null,""formodel"":null,""forpromptprovider"":null}},""position_x"":""249"",""position_y"":""35"",""connectors"":[],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""connections"":""""},""codeGeneration"":{""requirements"":[],""imports"":[],""script"":""def Connection_<id>(connections_param={}):\\n    \\n    return connections_param\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""HvFxv"",""alias"":""Get Data"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""GetData"",""requirements"":"""",""params"":[],""script"":[""# from urllib.parse import urlparse\\r# from leaputils import Vault\\r# from leaputils import Security\\r# import json\\r\\rdef GetData():\\r    \\r    # connection_attributes = connection(connections_param={u'dshashcode': u'8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2', u'salt': u'EN2JGJeZhBFDkMPpV3BD0eJP1FMgu0eNNiiRuv11Yi4ivwFsDAnpohiDYJQii5So7REzDG8rmgIic2xs8iYWHg==', u'interfacetype': None, u'lastmodifieddate': u'2024-09-27 05:45:25', u'foradapter': None, u'formodel': None, u'lastmodifiedby': u'admin', u'description': u'', u'extras': u'{\\""apispec\\"":{},\\""apispectemplate\\"":{}}', u'forruntime': None, u'type': u'MYSQL', u'connectionDetails': u'{\\""password\\"":\\""encTfQ/qcmsIf62JcNXgrPyRnuauW/3ypLq\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}', u'forpromptprovider': None, u'activetime': u'2024-09-27 05:45:25', u'fordataset': None, u'organization': u'leo1311', u'name': u'LEOTCKTS78163', u'alias': u'Ticket Search', u'id': 3205, u'category': u'SQL'})\\r    # connectionDetails = json.loads(connection_attributes['connectionDetails'])\\r    # salt= connection_attributes['salt']\\r    # username= connectionDetails['userName']\\r    # password=Security.decrypt(connectionDetails['password'],salt)\\r    # url=connectionDetails['url']\\r    # host = urlparse(url[5:]).hostname\\r    # port =urlparse(url[5:]).port\\r    # database = urlparse(url[5:]).path.rsplit('/', 1)[1]\\r    \\r    db_config = {\\r            \\""host\\"": os.environ['app_DB_HOST'],\\r            \\""port\\"": os.environ['Data_DB_port'],\\r            \\""user\\"": os.environ['app_mysql_user'],\\r            \\""password\\"":os.environ['app_DB_PASSWORD'],\\r            \\""database\\"":os.environ['database_name']\\r        }\\r\\r    # db_config = {\\r\\r    #         \\""host\\"": host,\\r\\r    #         \\""port\\"": port,\\r\\r    #         \\""user\\"": username,\\r\\r    #         \\""password\\"": password,\\r\\r    #         \\""database\\"": database\\r\\r    #     }\\r\\r    connection = mysql.connector.connect(**db_config)\\r\\r    try:\\r\\r        import pandas as pd\\r\\r        query =f'''SELECT number, shortdescription, state, priority,category, createdDate, configurationItem, type, source, assignmentgroup, assignedto,resolution_steps,closenotes,lastUpdated from {os.environ['Leap_Project_Name']}_tickets where shortdescription is not null  and shortdescription !=''\\r\\rorder by createddate desc'''\\r\\r        sql_query = pd.read_sql_query(query,connection )\\r\\r        df = pd.DataFrame(sql_query)\\r\\r        logger.info(\\""data extracted successfully!....\\"")\\r\\r        filtered_data = df.dropna(subset=['shortdescription'])\\r\\r        json_string = filtered_data.to_json(orient='records', date_format='iso')\\r\\r        json_string = json.loads(json_string)\\r\\r        return json_string\\r\\r\\r\\r    except sqlite3.connector.Error as err:\\r\\r        logger.info('There is some error whiling extractiong data as:', err)\\r\\r        raise err\\r\\r    finally:\\r\\r        connection.close()""]},""position_x"":""256"",""position_y"":""150"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""kfcVY"",""alias"":""Add Kernel"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""Addkernel"",""requirements"":"""",""params"":[],""script"":[""def Addkernel():\\r\\r"",""    kernel = Kernel()\\r\\r"",""    dataobj = {}\\r\\r"",""    dataobj['kernel'] = kernel\\r\\r"",""    return dataobj""]},""position_x"":""257"",""position_y"":""267"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""ZnWai"",""alias"":""Azure TextEmbedding Service"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""AzureTextEmbeddingService"",""requirements"":"""",""params"":[],""script"":[""def AzureTextEmbeddingService(dataobj, embedding_model_deployment_name_param, azure_openai_endpoint_param):\\r\\r"",""    azure_openai_api_key_param = os.environ.get(\\""app_OPENAI_API_KEY\\"", \\""\\"")\\r\\r"",""    kernel = dataobj['kernel']\\r\\r"",""    kernel.add_text_embedding_generation_service('ada',\\r\\r"",""                                                 AzureTextEmbedding(embedding_model_deployment_name_param,\\r\\r"",""                                                                    azure_openai_endpoint_param,\\r\\r"",""                                                                    azure_openai_api_key_param))\\r\\r"",""    dataobj['kernel'] = kernel\\r\\r"",""    return dataobj""]},""position_x"":""417"",""position_y"":""91"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""mNxky"",""alias"":""Store Embeddings In Qdrant"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""StoreEmbeddingsInQdrant"",""requirements"":"""",""params"":[],""script"":[""def StoreEmbeddingsInQdrant(dataobj, json_string, collection_name_param, url_param, counter_param, total_rows_param,\\r\\r"",""                            new_collection_param):\\r\\r"",""    async def StoreEmbeddings(dataobj, json_string, collection_name_param, url_param, counter_param, total_rows_param,\\r\\r"",""                              new_collection_param):\\r\\r"",""        kernel = dataobj[\\""kernel\\""]\\r\\r"",""\\r\\r"",""        qdrant_store = QdrantMemoryStore(vector_size=1536, url=url_param, port=30312)\\r\\r"",""        if new_collection_param == 'true':\\r\\r"",""            await qdrant_store.create_collection_async(collection_name_param)\\r\\r"",""\\r\\r"",""        kernel.register_memory_store(qdrant_store)\\r\\r"",""        c = 1\\r\\r"",""        logger.info(\\""This is counter\\"", c)\\r\\r"",""        for row in json_string:\\r\\r"",""            if c > total_rows_param:\\r\\r"",""                break\\r\\r"",""            elif c >= counter_param:\\r\\r"",""                logger.info(\\""This is counter\\"", c)\\r\\r"",""                try:\\r\\r"",""                    await kernel.memory.save_information_async(collection_name_param, id=row[\\""number\\""], text=str(row))\\r\\r"",""                    c += 1\\r\\r"",""                except Exception as e:\\r\\r"",""                    logger.info(\\""Error in embedding generation of \\"", f\\""{row['number']}+' - ' +{e}\\"")\\r\\r"",""                    c += 1\\r\\r"",""            else:\\r\\r"",""                c += 1\\r\\r"",""\\r\\r"",""    asyncio.run(StoreEmbeddings(dataobj, json_string, collection_name_param, url_param, counter_param, total_rows_param,\\r\\r"",""                                new_collection_param))""]},""position_x"":""417"",""position_y"":""206"",""connectors"":[],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]}],""pipeline_attributes"":[{""name"":""usedSecrets"",""value"":""app_OPENAI_API_KEY""},{""name"":""usedSecrets"",""value"":""app_LEAP_ACCESS_TOKEN""},{""name"":""usedSecrets"",""value"":""app_QDRANT_URL""},{""name"":""usedSecrets"",""value"":""app_mysql_user""},{""name"":""usedSecrets"",""value"":""app_DB_PASSWORD""},{""name"":""usedSecrets"",""value"":""app_DB_HOST""}],""environment"":[{""name"":""NO_PROXY"",""value"":""10.66.15.100""},{""name"":""Leap_URL"",""value"":""https://leap2:7000""},{""name"":""Leap_Project_Id"",""value"":""2""},{""name"":""Leap_Project_Name"",""value"":""leo1311""},{""name"":""InstallDeps"",""value"":""False""},{""name"":""Data_DB_port"",""value"":""3307""},{""name"":""database_name"",""value"":""leap_7000_ref_data""}],""default_runtime"":""{\\""dsAlias\\"":\\""LocalCluster\\"",\\""dsName\\"":\\""LEALCLCL12132\\"",\\""type\\"":\\""REMOTE\\""}""}","admin","Ticket Search ","2024-09-30 10:46:56","LEOTCKTS92097","leo1311","DragNDropLite","55",NULL,"chain",NULL,"\0","0"
"admin","2024-10-24 10:08:28.617000","\0","Generates Code Summarization for GIT Datasets",NULL,"{""elements"":[{""id"":""uvuwP"",""alias"":""DatasetExtractor"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":[],""script"":[""import os\\r\\rimport json\\r\\rimport requests\\r\\rimport shutil\\r\\rimport boto3\\r\\rimport stat\\r\\rdatasetid_param = os.environ['datasetId']\\rorg_param = os.environ['org']\\rreferer = os.environ['datasetId']\\raip_access_token = os.environ['app_access_token']\\rreferer = os.environ['referer']\\rdef getdatasetconfig(dataset_id:str, organization:str):\\r\\r        '''\\r\\r        call ai-plat api to get dataset config\\r\\r        return {dataset_config}\\r\\r        '''  \\r\\r        try:                        \\r            url = f\\""{referer}/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r            headers = {\\r\\r            'access-token': aip_access_token,\\r\\r            'Project':'2'\\r\\r            }\\r\\r            response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r            dataset_config = json.loads(response.text)\\r\\r            return dataset_config\\r\\r        except Exception as e:\\r\\r            print('Exception in getdatasetconfig as: ', e)\\r\\r            raise e\\r\\rdef get_keyconfig(organization:str):\\r\\r    try: \\r\\r        url = f\\""{referer}/api/aip/service/v1/datasources/all?org={organization}\\""\\r\\r        headers = {\\r\\r        'Project': '2',\\r\\r        'access-token': aip_access_token,\\r\\r        }\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r        key_config = json.loads(response.text)\\r\\r        return key_config\\r\\r    except Exception as e:\\r\\r        print('Exception in get_keyconfig as: ', e)\\r\\r        raise e\\r\\r \\r\\r\\r\\rdef s3_download_data(end_point_url,access_key,secret_key,bucket, obj_key, local_path):\\r\\r    \\""\\""\\""\\r\\r    Download a folder from S3 to a local path.\\r\\r    \\""\\""\\""\\r\\r    session = boto3.session.Session()\\r\\r    s3c = session.client(\\r\\r        aws_access_key_id=access_key,\\r\\r        aws_secret_access_key=secret_key,\\r\\r        endpoint_url=end_point_url,\\r\\r        service_name=\\""s3\\"",\\r\\r        use_ssl=False,\\r\\r    )\\r\\r    # List all objects in the folder\\r\\r    response = s3c.list_objects_v2(Bucket=bucket, Prefix=obj_key)\\r\\r    objects = response.get('Contents', [])\\r\\r    # Download each object in the folder\\r\\r    for obj in objects:\\r\\r        key = obj['Key']\\r\\r        file_path = os.path.join(local_path, key)\\r\\r        # Create the directory if it doesn't exist\\r\\r        os.makedirs(os.path.dirname(file_path), exist_ok=True)\\r\\r        s3c.download_file(bucket, key, file_path)      \\r\\rdef DatasetExtractor():    #python-script Data\\r\\r    #get dataset configurations \\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)   \\r\\r    dataset_type = datasetcofig['datasource']['type']  \\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url'] \\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']               \\r\\r        path = attribute['path']   \\r\\r        obj_key = attribute['object']  \\r\\r        key = f'{path}/{obj_key}'\\r\\r        local_path = r\\""C:\\\\Temp\\\\github\\\\data\\""\\r\\r        def on_rm_error(func, path, exc_info):\\r\\r            if not os.access(path, os.W_OK):\\r\\r                os.chmod(path, stat.S_IWUSR)\\r\\r                func(path)\\r\\r            else:\\r\\r                raise\\r\\r        if os.path.exists(local_path):\\r\\r            shutil.rmtree(local_path, onerror=on_rm_error)\\r\\r        if not os.path.exists(local_path):\\r\\r            os.makedirs(local_path)\\r\\r        os.listdir(local_path)\\r\\r        s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = key, local_path = local_path)\\r\\r    elif dataset_type == 'GIT':  \\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        bucketname= connection_dict.get('bucketname')\\r        \\r        os.environ['Bucket_Name'] = bucketname\\r\\r        bucketPath = connection_dict.get('bucketPath')\\r\\r        attribute=json.loads(datasetcofig['attributes'])\\r\\r        url=attribute['url']\\r\\r        repo_name=url.split('/')[-1].replace('.git','')\\r        \\r        if bucketPath != \\""\\"":\\r            key= bucketPath + '/' + repo_name\\r        else:\\r             key= repo_name\\r\\r        s3ConnectionId= connection_dict['datasource']\\r\\r        response = get_keyconfig(organization=org_param)\\r\\r        for i in response:\\r\\r            if i.get('name') == s3ConnectionId:\\r\\r                connection_dict = json.loads(i.get('connectionDetails'))\\r\\r                secret_key= connection_dict['secretKey']\\r                os.environ['AWS_SECRET_ACCESS_KEY'] = secret_key\\r                access_key = connection_dict['accessKey']\\r                os.environ['AWS_ACCESS_KEY_ID'] = access_key\\r                region = connection_dict['Region']\\r                os.environ['AWS_REGION'] = region\\r                url = connection_dict['url']\\r                os.environ['AWS_ENDPOINT_URL'] = url\\r\\r        local_path = r\\""C:\\\\Temp\\\\github\\\\data\\""\\r\\r        def on_rm_error(func, path, exc_info):\\r\\r            if not os.access(path, os.W_OK):\\r\\r                os.chmod(path, stat.S_IWUSR)\\r\\r                func(path)\\r\\r            else:\\r\\r                raise\\r\\r        if os.path.exists(local_path):\\r\\r            shutil.rmtree(local_path, onerror=on_rm_error)\\r\\r        if not os.path.exists(local_path):\\r\\r            os.makedirs(local_path)\\r\\r        s3_download_data(end_point_url = url, access_key = access_key, secret_key=secret_key, bucket = bucketname, obj_key = key, local_path = local_path)\\r        \\r    return local_path""]},""position_x"":""155"",""position_y"":""32"",""connectors"":[{""type"":""source"",""endpoint"":""out1"",""position"":""RightMiddle"",""elementId"":""MUYsk"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""MUYsk"",""alias"":""process_folder"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""process_folder"",""requirements"":"""",""params"":[],""script"":[""import base64\\r\\r\\r\\rimport requests\\r\\r\\r\\rimport json\\r\\r\\r\\rimport os\\r\\r\\r\\rimport mimetypes\\r\\r\\r\\rfrom pydub import AudioSegment\\r\\r\\r\\rimport urllib3\\r\\r\\r\\rimport pathlib\\r\\r\\r\\rimport shutil\\r\\r\\r\\rimport openai\\r\\r\\r\\rimport boto3\\r\\r\\r\\rfrom translatepy import Translator\\r\\r\\r\\rfrom PyPDF2 import PdfReader\\r\\r\\r\\rfrom docx import Document\\r\\r\\r\\rfrom pptx import Presentation\\r\\r\\r\\rfrom langchain_core.prompts import ChatPromptTemplate\\r\\r\\r\\rfrom langchain_openai import AzureChatOpenAI\\r\\r\\r\\rfrom langchain_core.prompts import ChatPromptTemplate\\r\\r\\r\\rurllib3.disable_warnings()\\r\\r\\r\\rmodel = \\""whisper-m\\""\\r\\r\\r\\ros.environ[\\r\\r\\r\\r    'itgateway_token_url'] = 'https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\r\\r\\ros.environ['app_itgateway_client_id'] = '9090f1c5-d381-4ef6-b845-4bac98d02fbe'\\r\\r\\r\\ros.environ['app_itgateway_client_secret'] = 'CNl8Q~IA-EUpiyA5Kkh97-4uH3ajo2PqQOkpHbp~'\\r\\r\\r\\ros.environ['itgateway_grant_type'] = 'client_credentials'\\r\\r\\r\\ros.environ['app_itgateway_scope'] = 'b3490b10-6bd3-4f66-908d-fa1950e46598/.default'\\r\\r\\r\\ros.environ[model] = 'https://itgateway.infosys.com/ai-platform/wh-aic/v1/speech/transcribe'\\r\\r\\r\\rdef summarize_text(text):\\r\\r\\r\\r    from langchain.chains.summarize import load_summarize_chain\\r\\r\\r\\r    from langchain_text_splitters  import RecursiveCharacterTextSplitter\\r\\r\\r\\r    from langchain.schema.document import Document\\r\\r\\r\\r    from langchain_openai import AzureOpenAI\\r\\r\\r\\r    # from langchain_text_splitters import SpacyTextSplitter\\r\\r\\r\\r    text_splitter = RecursiveCharacterTextSplitter()\\r\\r\\r\\r    # text_splitter = SpacyTextSplitter(chunk_size=5000)\\r\\r\\r\\r    texts = text_splitter.split_text(text)\\r\\r\\r\\r    docs = [Document(page_content=t) for t in texts]\\r\\r\\r\\r    # secrets\\r\\r\\r\\r    os.environ[\\""app_openai_api_key\\""] = '85b968a4b5c84d849c99661788c2c1ed'\\r\\r    os.environ[\\""app_openai_api_base\\""] = 'https://azureft.openai.azure.com/'\\r\\r\\r\\r    llm = AzureChatOpenAI(\\r\\r        openai_api_key= os.environ.get(\\""app_openai_api_key\\""), \\r\\r        azure_endpoint = os.environ.get(\\""app_openai_api_base\\""), \\r\\r        deployment_name='gpt-4', \\r\\r        temperature=0, \\r\\r        openai_api_version='2023-05-15')\\r\\r\\r\\r    deployment_name = '''gpt-4'''\\r\\r\\r\\r    try:\\r\\r\\r\\r        user_prompt = \\""Give the five line summary on following data: {data}\\""\\r\\r        prompt = ChatPromptTemplate.from_template(user_prompt)\\r\\r        chain = prompt | llm \\r\\r        response = chain.invoke({\\""data\\"": docs})\\r\\r        result = response.content\\r\\r        return result,deployment_name\\r\\r    except Exception as e:\\r\\r\\r\\r        print(\\""Error in summarizing text: \\"", e)\\r\\r\\r\\r        return None,deployment_name\\r\\r\\r\\r\\r\\rdef process_folder(folder_path):\\r\\r\\r    created_folders = []  # List to store the paths of the created .aip folders\\r\\r    queue = []\\r\\r\\r    queue.append(folder_path)\\r\\r\\r    translator = Translator()\\r\\r\\r    while len(queue) > 0:\\r\\r        current_folder = queue[0]\\r\\r\\r        file_exist = False\\r\\r        for file_name in os.listdir(current_folder):\\r\\r\\r            if file_name in ['Translation', 'Transcribe']:  # Corrected condition to check individual strings\\r\\r\\r                continue\\r\\r            file_path = os.path.join(current_folder, file_name)\\r\\r            print('Checking file path:', file_path)\\r\\r            if os.path.isfile(file_path):\\r\\r                file_exist = True\\r\\r                print(f\\""Found file: {file_path}\\"")\\r\\r            elif not os.path.isfile(file_path) and not file_name.startswith('.'):\\r\\r                queue.append(os.path.join(current_folder, file_name))\\r\\r                print(f\\""Added folder to queue: {os.path.join(current_folder, file_name)}\\"")\\r\\r        if file_exist:\\r\\r            print(\\""File exists in current folder - Processing for summary:\\"", file_path)\\r\\r            summary_folder = os.path.join(current_folder,'.aip', 'Summary')\\r\\r            print(\\""Creating summary folder at:\\"", summary_folder)\\r\\r            os.makedirs(summary_folder, exist_ok=True)\\r\\r            created_folders.append(os.path.dirname(summary_folder))  # Add the created .aip folder path to the list\\r\\r            print(f\\""Added created folder to list: {os.path.dirname(summary_folder)}\\"")\\r\\r            for file_name in os.listdir(current_folder):\\r\\r                file_path = os.path.join(current_folder, file_name)\\r\\r                text_to_summarize = ''\\r\\r                if os.path.isfile(file_path):\\r\\r                    extension = os.path.splitext(file_name)[1]\\r\\r                    mimetype = mimetypes.guess_type(file_path)[0]\\r\\r                    print(f\\""Processing file: {file_name}, Extension: {extension}, Mimetype: {mimetype}\\"")\\r\\r                    if mimetype and ('audio' in mimetype or 'video' in mimetype):\\r\\r                        transcript_folder = os.path.join(current_folder,'.aip', 'Transcribe')\\r\\r                        print(\\""Transcript folder path:\\"", transcript_folder)\\r\\r                        transcript_path = os.path.join(transcript_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                        print(\\""Transcript file path:\\"", transcript_path)\\r\\r                        if os.path.exists(transcript_path):\\r\\r                            with open(transcript_path, 'r', encoding='utf-8') as f:\\r\\r                                transcript = f.read()\\r\\r                            text_to_summarize = transcript\\r\\r                            print(\\""Transcript read successfully.\\"")\\r\\r                        else:\\r\\r                            print(\\""Transcript not found for file:\\"", file_name)\\r\\r                    elif extension in ['.txt', '.pdf', '.docx', '.pptx','.py','.java','.c','.cpp','.html','.css','.js','.ts','.jsx','.tsx','.json','.xml','.yaml','.yml','.sql','.php','.rb','.sh','.bat','.ps1','.psm1','.psd1','.ps1xml','.clixml','.pssc','.cdxml','.xaml','.csv','.tsv','.ini','.inf','.reg','.md']:\\r\\r                        print(f\\""Reading content from {extension} file.\\"")\\r\\r                        if extension == \\"".txt\\"":\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_to_summarize = f.read()\\r\\r                            print(\\""Text read from .txt file.\\"")\\r\\r                        elif extension == \\"".pdf\\"":\\r\\r                            with open(file_path, 'rb') as f:\\r\\r                                pdf = PdfReader(f)\\r\\r                                text_to_summarize = \\"" \\"".join(page.extract_text() for page in pdf.pages)\\r\\r                            print(\\""Text read from .pdf file.\\"")\\r\\r                        elif extension == \\"".docx\\"":\\r\\r                            doc = Document(file_path)\\r\\r                            text_to_summarize = \\"" \\"".join(paragraph.text for paragraph in doc.paragraphs)\\r\\r                            print(\\""Text read from .docx file.\\"")\\r\\r                        elif extension == \\"".pptx\\"":\\r\\r                            pres = Presentation(file_path)\\r\\r                            text_to_summarize = \\"" \\"".join(\\r\\r                                \\"" \\"".join(shape.text for shape in slide.shapes if shape.has_text_frame) for slide in\\r\\r                                pres.slides)\\r\\r                            print(\\""Text read from .pptx file.\\"")\\r\\r                        elif extension == \\"".py\\"":\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_to_summarize = f.read()\\r\\r                            print(\\""Text read from .py file.\\"")\\r\\r                        elif extension == \\"".java\\"" or \\"".c\\"" or \\"".cpp\\"" or \\"".html\\"" or \\"".css\\"" or \\"".js\\"" or \\"".ts\\"" or \\"".jsx\\"" or \\"".tsx\\"" or \\"".json\\"" or \\"".xml\\"" or \\"".yaml\\"" or \\"".yml\\"" or \\"".sql\\"" or \\"".php\\"" or \\"".rb\\"" or \\"".sh\\"" or \\"".bat\\"" or \\"".ps1\\"" or \\"".psm1\\"" or \\"".psd1\\"" or \\"".ps1xml\\"" or \\"".clixml\\"" or \\"".pssc\\"" or \\"".cdxml\\"" or \\"".xaml\\"" or \\"".csv\\"" or \\"".tsv\\"" or \\"".ini\\"" or \\"".inf\\"" or \\"".reg\\"":\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_to_summarize = f.read()\\r\\r                            print(\\""Text read from .java file.\\"")\\r\\r                        elif extension == \\"".md\\"":\\r\\r                            print(\\""Reading content from .md file.\\"")\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_to_summarize = f.read()\\r\\r                                \\r\\r                            print(\\""Text read from .md file.\\"",text_to_summarize)\\r\\r   \\r\\r                        else:\\r\\r                            print(f\\""Skipping file {file_name} as it is not supported\\"")\\r\\r                            continue\\r\\r                    if text_to_summarize != '':\\r\\r                        try:\\r\\r                            print(\\""Detecting language of the text.\\"")\\r\\r                            language = translator.language(text_to_summarize[0:100])\\r\\r                            print(f\\""Detected language: {language.result}\\"")\\r\\r                            if str(language.result) != \\""eng\\"":\\r\\r                                print(\\""Translating text to English.\\"")\\r\\r                                text_to_summarize = translator.translate(text_to_summarize, \\""English\\"").result\\r\\r                        except Exception as e:\\r\\r                            print(f\\""Translation failed with error: {e}\\"")\\r\\r                        print(\\""Summarizing text.\\"")\\r\\r                        summary, model_name = summarize_text(text_to_summarize)\\r\\r                        if summary is not None:\\r\\r                            summary = summary[:-10]\\r\\r                        else:\\r\\r                            summary = \\""\\""\\r\\r                        output_filename = os.path.splitext(file_name)[0] + \\"".txt\\""\\r\\r                        output_file_path = os.path.join(summary_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                        with open(output_file_path, 'w', encoding='utf-8') as f:\\r\\r                            f.write(summary)\\r\\r                            f.write(\\"". Model name: \\"" + model_name)\\r\\r\\r                        file_path = output_file_path\\r\\r        else:\\r\\r            print(\\""No files found in current folder, moving to next.\\"")\\r        folder_path1 = queue[0]\\r        path1 = os.path.join(folder_path1, '.aip', 'Summary')\\r        if os.path.exists(path1):\\r            if os.listdir(path1):\\r                text_data = \\""\\""\\r                for file_name in os.listdir(path1):\\r                    if file_name.endswith(\\"".txt\\""):\\r                        file_path = os.path.join(path1, file_name)\\r                        with open(file_path, 'r', encoding='utf-8') as f:\\r                            text_data += \\"" \\"" + f.read()\\r                summary, model_name = summarize_text(text_data)\\r                output_filename = os.path.basename(folder_path1)+ \\"".txt\\""\\r                output_folder = os.path.dirname(folder_path1)\\r                summary_folder = os.path.join(output_folder, '.aip', 'Summary')\\r                if not os.path.exists(summary_folder):\\r                    os.makedirs(summary_folder)\\r                \\r                output_file_path = os.path.join(summary_folder, output_filename+\\"".txt\\"")\\r                with open(output_file_path, 'w', encoding='utf-8') as f:\\r                    f.write(summary)\\r                    f.write(\\"". Model name: \\"" + model_name)\\r\\r        queue.pop(0)\\r\\r\\r    print(\\""Processing complete.\\"")\\r\\r    return folder_path\\r\\r\\r\\r""]},""position_x"":""382"",""position_y"":""32"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""uvuwP"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out1"",""position"":""RightMiddle"",""elementId"":""yUbfX"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":[],""script"":[""import os\\r\\rimport json\\r\\rimport requests\\r\\rimport shutil\\r\\rimport boto3\\r\\rimport stat\\r\\rdatasetid_param = os.environ['datasetId']\\rorg_param = os.environ['org']\\rreferer = os.environ['datasetId']\\raip_access_token = os.environ['app_access_token']\\rreferer = os.environ['referer']\\rdef getdatasetconfig(dataset_id:str, organization:str):\\r\\r        '''\\r\\r        call ai-plat api to get dataset config\\r\\r        return {dataset_config}\\r\\r        '''  \\r\\r        try:                        \\r            url = f\\""{referer}/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r            headers = {\\r\\r            'access-token': aip_access_token,\\r\\r            'Project':'2'\\r\\r            }\\r\\r            response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r            dataset_config = json.loads(response.text)\\r\\r            return dataset_config\\r\\r        except Exception as e:\\r\\r            print('Exception in getdatasetconfig as: ', e)\\r\\r            raise e\\r\\rdef get_keyconfig(organization:str):\\r\\r    try: \\r\\r        url = f\\""{referer}/api/aip/service/v1/datasources/all?org={organization}\\""\\r\\r        headers = {\\r\\r        'Project': '2',\\r\\r        'access-token': aip_access_token,\\r\\r        }\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r        key_config = json.loads(response.text)\\r\\r        return key_config\\r\\r    except Exception as e:\\r\\r        print('Exception in get_keyconfig as: ', e)\\r\\r        raise e\\r\\r \\r\\r\\r\\rdef s3_download_data(end_point_url,access_key,secret_key,bucket, obj_key, local_path):\\r\\r    \\""\\""\\""\\r\\r    Download a folder from S3 to a local path.\\r\\r    \\""\\""\\""\\r\\r    session = boto3.session.Session()\\r\\r    s3c = session.client(\\r\\r        aws_access_key_id=access_key,\\r\\r        aws_secret_access_key=secret_key,\\r\\r        endpoint_url=end_point_url,\\r\\r        service_name=\\""s3\\"",\\r\\r        use_ssl=False,\\r\\r    )\\r\\r    # List all objects in the folder\\r\\r    response = s3c.list_objects_v2(Bucket=bucket, Prefix=obj_key)\\r\\r    objects = response.get('Contents', [])\\r\\r    # Download each object in the folder\\r\\r    for obj in objects:\\r\\r        key = obj['Key']\\r\\r        file_path = os.path.join(local_path, key)\\r\\r        # Create the directory if it doesn't exist\\r\\r        os.makedirs(os.path.dirname(file_path), exist_ok=True)\\r\\r        s3c.download_file(bucket, key, file_path)      \\r\\rdef DatasetExtractor():    #python-script Data\\r\\r    #get dataset configurations \\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)   \\r\\r    dataset_type = datasetcofig['datasource']['type']  \\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url'] \\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']               \\r\\r        path = attribute['path']   \\r\\r        obj_key = attribute['object']  \\r\\r        key = f'{path}/{obj_key}'\\r\\r        local_path = r\\""C:\\\\Temp\\\\github\\\\data\\""\\r\\r        def on_rm_error(func, path, exc_info):\\r\\r            if not os.access(path, os.W_OK):\\r\\r                os.chmod(path, stat.S_IWUSR)\\r\\r                func(path)\\r\\r            else:\\r\\r                raise\\r\\r        if os.path.exists(local_path):\\r\\r            shutil.rmtree(local_path, onerror=on_rm_error)\\r\\r        if not os.path.exists(local_path):\\r\\r            os.makedirs(local_path)\\r\\r        os.listdir(local_path)\\r\\r        s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = key, local_path = local_path)\\r\\r    elif dataset_type == 'GIT':  \\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        bucketname= connection_dict.get('bucketname')\\r        \\r        os.environ['Bucket_Name'] = bucketname\\r\\r        bucketPath = connection_dict.get('bucketPath')\\r\\r        attribute=json.loads(datasetcofig['attributes'])\\r\\r        url=attribute['url']\\r\\r        repo_name=url.split('/')[-1].replace('.git','')\\r        \\r        if bucketPath != \\""\\"":\\r            key= bucketPath + '/' + repo_name\\r        else:\\r             key= repo_name\\r\\r        s3ConnectionId= connection_dict['datasource']\\r\\r        response = get_keyconfig(organization=org_param)\\r\\r        for i in response:\\r\\r            if i.get('name') == s3ConnectionId:\\r\\r                connection_dict = json.loads(i.get('connectionDetails'))\\r\\r                secret_key= connection_dict['secretKey']\\r                os.environ['AWS_SECRET_ACCESS_KEY'] = secret_key\\r                access_key = connection_dict['accessKey']\\r                os.environ['AWS_ACCESS_KEY_ID'] = access_key\\r                region = connection_dict['Region']\\r                os.environ['AWS_REGION'] = region\\r                url = connection_dict['url']\\r                os.environ['AWS_ENDPOINT_URL'] = url\\r\\r        local_path = r\\""C:\\\\Temp\\\\github\\\\data\\""\\r\\r        def on_rm_error(func, path, exc_info):\\r\\r            if not os.access(path, os.W_OK):\\r\\r                os.chmod(path, stat.S_IWUSR)\\r\\r                func(path)\\r\\r            else:\\r\\r                raise\\r\\r        if os.path.exists(local_path):\\r\\r            shutil.rmtree(local_path, onerror=on_rm_error)\\r\\r        if not os.path.exists(local_path):\\r\\r            os.makedirs(local_path)\\r\\r        s3_download_data(end_point_url = url, access_key = access_key, secret_key=secret_key, bucket = bucketname, obj_key = key, local_path = local_path)\\r        \\r    return local_path""]}]},{""id"":""yUbfX"",""alias"":""Python Script"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""uploadData"",""requirements"":"""",""params"":[],""script"":[""import boto3\\r\\rimport os\\r\\rimport logging as LOGGER\\r\\rdef uploadData(path):\\r\\r    try:\\r        secret_key = os.environ['AWS_SECRET_ACCESS_KEY']\\r        access_key = os.environ['AWS_ACCESS_KEY_ID']\\r        region = os.environ['AWS_REGION']\\r        bucket = os.environ['Bucket_Name']\\r        url = os.environ['AWS_ENDPOINT_URL']\\r\\r\\r\\r\\r        session = boto3.session.Session()\\r\\r        s3c = session.client(\\r\\r            aws_access_key_id=access_key,\\r\\r            aws_secret_access_key=secret_key,\\r\\r            endpoint_url=url,\\r\\r            service_name=\\""s3\\"",\\r\\r            use_ssl=False,\\r\\r        )\\r\\r        for root, dirs, files in os.walk(path):\\r\\r            for file in files:\\r\\r                local_path = os.path.join(root, file)\\r\\r                relative_path = os.path.relpath(local_path, path)\\r\\r\\r\\r                \\r\\r                # Check if the relative path contains a directory separator\\r\\r                if '/' in relative_path:\\r\\r                    s3_folder = os.path.dirname(relative_path)\\r\\r                    response = s3c.list_objects_v2(Bucket=bucket, Prefix=s3_folder + '/')\\r\\r                    s3c.put_object(Bucket=bucket, Key=s3_folder + '/')\\r\\r                else:\\r\\r                    # If the file is in the root directory, don't create an extra folder\\r\\r                    s3_folder = None\\r\\r                s3_path = os.path.join(\\""\\"", relative_path).replace(\\""\\\\\\\\\\"", \\""/\\"")\\r\\r\\r\\r                s3c.upload_file(local_path, bucket, s3_path)\\r\\r\\r    except Exception as e:\\r\\r        LOGGER.error(e)\\r\\r        return False\\r\\r    return True""]},""position_x"":""621"",""position_y"":""26"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""MUYsk"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""process_folder"",""requirements"":"""",""params"":[],""script"":[""import base64\\r\\r\\r\\rimport requests\\r\\r\\r\\rimport json\\r\\r\\r\\rimport os\\r\\r\\r\\rimport mimetypes\\r\\r\\r\\rfrom pydub import AudioSegment\\r\\r\\r\\rimport urllib3\\r\\r\\r\\rimport pathlib\\r\\r\\r\\rimport shutil\\r\\r\\r\\rimport openai\\r\\r\\r\\rimport boto3\\r\\r\\r\\rfrom translatepy import Translator\\r\\r\\r\\rfrom PyPDF2 import PdfReader\\r\\r\\r\\rfrom docx import Document\\r\\r\\r\\rfrom pptx import Presentation\\r\\r\\r\\rfrom langchain_core.prompts import ChatPromptTemplate\\r\\r\\r\\rfrom langchain_openai import AzureChatOpenAI\\r\\r\\r\\rfrom langchain_core.prompts import ChatPromptTemplate\\r\\r\\r\\rurllib3.disable_warnings()\\r\\r\\r\\rmodel = \\""whisper-m\\""\\r\\r\\r\\ros.environ[\\r\\r\\r\\r    'itgateway_token_url'] = 'https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\r\\r\\ros.environ['app_itgateway_client_id'] = '9090f1c5-d381-4ef6-b845-4bac98d02fbe'\\r\\r\\r\\ros.environ['app_itgateway_client_secret'] = 'CNl8Q~IA-EUpiyA5Kkh97-4uH3ajo2PqQOkpHbp~'\\r\\r\\r\\ros.environ['itgateway_grant_type'] = 'client_credentials'\\r\\r\\r\\ros.environ['app_itgateway_scope'] = 'b3490b10-6bd3-4f66-908d-fa1950e46598/.default'\\r\\r\\r\\ros.environ[model] = 'https://itgateway.infosys.com/ai-platform/wh-aic/v1/speech/transcribe'\\r\\r\\r\\rdef summarize_text(text):\\r\\r\\r\\r    from langchain.chains.summarize import load_summarize_chain\\r\\r\\r\\r    from langchain_text_splitters  import RecursiveCharacterTextSplitter\\r\\r\\r\\r    from langchain.schema.document import Document\\r\\r\\r\\r    from langchain_openai import AzureOpenAI\\r\\r\\r\\r    # from langchain_text_splitters import SpacyTextSplitter\\r\\r\\r\\r    text_splitter = RecursiveCharacterTextSplitter()\\r\\r\\r\\r    # text_splitter = SpacyTextSplitter(chunk_size=5000)\\r\\r\\r\\r    texts = text_splitter.split_text(text)\\r\\r\\r\\r    docs = [Document(page_content=t) for t in texts]\\r\\r\\r\\r    # secrets\\r\\r\\r\\r    os.environ[\\""app_openai_api_key\\""] = '85b968a4b5c84d849c99661788c2c1ed'\\r\\r    os.environ[\\""app_openai_api_base\\""] = 'https://azureft.openai.azure.com/'\\r\\r\\r\\r    llm = AzureChatOpenAI(\\r\\r        openai_api_key= os.environ.get(\\""app_openai_api_key\\""), \\r\\r        azure_endpoint = os.environ.get(\\""app_openai_api_base\\""), \\r\\r        deployment_name='gpt-4', \\r\\r        temperature=0, \\r\\r        openai_api_version='2023-05-15')\\r\\r\\r\\r    deployment_name = '''gpt-4'''\\r\\r\\r\\r    try:\\r\\r\\r\\r        user_prompt = \\""Give the five line summary on following data: {data}\\""\\r\\r        prompt = ChatPromptTemplate.from_template(user_prompt)\\r\\r        chain = prompt | llm \\r\\r        response = chain.invoke({\\""data\\"": docs})\\r\\r        result = response.content\\r\\r        return result,deployment_name\\r\\r    except Exception as e:\\r\\r\\r\\r        print(\\""Error in summarizing text: \\"", e)\\r\\r\\r\\r        return None,deployment_name\\r\\r\\r\\r\\r\\rdef process_folder(folder_path):\\r\\r\\r    created_folders = []  # List to store the paths of the created .aip folders\\r\\r    queue = []\\r\\r\\r    queue.append(folder_path)\\r\\r\\r    translator = Translator()\\r\\r\\r    while len(queue) > 0:\\r\\r        current_folder = queue[0]\\r\\r\\r        file_exist = False\\r\\r        for file_name in os.listdir(current_folder):\\r\\r\\r            if file_name in ['Translation', 'Transcribe']:  # Corrected condition to check individual strings\\r\\r\\r                continue\\r\\r            file_path = os.path.join(current_folder, file_name)\\r\\r            print('Checking file path:', file_path)\\r\\r            if os.path.isfile(file_path):\\r\\r                file_exist = True\\r\\r                print(f\\""Found file: {file_path}\\"")\\r\\r            elif not os.path.isfile(file_path) and not file_name.startswith('.'):\\r\\r                queue.append(os.path.join(current_folder, file_name))\\r\\r                print(f\\""Added folder to queue: {os.path.join(current_folder, file_name)}\\"")\\r\\r        if file_exist:\\r\\r            print(\\""File exists in current folder - Processing for summary:\\"", file_path)\\r\\r            summary_folder = os.path.join(current_folder,'.aip', 'Summary')\\r\\r            print(\\""Creating summary folder at:\\"", summary_folder)\\r\\r            os.makedirs(summary_folder, exist_ok=True)\\r\\r            created_folders.append(os.path.dirname(summary_folder))  # Add the created .aip folder path to the list\\r\\r            print(f\\""Added created folder to list: {os.path.dirname(summary_folder)}\\"")\\r\\r            for file_name in os.listdir(current_folder):\\r\\r                file_path = os.path.join(current_folder, file_name)\\r\\r                text_to_summarize = ''\\r\\r                if os.path.isfile(file_path):\\r\\r                    extension = os.path.splitext(file_name)[1]\\r\\r                    mimetype = mimetypes.guess_type(file_path)[0]\\r\\r                    print(f\\""Processing file: {file_name}, Extension: {extension}, Mimetype: {mimetype}\\"")\\r\\r                    if mimetype and ('audio' in mimetype or 'video' in mimetype):\\r\\r                        transcript_folder = os.path.join(current_folder,'.aip', 'Transcribe')\\r\\r                        print(\\""Transcript folder path:\\"", transcript_folder)\\r\\r                        transcript_path = os.path.join(transcript_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                        print(\\""Transcript file path:\\"", transcript_path)\\r\\r                        if os.path.exists(transcript_path):\\r\\r                            with open(transcript_path, 'r', encoding='utf-8') as f:\\r\\r                                transcript = f.read()\\r\\r                            text_to_summarize = transcript\\r\\r                            print(\\""Transcript read successfully.\\"")\\r\\r                        else:\\r\\r                            print(\\""Transcript not found for file:\\"", file_name)\\r\\r                    elif extension in ['.txt', '.pdf', '.docx', '.pptx','.py','.java','.c','.cpp','.html','.css','.js','.ts','.jsx','.tsx','.json','.xml','.yaml','.yml','.sql','.php','.rb','.sh','.bat','.ps1','.psm1','.psd1','.ps1xml','.clixml','.pssc','.cdxml','.xaml','.csv','.tsv','.ini','.inf','.reg','.md']:\\r\\r                        print(f\\""Reading content from {extension} file.\\"")\\r\\r                        if extension == \\"".txt\\"":\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_to_summarize = f.read()\\r\\r                            print(\\""Text read from .txt file.\\"")\\r\\r                        elif extension == \\"".pdf\\"":\\r\\r                            with open(file_path, 'rb') as f:\\r\\r                                pdf = PdfReader(f)\\r\\r                                text_to_summarize = \\"" \\"".join(page.extract_text() for page in pdf.pages)\\r\\r                            print(\\""Text read from .pdf file.\\"")\\r\\r                        elif extension == \\"".docx\\"":\\r\\r                            doc = Document(file_path)\\r\\r                            text_to_summarize = \\"" \\"".join(paragraph.text for paragraph in doc.paragraphs)\\r\\r                            print(\\""Text read from .docx file.\\"")\\r\\r                        elif extension == \\"".pptx\\"":\\r\\r                            pres = Presentation(file_path)\\r\\r                            text_to_summarize = \\"" \\"".join(\\r\\r                                \\"" \\"".join(shape.text for shape in slide.shapes if shape.has_text_frame) for slide in\\r\\r                                pres.slides)\\r\\r                            print(\\""Text read from .pptx file.\\"")\\r\\r                        elif extension == \\"".py\\"":\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_to_summarize = f.read()\\r\\r                            print(\\""Text read from .py file.\\"")\\r\\r                        elif extension == \\"".java\\"" or \\"".c\\"" or \\"".cpp\\"" or \\"".html\\"" or \\"".css\\"" or \\"".js\\"" or \\"".ts\\"" or \\"".jsx\\"" or \\"".tsx\\"" or \\"".json\\"" or \\"".xml\\"" or \\"".yaml\\"" or \\"".yml\\"" or \\"".sql\\"" or \\"".php\\"" or \\"".rb\\"" or \\"".sh\\"" or \\"".bat\\"" or \\"".ps1\\"" or \\"".psm1\\"" or \\"".psd1\\"" or \\"".ps1xml\\"" or \\"".clixml\\"" or \\"".pssc\\"" or \\"".cdxml\\"" or \\"".xaml\\"" or \\"".csv\\"" or \\"".tsv\\"" or \\"".ini\\"" or \\"".inf\\"" or \\"".reg\\"":\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_to_summarize = f.read()\\r\\r                            print(\\""Text read from .java file.\\"")\\r\\r                        elif extension == \\"".md\\"":\\r\\r                            print(\\""Reading content from .md file.\\"")\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_to_summarize = f.read()\\r\\r                                \\r\\r                            print(\\""Text read from .md file.\\"",text_to_summarize)\\r\\r   \\r\\r                        else:\\r\\r                            print(f\\""Skipping file {file_name} as it is not supported\\"")\\r\\r                            continue\\r\\r                    if text_to_summarize != '':\\r\\r                        try:\\r\\r                            print(\\""Detecting language of the text.\\"")\\r\\r                            language = translator.language(text_to_summarize[0:100])\\r\\r                            print(f\\""Detected language: {language.result}\\"")\\r\\r                            if str(language.result) != \\""eng\\"":\\r\\r                                print(\\""Translating text to English.\\"")\\r\\r                                text_to_summarize = translator.translate(text_to_summarize, \\""English\\"").result\\r\\r                        except Exception as e:\\r\\r                            print(f\\""Translation failed with error: {e}\\"")\\r\\r                        print(\\""Summarizing text.\\"")\\r\\r                        summary, model_name = summarize_text(text_to_summarize)\\r\\r                        if summary is not None:\\r\\r                            summary = summary[:-10]\\r\\r                        else:\\r\\r                            summary = \\""\\""\\r\\r                        output_filename = os.path.splitext(file_name)[0] + \\"".txt\\""\\r\\r                        output_file_path = os.path.join(summary_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                        with open(output_file_path, 'w', encoding='utf-8') as f:\\r\\r                            f.write(summary)\\r\\r                            f.write(\\"". Model name: \\"" + model_name)\\r\\r\\r                        file_path = output_file_path\\r\\r        else:\\r\\r            print(\\""No files found in current folder, moving to next.\\"")\\r        folder_path1 = queue[0]\\r        path1 = os.path.join(folder_path1, '.aip', 'Summary')\\r        if os.path.exists(path1):\\r            if os.listdir(path1):\\r                text_data = \\""\\""\\r                for file_name in os.listdir(path1):\\r                    if file_name.endswith(\\"".txt\\""):\\r                        file_path = os.path.join(path1, file_name)\\r                        with open(file_path, 'r', encoding='utf-8') as f:\\r                            text_data += \\"" \\"" + f.read()\\r                summary, model_name = summarize_text(text_data)\\r                output_filename = os.path.basename(folder_path1)+ \\"".txt\\""\\r                output_folder = os.path.dirname(folder_path1)\\r                summary_folder = os.path.join(output_folder, '.aip', 'Summary')\\r                if not os.path.exists(summary_folder):\\r                    os.makedirs(summary_folder)\\r                \\r                output_file_path = os.path.join(summary_folder, output_filename+\\"".txt\\"")\\r                with open(output_file_path, 'w', encoding='utf-8') as f:\\r                    f.write(summary)\\r                    f.write(\\"". Model name: \\"" + model_name)\\r\\r        queue.pop(0)\\r\\r\\r    print(\\""Processing complete.\\"")\\r\\r    return folder_path\\r\\r\\r\\r""]},{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":[],""script"":[""import os\\r\\rimport json\\r\\rimport requests\\r\\rimport shutil\\r\\rimport boto3\\r\\rimport stat\\r\\rdatasetid_param = os.environ['datasetId']\\rorg_param = os.environ['org']\\rreferer = os.environ['datasetId']\\raip_access_token = os.environ['app_access_token']\\rreferer = os.environ['referer']\\rdef getdatasetconfig(dataset_id:str, organization:str):\\r\\r        '''\\r\\r        call ai-plat api to get dataset config\\r\\r        return {dataset_config}\\r\\r        '''  \\r\\r        try:                        \\r            url = f\\""{referer}/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r            headers = {\\r\\r            'access-token': aip_access_token,\\r\\r            'Project':'2'\\r\\r            }\\r\\r            response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r            dataset_config = json.loads(response.text)\\r\\r            return dataset_config\\r\\r        except Exception as e:\\r\\r            print('Exception in getdatasetconfig as: ', e)\\r\\r            raise e\\r\\rdef get_keyconfig(organization:str):\\r\\r    try: \\r\\r        url = f\\""{referer}/api/aip/service/v1/datasources/all?org={organization}\\""\\r\\r        headers = {\\r\\r        'Project': '2',\\r\\r        'access-token': aip_access_token,\\r\\r        }\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r        key_config = json.loads(response.text)\\r\\r        return key_config\\r\\r    except Exception as e:\\r\\r        print('Exception in get_keyconfig as: ', e)\\r\\r        raise e\\r\\r \\r\\r\\r\\rdef s3_download_data(end_point_url,access_key,secret_key,bucket, obj_key, local_path):\\r\\r    \\""\\""\\""\\r\\r    Download a folder from S3 to a local path.\\r\\r    \\""\\""\\""\\r\\r    session = boto3.session.Session()\\r\\r    s3c = session.client(\\r\\r        aws_access_key_id=access_key,\\r\\r        aws_secret_access_key=secret_key,\\r\\r        endpoint_url=end_point_url,\\r\\r        service_name=\\""s3\\"",\\r\\r        use_ssl=False,\\r\\r    )\\r\\r    # List all objects in the folder\\r\\r    response = s3c.list_objects_v2(Bucket=bucket, Prefix=obj_key)\\r\\r    objects = response.get('Contents', [])\\r\\r    # Download each object in the folder\\r\\r    for obj in objects:\\r\\r        key = obj['Key']\\r\\r        file_path = os.path.join(local_path, key)\\r\\r        # Create the directory if it doesn't exist\\r\\r        os.makedirs(os.path.dirname(file_path), exist_ok=True)\\r\\r        s3c.download_file(bucket, key, file_path)      \\r\\rdef DatasetExtractor():    #python-script Data\\r\\r    #get dataset configurations \\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)   \\r\\r    dataset_type = datasetcofig['datasource']['type']  \\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url'] \\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']               \\r\\r        path = attribute['path']   \\r\\r        obj_key = attribute['object']  \\r\\r        key = f'{path}/{obj_key}'\\r\\r        local_path = r\\""C:\\\\Temp\\\\github\\\\data\\""\\r\\r        def on_rm_error(func, path, exc_info):\\r\\r            if not os.access(path, os.W_OK):\\r\\r                os.chmod(path, stat.S_IWUSR)\\r\\r                func(path)\\r\\r            else:\\r\\r                raise\\r\\r        if os.path.exists(local_path):\\r\\r            shutil.rmtree(local_path, onerror=on_rm_error)\\r\\r        if not os.path.exists(local_path):\\r\\r            os.makedirs(local_path)\\r\\r        os.listdir(local_path)\\r\\r        s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = key, local_path = local_path)\\r\\r    elif dataset_type == 'GIT':  \\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        bucketname= connection_dict.get('bucketname')\\r        \\r        os.environ['Bucket_Name'] = bucketname\\r\\r        bucketPath = connection_dict.get('bucketPath')\\r\\r        attribute=json.loads(datasetcofig['attributes'])\\r\\r        url=attribute['url']\\r\\r        repo_name=url.split('/')[-1].replace('.git','')\\r        \\r        if bucketPath != \\""\\"":\\r            key= bucketPath + '/' + repo_name\\r        else:\\r             key= repo_name\\r\\r        s3ConnectionId= connection_dict['datasource']\\r\\r        response = get_keyconfig(organization=org_param)\\r\\r        for i in response:\\r\\r            if i.get('name') == s3ConnectionId:\\r\\r                connection_dict = json.loads(i.get('connectionDetails'))\\r\\r                secret_key= connection_dict['secretKey']\\r                os.environ['AWS_SECRET_ACCESS_KEY'] = secret_key\\r                access_key = connection_dict['accessKey']\\r                os.environ['AWS_ACCESS_KEY_ID'] = access_key\\r                region = connection_dict['Region']\\r                os.environ['AWS_REGION'] = region\\r                url = connection_dict['url']\\r                os.environ['AWS_ENDPOINT_URL'] = url\\r\\r        local_path = r\\""C:\\\\Temp\\\\github\\\\data\\""\\r\\r        def on_rm_error(func, path, exc_info):\\r\\r            if not os.access(path, os.W_OK):\\r\\r                os.chmod(path, stat.S_IWUSR)\\r\\r                func(path)\\r\\r            else:\\r\\r                raise\\r\\r        if os.path.exists(local_path):\\r\\r            shutil.rmtree(local_path, onerror=on_rm_error)\\r\\r        if not os.path.exists(local_path):\\r\\r            os.makedirs(local_path)\\r\\r        s3_download_data(end_point_url = url, access_key = access_key, secret_key=secret_key, bucket = bucketname, obj_key = key, local_path = local_path)\\r        \\r    return local_path""]}]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""},{""name"":""usedSecrets"",""value"":""app_access_token""}],""environment"":[{""name"":""no_proxy"",""value"":""victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap,leap2:7000""},{""name"":""referer"",""value"":""https://leap2:3100""},{""name"":""proxy"",""value"":""http://blrproxy.ad.infosys.com:80""}],""default_runtime"":""{\\""dsAlias\\"":\\""LocalCluster\\"",\\""dsName\\"":\\""LEALCLCL12132\\"",\\""type\\"":\\""REMOTE\\""}""}","admin","CodeSummarization","2024-10-25 09:37:33","LEOCDSMR12593","leo1311","DragNDropLite","6",NULL,"pipeline",NULL,"\0","0"
"admin","2024-07-16 07:20:15.831000","\0","Train model to predict job status failure ",NULL,"{""elements"":[{""id"":""IHFtp"",""alias"":""Train Model"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""train_model"",""requirements"":"""",""params"":[{""name"":""target"",""value"":""status"",""type"":""Text"",""alias"":""status"",""index"":""1""}],""script"":[""import pickle\\r\\rimport boto3\\r\\rfrom sklearn.model_selection import train_test_split\\r\\rfrom sklearn.ensemble import RandomForestClassifier\\r\\rdef train_model(data, target_param):\\r\\r\\r    Working_directory='model_repo'\\r    os.makedirs(Working_directory, exist_ok=True)\\r    \\r    features = data[['Job_TypeId_idx','VM_Type_idx','No_of_Records']]\\r    target = data[target_param]\\r    \\r    X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.9, random_state=42)\\r\\r    \\r\\r    rf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)\\r\\r    rf_classifier.fit(X_train, y_train)\\r\\r    \\r\\r    model_name = 'job_status_prediction_model' +'.pkl'\\r\\r    #print(model_name)\\r\\r    file_path = os.path.join(Working_directory, model_name)\\r\\r    with open(file_path, 'wb') as f:\\r\\r        pickle.dump(rf_classifier, f)\\r\\r        print('Model saved: {}'.format(file_path))\\r\\r    \\r\\r    return Working_directory""]},""position_x"":""483"",""position_y"":""157"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""JznXp"",""elementPosition"":""LeftMiddle""},{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""UZpyG"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""extract_features"",""requirements"":"""",""params"":[],""script"":[""import pandas as pd\\r\\rfrom sklearn.preprocessing import LabelEncoder\\r\\rdef extract_features( dataset):    #python-script Data\\r    data = pd.DataFrame(dataset)\\r    \\r    # Encode the categorical values using LabelEncoder\\r    le = LabelEncoder()\\r    data['Job_TypeId_idx'] = le.fit_transform(data['Job_TypeId'])\\r    data['VM_Type_idx'] = le.fit_transform(data['VM_Type'])\\r    \\r   \\r    return data""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-16 11:46:28"",""alias"":""Job status training dataset"",""id"":2099,""name"":""LEOJBSTS62560"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""select Job_Id,Job_TypeId, No_of_Records , VM_Type, status from @projectname_job_details  where status is not null\\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""dashboard"":null,""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-18 05:56:56"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""ence1F8pLoVebvBOpnVN11MQ47hJ2iXAav5\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""qkbpQyJBvroOJa6IOk6Oela5u1miL5U9HL39yuZQ0ZoCXk1D32uOzSAq+5vCL9HP203A2bu0v+An9B5yq8EDbw=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-18 05:56:55"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""metadata"":null,""modeltype"":null,""taskdetails"":""[]"",""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""JznXp"",""alias"":""Save Model"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""NutanixLoader"",""requirements"":"""",""params"":[{""name"":""bucket"",""value"":""aiplatdev"",""type"":""Text"",""alias"":""aiplatdev"",""index"":""1""},{""name"":""folder_path"",""value"":""JobStatusPrediction/models/"",""type"":""Text"",""alias"":""JobStatusPrediction/models/"",""index"":""2""}],""script"":[""\\r\\rMB = 1024 * 1024\\rdef NutanixLoader(data,connections_param,bucket_param,folder_path_param):\\r    print(\\""Data\\"",data)\\r    for file in os.listdir('model_repo'):\\r        #print(file)\\r        local_path = \\""model_repo/{}\\"".format(file)\\r        object_key=folder_path_param+file\\r        # local_path = f\\""images/{}\\"".format(file)\\r        #print(\\""localpath\\"",local_path)\\r        metadata= None\\r        #print(connections_param)\\r        # print('Bucket :', bucket_param)\\r        # print('Folder Path :', folder_path_param)\\r        # print('File Name :', file_name_param)\\r        # print('Local Path :', local_path)\\r        # object_key=folder_path_param+file_name_param\\r        #print('Object Key :',object_key)\\r        connectiondetails = json.loads(connections_param['connectionDetails'])\\r        s3 = boto3.resource('s3',endpoint_url=connectiondetails['url'],\\r        \\r                            aws_access_key_id=connectiondetails['accessKey'],\\r        \\r                            aws_secret_access_key=connectiondetails['secretKey'],\\r        \\r                            verify=False)\\r    \\r        # config = TransferConfig(multipart_chunksize=5 * MB)\\r        \\r        extra_args = {'Metadata': metadata} if metadata else None\\r        \\r        s3.Bucket(bucket_param).upload_file(local_path,object_key,ExtraArgs=extra_args)\\r       \\r        print(f'Model saved to S3: s3://{bucket_param}/'+object_key)""]},""position_x"":""759"",""position_y"":""152"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""IHFtp"",""elementPosition"":""RightMiddle""},{""type"":""target"",""endpoint"":""dataset2"",""position"":""TopCenter"",""elementId"":""HtmPO"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""train_model"",""requirements"":"""",""params"":[{""name"":""target"",""value"":""status"",""type"":""Text"",""alias"":""status"",""index"":""1""}],""script"":[""import pickle\\r\\rimport boto3\\r\\rfrom sklearn.model_selection import train_test_split\\r\\rfrom sklearn.ensemble import RandomForestClassifier\\r\\rdef train_model(data, target_param):\\r\\r\\r    Working_directory='model_repo'\\r    os.makedirs(Working_directory, exist_ok=True)\\r    \\r    features = data[['Job_TypeId_idx','VM_Type_idx','No_of_Records']]\\r    target = data[target_param]\\r    \\r    X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.9, random_state=42)\\r\\r    \\r\\r    rf_classifier = RandomForestClassifier(n_estimators=100, random_state=42)\\r\\r    rf_classifier.fit(X_train, y_train)\\r\\r    \\r\\r    model_name = 'job_status_prediction_model' +'.pkl'\\r\\r    #print(model_name)\\r\\r    file_path = os.path.join(Working_directory, model_name)\\r\\r    with open(file_path, 'wb') as f:\\r\\r        pickle.dump(rf_classifier, f)\\r\\r        print('Model saved: {}'.format(file_path))\\r\\r    \\r\\r    return Working_directory""]},{""FunctionName"":""extract_features"",""requirements"":"""",""params"":[],""script"":[""import pandas as pd\\r\\rfrom sklearn.preprocessing import LabelEncoder\\r\\rdef extract_features( dataset):    #python-script Data\\r    data = pd.DataFrame(dataset)\\r    \\r    # Encode the categorical values using LabelEncoder\\r    le = LabelEncoder()\\r    data['Job_TypeId_idx'] = le.fit_transform(data['Job_TypeId'])\\r    data['VM_Type_idx'] = le.fit_transform(data['VM_Type'])\\r    \\r   \\r    return data""]},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-16 11:46:28"",""alias"":""Job status training dataset"",""id"":2099,""name"":""LEOJBSTS62560"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""select Job_Id,Job_TypeId, No_of_Records , VM_Type, status from @projectname_job_details  where status is not null\\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""dashboard"":null,""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-18 05:56:56"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""ence1F8pLoVebvBOpnVN11MQ47hJ2iXAav5\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""qkbpQyJBvroOJa6IOk6Oela5u1miL5U9HL39yuZQ0ZoCXk1D32uOzSAq+5vCL9HP203A2bu0v+An9B5yq8EDbw=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-18 05:56:55"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""metadata"":null,""modeltype"":null,""taskdetails"":""[]"",""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},{""connections"":{""lastmodifiedby"":""onkar.salunke@infosys.com"",""lastmodifieddate"":""2024-07-08 06:01:15"",""alias"":""Nutanix"",""id"":41,""name"":""AIPNTNXH56520"",""description"":"""",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-07-08 06:01:15"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false}}]},{""id"":""HtmPO"",""alias"":""Model Storage Connection"",""name"":""Connection"",""classname"":""Connection"",""category"":""Connection"",""attributes"":{""connections"":{""lastmodifiedby"":""onkar.salunke@infosys.com"",""lastmodifieddate"":""2024-07-08 06:01:15"",""alias"":""Nutanix"",""id"":41,""name"":""AIPNTNXH56520"",""description"":"""",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-07-08 06:01:15"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false}},""position_x"":""589"",""position_y"":""0"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""JznXp"",""elementPosition"":""TopCenter""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""connections"":""""},""codeGeneration"":{""requirements"":[],""imports"":[],""script"":""def Connection_<id>(connections_param={}):\\n    \\n    return connections_param\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""UZpyG"",""alias"":""Extract Features"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""extract_features"",""requirements"":"""",""params"":[],""script"":[""import pandas as pd\\r\\rfrom sklearn.preprocessing import LabelEncoder\\r\\rdef extract_features( dataset):    #python-script Data\\r    data = pd.DataFrame(dataset)\\r    \\r    # Encode the categorical values using LabelEncoder\\r    le = LabelEncoder()\\r    data['Job_TypeId_idx'] = le.fit_transform(data['Job_TypeId'])\\r    data['VM_Type_idx'] = le.fit_transform(data['VM_Type'])\\r    \\r   \\r    return data""]},""position_x"":""276"",""position_y"":""154"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""IHFtp"",""elementPosition"":""LeftMiddle""},{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""CClVa"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-16 11:46:28"",""alias"":""Job status training dataset"",""id"":2099,""name"":""LEOJBSTS62560"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""select Job_Id,Job_TypeId, No_of_Records , VM_Type, status from @projectname_job_details  where status is not null\\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""dashboard"":null,""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-18 05:56:56"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""ence1F8pLoVebvBOpnVN11MQ47hJ2iXAav5\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""qkbpQyJBvroOJa6IOk6Oela5u1miL5U9HL39yuZQ0ZoCXk1D32uOzSAq+5vCL9HP203A2bu0v+An9B5yq8EDbw=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-18 05:56:55"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""metadata"":null,""modeltype"":null,""taskdetails"":""[]"",""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""CClVa"",""alias"":""Dataset Extractor"",""name"":""Dataset Extractor"",""classname"":""DatasetExtractor"",""category"":""Extractor"",""attributes"":{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-16 11:46:28"",""alias"":""Job status training dataset"",""id"":2099,""name"":""LEOJBSTS62560"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""\\\\\\\\\\\\\\""null\\\\\\\\\\\\\\""\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""select Job_Id,Job_TypeId, No_of_Records , VM_Type, status from @projectname_job_details  where status is not null\\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""dashboard"":null,""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-10-18 05:56:56"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""ence1F8pLoVebvBOpnVN11MQ47hJ2iXAav5\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""qkbpQyJBvroOJa6IOk6Oela5u1miL5U9HL39yuZQ0ZoCXk1D32uOzSAq+5vCL9HP203A2bu0v+An9B5yq8EDbw=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-10-18 05:56:55"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""metadata"":null,""modeltype"":null,""taskdetails"":""[]"",""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},""position_x"":""56"",""position_y"":""168"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""UZpyG"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""dataset"":[""dropdown""]},""codeGeneration"":{""REST"":{},""requirements"":[],""servicenow"":{},""imports"":[],""MYSQL"":{},""w"":{},""H2"":{},""MSSQL"":{},""AWS"":{},""POSTGRESQL"":{},""script"":""def DatasetExtractor_<id>(dataset_param={}):\\r    datasetName = dataset_param.get('alias',dataset_param.get('name'))\\r    extractortype = dataset_param['datasource'].get('type','')\\r    if extractortype == '':\\r        logger.error('Datasource Type mapping not found. Validate Dataset Extractor datasource mapping')\\r    logger.info('Extracting Dataset - {0} of type {1}'.format(datasetName, extractortype))\\r    datasetAttributes= dataset_param['attributes']\\r    if type(datasetAttributes) is str:\\r        datasetAttributes = json.loads(datasetAttributes)\\r    datasource = dataset_param['datasource']\\r    datasourceAttributes = json.loads(datasource['connectionDetails'])\\r    datasourceAttributes['salt'] = datasource.get('salt','')\\r    for item in datasourceAttributes.keys():\\r        if '_vault' not in item:\\r            from leaputils import Vault\\r            try:\\r                isvault=datasourceAttributes[item+'_vault']\\r                if isvault:\\r                    value = Vault.getPassword(datasourceAttributes[item+'_vault'])\\r                    datasourceAttributes[item] = value\\r            except:\\r                a=1\\r    datasetAttributes['schema'] = dataset_param.get('schema','')\\r    datasetAttributes['applySchema'] = False\\r\\r    extractor = ''\\r    import importlib.util\\r    #load from plugins path\\r    EXTRA_PLUGINS_PATH = os.environ.get('EXTRA_PLUGINS_PATH','')\\r    if not os.path.exists(EXTRA_PLUGINS_PATH) or EXTRA_PLUGINS_PATH =='':\\r        EXTRA_PLUGINS_PATH = '/root/plugins'\\r        logger.error('Please update environment variable - EXTRA_PLUGINS_PATH ')\\r    file_path = os.path.join(EXTRA_PLUGINS_PATH, 'extractors', f'{extractortype}.py')\\r    print('FilePath', file_path)\\r    \\r    spec = importlib.util.spec_from_file_location('Extractor', file_path)\\r    module = importlib.util.module_from_spec(spec)\\r    sys.modules['Extractor'] = module\\r    spec.loader.exec_module(module)\\r    class_name = extractortype  # ask user - className\\r    extractor = getattr(module, class_name)\\r    extractor = extractor(datasourceAttributes, datasetAttributes)\\r    if extractor == '':\\r        logger.error('No extractor configured for type {0}'.format(extractortype))\\r    dataset = extractor.getData()\\r    return dataset\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\n""},""context"":[]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""}],""environment"":[],""default_runtime"":""{\\""dsAlias\\"":\\""Test-Python Environment\\"",\\""dsName\\"":\\""LEOTST-P74170\\"",\\""type\\"":\\""REMOTE\\""}""}","admin","Job Status Training","2024-10-22 04:28:17","LEOJB_ST32653","leo1311","DragNDropLite","112",NULL,"pipeline","{""108"":{""taskId"":""69777b93-643b-431f-9b26-0c307a7f4bc6""}}","\0","0"
"gautamsumanyu.t@infosys.com","2024-05-27 09:49:29.053000","\0","Prediction Pipeline for Job status Drag and Drop Lite",NULL,"{""elements"":[{""id"":""bGtDU"",""alias"":""Predict Status"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""predict"",""requirements"":"""",""params"":[],""script"":[""import pandas as pd\\r\\rimport numpy as np\\r\\rimport sklearn\\r\\rfrom sklearn.model_selection import train_test_split\\r\\rimport matplotlib.pyplot as plt\\r\\rfrom sklearn.ensemble import RandomForestClassifier\\r\\rfrom sklearn.linear_model import LinearRegression\\r\\rfrom sklearn.metrics import accuracy_score, classification_report\\r\\rfrom sklearn.preprocessing import LabelEncoder\\r\\rimport pickle\\r\\rdef predict(dataset, model):\\r    print(dataset)\\r    print('Model:', model)\\r\\r    data = pd.DataFrame(dataset)\\r\\r    print(data.head())\\r    with open(model, 'rb') as f:\\r        trained_model = pickle.load(f)\\r\\r    \\r    # Encode the categorical values using LabelEncoder\\r    le1 = LabelEncoder()\\r\\r    data['Job_TypeId_idx'] = le1.fit_transform(data['Job_TypeId'])\\r    le2 = LabelEncoder()\\r    data['VM_Type_idx'] = le2.fit_transform(data['VM_Type'])\\r\\r    x_test = data[['Job_TypeId_idx', 'VM_Type_idx', 'No_of_Records']]\\r    y_pred = trained_model.predict(x_test)\\r    print(type(y_pred))\\r    final_data= {'Job_Id': data['Job_Id'], 'Job_TypeId': le1.inverse_transform(x_test['Job_TypeId_idx']), 'VM_Type': le2.inverse_transform(x_test['VM_Type_idx']), 'predicted_status': y_pred}\\r    final_data = pd.DataFrame(final_data)\\r    final_data= final_data.to_dict('records')\\r    \\r    return final_data""]},""position_x"":""266"",""position_y"":""301"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""oirmK"",""elementPosition"":""LeftMiddle""},{""type"":""target"",""endpoint"":""dataset2"",""position"":""TopCenter"",""elementId"":""LnmWf"",""elementPosition"":""RightMiddle""},{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""Yoqga"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""bucket"":""aiplatdev"",""key"":""JobStatusPrediction/models/job_status_prediction_model.pkl"",""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-06-05 09:10:02"",""alias"":""Nutanix"",""id"":24,""name"":""AIPNTNXH56520"",""description"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-06-05 09:10:02"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false}},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-16 11:53:29"",""alias"":""Job prediction dataset"",""id"":2098,""name"":""LEOJBPRD88066"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""null\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""select Job_Id,Job_TypeId, No_of_Records, VM_Type from @projectname_job_details where status is null\\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""dashboard"":null,""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""metadata"":null,""modeltype"":null,""taskdetails"":""[]"",""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""LnmWf"",""alias"":""Model Repo"",""name"":""Download_Data"",""classname"":""Download_Data"",""category"":"""",""attributes"":{""bucket"":""aiplatdev"",""key"":""JobStatusPrediction/models/job_status_prediction_model.pkl"",""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-06-05 09:10:02"",""alias"":""Nutanix"",""id"":24,""name"":""AIPNTNXH56520"",""description"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-06-05 09:10:02"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false}},""position_x"":""107"",""position_y"":""177"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""bGtDU"",""elementPosition"":""TopCenter""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{""bucket"":""text"",""key"":""text"",""connections"":""""},""codeGeneration"":{""requirements"":[""boto3"",""re"",""botocore"",""pathlib"",""datasets"",""transformers"",""torch"",""tqdm"",""scikit-learn""],""imports"":[""import os"",""import pathlib"",""import boto3"",""import botocore"",""import json"",""import re"",""from datasets import Dataset, DatasetDict"",""from pathlib import Path"",""import logging"",""from collections import defaultdict"",""from tqdm import tqdm"",""from datasets import Dataset, DatasetDict"",""from transformers import AutoTokenizer, AutoModelForCausalLM"",""from transformers import DataCollatorForLanguageModeling"",""from transformers import Trainer, TrainingArguments"",""import torch"",""import random"",""from tqdm import tqdm"",""import argparse"",""import pandas as pd"",""from sklearn.model_selection import train_test_split"",""import gc"",""import pickle as pkl""],""script"":""logging_dir = '/app/logs'\\nlog_filename = 'create.log'\\nPath(logging_dir).mkdir(parents=True, exist_ok=True)\\nlog_filename = os.path.join(logging_dir, log_filename)\\nlogging.basicConfig(filename=log_filename,\\n                    format='%(asctime)s %(message)s',\\n                    filemode='w')\\nlogger = logging.getLogger()\\nlogger.setLevel(logging.INFO)\\n\\ndef Download_Data(connections_param,bucket_param, key_param):\\n    \\n    connectiondetails = json.loads(connections_param['connectionDetails'])\\n    s3 = boto3.resource('s3',endpoint_url=connectiondetails['url'],\\n    \\n                        aws_access_key_id=connectiondetails['accessKey'],\\n    \\n                        aws_secret_access_key=connectiondetails['secretKey'],\\n    \\n                        verify=False)\\n    bucket = bucket_param\\n    key = key_param\\n    WORKING_DIRECTORY = 'dataset_file'\\n    if not os.path.exists(WORKING_DIRECTORY):\\n        os.makedirs(WORKING_DIRECTORY)\\n    model_path = os.path.join(WORKING_DIRECTORY)\\n    \\n    bucket_object = s3.Bucket(bucket)\\n    head, file_name = os.path.split(key)\\n    for my_bucket_object in bucket_object.objects.filter(Prefix=key):\\n        logger.info(my_bucket_object)\\n        object_save_path = (\\n            f'{model_path}/{pathlib.Path(my_bucket_object.key).name}'\\n        )\\n        bucket_object.download_file(my_bucket_object.key, object_save_path)\\n    \\n    dataset_file_path = os.path.join(WORKING_DIRECTORY,file_name)\\n    logger.info(dataset_file_path,'download completed')\\n    return dataset_file_path\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""Yoqga"",""alias"":""Dataset Extractor"",""name"":""Dataset Extractor"",""classname"":""DatasetExtractor"",""category"":""Extractor"",""attributes"":{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-16 11:53:29"",""alias"":""Job prediction dataset"",""id"":2098,""name"":""LEOJBPRD88066"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""null\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""select Job_Id,Job_TypeId, No_of_Records, VM_Type from @projectname_job_details where status is null\\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""dashboard"":null,""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""metadata"":null,""modeltype"":null,""taskdetails"":""[]"",""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},""position_x"":""21"",""position_y"":""304"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""bGtDU"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""dataset"":[""dropdown""]},""codeGeneration"":{""REST"":{},""requirements"":[],""servicenow"":{},""imports"":[],""MYSQL"":{},""w"":{},""H2"":{},""MSSQL"":{},""AWS"":{},""POSTGRESQL"":{},""script"":""def DatasetExtractor_<id>(dataset_param={}):\\r    datasetName = dataset_param.get('alias',dataset_param.get('name'))\\r    extractortype = dataset_param['datasource'].get('type','')\\r    if extractortype == '':\\r        logger.error('Datasource Type mapping not found. Validate Dataset Extractor datasource mapping')\\r    logger.info('Extracting Dataset - {0} of type {1}'.format(datasetName, extractortype))\\r    datasetAttributes= dataset_param['attributes']\\r    if type(datasetAttributes) is str:\\r        datasetAttributes = json.loads(datasetAttributes)\\r    datasource = dataset_param['datasource']\\r    datasourceAttributes = json.loads(datasource['connectionDetails'])\\r    datasourceAttributes['salt'] = datasource.get('salt','')\\r    for item in datasourceAttributes.keys():\\r        if '_vault' not in item:\\r            from leaputils import Vault\\r            try:\\r                isvault=datasourceAttributes[item+'_vault']\\r                if isvault:\\r                    value = Vault.getPassword(datasourceAttributes[item+'_vault'])\\r                    datasourceAttributes[item] = value\\r            except:\\r                a=1\\r    datasetAttributes['schema'] = dataset_param.get('schema','')\\r    datasetAttributes['applySchema'] = False\\r\\r    extractor = ''\\r    import importlib.util\\r    #load from plugins path\\r    EXTRA_PLUGINS_PATH = os.environ.get('EXTRA_PLUGINS_PATH','')\\r    if not os.path.exists(EXTRA_PLUGINS_PATH) or EXTRA_PLUGINS_PATH =='':\\r        EXTRA_PLUGINS_PATH = '/root/plugins'\\r        logger.error('Please update environment variable - EXTRA_PLUGINS_PATH ')\\r    file_path = os.path.join(EXTRA_PLUGINS_PATH, 'extractors', f'{extractortype}.py')\\r    print('FilePath', file_path)\\r    \\r    spec = importlib.util.spec_from_file_location('Extractor', file_path)\\r    module = importlib.util.module_from_spec(spec)\\r    sys.modules['Extractor'] = module\\r    spec.loader.exec_module(module)\\r    class_name = extractortype  # ask user - className\\r    extractor = getattr(module, class_name)\\r    extractor = extractor(datasourceAttributes, datasetAttributes)\\r    if extractor == '':\\r        logger.error('No extractor configured for type {0}'.format(extractortype))\\r    dataset = extractor.getData()\\r    return dataset\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\n""},""context"":[]},{""id"":""fXgbK"",""alias"":""Predictions"",""name"":""Dataset Loader"",""classname"":""DatasetLoader"",""category"":""Loader"",""attributes"":{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-16 10:44:38"",""alias"":""Predicted Job Status"",""id"":4318,""name"":""LEOPRDCT41717"",""description"":null,""schema"":null,""schemajson"":""\\""null\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""ciphertext\\"":\\""ZxBBBoI85beWSjVnsMW8zkoO3P05U83KEUu7D1vTAhHAzcsN1rXUBACkn6jN05RWi+gwF2Bjp4engbYlOS25BhSgVsAnlNjwLoUMfcPoLWT+231wCv52yy9o+uK5hQSt3B8blmXDEVaIy3UdcG02qdPODSM3imtl+inqHnedlCvNlZmM06bjdgeUaW5DTZI49mcjeadKxN9HijRaE9hUART7Kr28+vrpdrcL5tMS/meAdsX/2tfBhVG//JQCQSaIPQG1LFdqPGjZurgC19kUn19hZBjfb6rvmmzFEi2YSn5fyDlzFB6Rt/GM3AMSKieaYal3EuWpVQIwMoaI\\"",\\""Query\\"":\\""select * from @projectname_predicted_jobStatus\\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""overwrite\\"",\\""params\\"":\\""{}\\"",\\""iv\\"":\\""1+eHqTGpi1yXVYlM\\"",\\""tableName\\"":\\""@projectname_predicted_jobStatus\\"",\\""uniqueIdentifier\\"":\\""Job_Id\\""}"",""dashboard"":null,""type"":""rw"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""metadata"":null,""modeltype"":null,""taskdetails"":""[]"",""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},""position_x"":""870"",""position_y"":""310"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""WWUNM"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[],""formats"":{""dataset"":""dropdown""},""codeGeneration"":{""REST"":{},""requirements"":[],""imports"":[""import importlib""],""MYSQL"":{},""MSSQL"":{},""AWS"":{},""POSTGRESQL"":{},""script"":""def DatasetLoader_<id>(dataset,dataset_param={}):\\r    datasetName = dataset_param.get('alias',dataset_param.get('name'))\\r    loadertype = dataset_param['datasource'].get('type','')\\r    if loadertype == '':\\r        logger.error('Datasource Type mapping not found. Validate Dataset Loader datasource mapping')\\r    logger.info('Loading Dataset - {0} of type {1}'.format(datasetName, loadertype))\\r    datasetAttributes = dataset_param['attributes']\\r    if type(datasetAttributes) is str:\\r        datasetAttributes = json.loads(datasetAttributes)\\r    datasource = dataset_param['datasource']\\r    datasourceAttributes = json.loads(datasource['connectionDetails'])\\r    datasourceAttributes['salt'] = datasource.get('salt', '')\\r    datasetAttributes['schema'] = dataset_param.get('schema','')\\r    datasetAttributes['applySchema'] = False\\r    for item in datasourceAttributes.keys():\\r        if '_vault' not in item:\\r            from leaputils import Vault\\r            try:\\r                isvault=datasourceAttributes[item+'_vault']\\r                if isvault:\\r                    value = Vault.getPassword(datasourceAttributes[item])\\r                    datasourceAttributes[item] = value\\r            except:\\r                a=1\\r    loader = ''\\r    import importlib.util\\r    # load from plugins path\\r    EXTRA_PLUGINS_PATH = os.environ.get('EXTRA_PLUGINS_PATH','')\\r    if not os.path.exists(EXTRA_PLUGINS_PATH) or EXTRA_PLUGINS_PATH =='':\\r        EXTRA_PLUGINS_PATH = '/root/plugins'\\r        logger.error('EXTRA_PLUGINS_PATH not a valid Path. Please update icip.environment - EXTRA_PLUGINS_PATH constant')\\r    file_path = os.path.join(EXTRA_PLUGINS_PATH, 'loaders', f'{loadertype}.py')\\r    print('FilePath', file_path)\\r    \\r    spec = importlib.util.spec_from_file_location('Loader', file_path)\\r    module = importlib.util.module_from_spec(spec)\\r    sys.modules['Loader'] = module\\r    spec.loader.exec_module(module)\\r    class_name = loadertype  # ask user - className\\r    loader = getattr(module, class_name)\\r    loader = loader(datasourceAttributes, datasetAttributes)\\r    if loader == '':\\r        logger.error('No loader configured for type {0}'.format(loadertype))\\r    \\r    loader.loadData(dataset)\\r    print('Data Saved')\\r\\n""},""context"":[{""FunctionName"":""generate_alert"",""requirements"":"""",""params"":[],""script"":[""import mysql.connector\\r\\rfrom urllib.parse import urlparse\\rfrom leaputils import Vault\\rfrom leaputils import Security\\rdef get_db_connection(connection_attributes):\\r    print('Connection',connection_attributes)\\r    connectionDetails = json.loads(connection_attributes['connectionDetails'])\\r    salt= connection_attributes['salt']\\r    username= connectionDetails['userName']\\r    password=Security.decrypt(connectionDetails['password'],salt)\\r    url=connectionDetails['url']\\r    host = urlparse(url[5:]).hostname\\r    port =urlparse(url[5:]).port\\r    database = urlparse(url[5:]).path.rsplit('/', 1)[1]\\r    connection = mysql.connector.connect(user=username, password=password, host=host, database=database, port = port)\\r    # return connection\\r    # connection = mysql.connector.connect(user='leapadm', password='hPwpmwTz', host='10.191.31.130', database='leap2_7000_master', port=3307)\\r\\r    return connection\\r    \\rdef generate_alert( results,connection_attributes):    #python-script Data\\r    \\r    predictions = results\\r\\r    \\r    df_predictions = pd.DataFrame(predictions)\\r    \\r    # Filter the dataframe where status contains \\""Failure\\""\\r    filtered_predictions = [pred for pred in predictions if 'Failure' in pred['predicted_status'].lower()]\\r    print('F Preds', filtered_predictions)\\r    filtered_df = df_predictions[df_predictions['predicted_status'].str.contains('Failure', case=False, na=False)]\\r    print('F DF', filtered_df)\\r\\r\\r    #filtered_df = predictions[predictions['status'].str.contains('Failure', case=False, na=False)]\\r    \\r    # Create a new list of dictionaries as per your requirements\\r    result_list = []\\r    import random\\r    from datetime import datetime, date\\r\\r    import time\\r    for _, row in filtered_df.iterrows():\\r        incident = {\\r                'number': f\\""ALRT{random.randint(10000, 99999)}\\"",\\r                'shortdescription': f\\""{row['Job_TypeId']}: Job Failure Prediction\\"",\\r                'description': f\\""{row['Job_TypeId']} {row['VM_Type']}\\"",\\r                'priority': '3-medium',\\r                'configurationItem': row['Job_TypeId'],\\r                'cmdb_ci_sys_id' : row['cmdb_sys_id'],\\r                'createdDate': datetime.now().strftime(\\""%Y-%m-%d %H:%M:%S\\""),\\r                'taskType': 'Alerts',\\r                'type':'Alerts'\\r            }\\r        result_list.append(incident)\\r    \\r    \\r    # Print the result (you can modify this part based on what you want to do with the result)\\r    print(result_list)\\r    result_df = pd.DataFrame(result_list)\\r    \\r    \\r    cnx = get_db_connection(connection_attributes)\\r    cursor = cnx.cursor()\\r    table_name = 'leo1311_tickets'\\r    placeholders = \\"", \\"".join([\\""%s\\""] * len(result_df.columns))\\r    insert_query = f\\""INSERT INTO {table_name} ({', '.join(result_df.columns)}) VALUES ({placeholders})\\""\\r    print('Insert Query', insert_query)\\r    # Convert DataFrame to list of tuples\\r    values = [tuple(row) for row in result_df.values]\\r    print(values)\\r    \\r    # Execute the INSERT statement\\r    try:\\r        \\r        cursor.executemany(insert_query, values)\\r        cnx.commit()\\r        print('Alert Generated!')\\r    except:\\r        print('Error in generating Alert')\\r# Execute the INSERT query for each row\\r    # for values in values_list:\\r    #     print(values)\\r    #     cursor.execute(insert_record_query, values)\\r\\r    # columnNames=', '.join(result_df.columns)\\r    # print('columnNames*****', columnNames)\\r\\r    # insert_record_query = f\\""INSERT INTO {table_name} ({columnNames}) VALUES ({values})\\""\\r    #print('INSERT QUERY', insert_record_query)\\r    \\r\\r    # for index, row in result_df.iterrows():\\r    #     cursor.execute(insert_record_query, list(row))\\r    \\r    \\r    #Generate Alert\\r    return predictions""]},{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-17 10:40:42"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enchaT7yazcRUFUGmA2TOVaq1DYo8YKi5UC\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.191.31.130:3307/leapmaster_ref_data_7000\\""}"",""salt"":""yacEe5JJof8EagsTM7OMm6N3Rh1kcefxbIahC3bxz4QIf2RE6d1HtBiAdVo57ZcLYub48v/ECi4cvJyyObfjLw=="",""organization"":""leo1311"",""dshashcode"":""e7f5fbc464c56b299c78daa1257ae1b5ccdf50c59b2fd68012b9a384c52d5a17"",""activetime"":""2024-07-17 10:40:42"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false}},{""FunctionName"":""map_cmdb_ci"",""requirements"":"""",""params"":[],""script"":[""def map_cmdb_ci( predictions, cmdb_ci):    #python-script Data\\r    results = []\\r    for data in predictions:\\r        status = data['predicted_status']\\r        Job_TypeId  = data['Job_TypeId']\\r        #cmdb_ci = #find\\r        if 'fail' in status.lower():\\r            for row in cmdb_ci:\\r                if row['ci_name']==Job_TypeId:\\r                    data['cmdb_sys_id'] = row['cmdb_ci_sys_id']\\r        \\r        results.append(data)\\r    print(results)\\r    return results""]},{""FunctionName"":""predict"",""requirements"":"""",""params"":[],""script"":[""import pandas as pd\\r\\rimport numpy as np\\r\\rimport sklearn\\r\\rfrom sklearn.model_selection import train_test_split\\r\\rimport matplotlib.pyplot as plt\\r\\rfrom sklearn.ensemble import RandomForestClassifier\\r\\rfrom sklearn.linear_model import LinearRegression\\r\\rfrom sklearn.metrics import accuracy_score, classification_report\\r\\rfrom sklearn.preprocessing import LabelEncoder\\r\\rimport pickle\\r\\rdef predict(dataset, model):\\r    print(dataset)\\r    print('Model:', model)\\r\\r    data = pd.DataFrame(dataset)\\r\\r    print(data.head())\\r    with open(model, 'rb') as f:\\r        trained_model = pickle.load(f)\\r\\r    \\r    # Encode the categorical values using LabelEncoder\\r    le1 = LabelEncoder()\\r\\r    data['Job_TypeId_idx'] = le1.fit_transform(data['Job_TypeId'])\\r    le2 = LabelEncoder()\\r    data['VM_Type_idx'] = le2.fit_transform(data['VM_Type'])\\r\\r    x_test = data[['Job_TypeId_idx', 'VM_Type_idx', 'No_of_Records']]\\r    y_pred = trained_model.predict(x_test)\\r    print(type(y_pred))\\r    final_data= {'Job_Id': data['Job_Id'], 'Job_TypeId': le1.inverse_transform(x_test['Job_TypeId_idx']), 'VM_Type': le2.inverse_transform(x_test['VM_Type_idx']), 'predicted_status': y_pred}\\r    final_data = pd.DataFrame(final_data)\\r    final_data= final_data.to_dict('records')\\r    \\r    return final_data""]},{""bucket"":""aiplatdev"",""key"":""JobStatusPrediction/models/job_status_prediction_model.pkl"",""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-06-05 09:10:02"",""alias"":""Nutanix"",""id"":24,""name"":""AIPNTNXH56520"",""description"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-06-05 09:10:02"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false}},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-16 11:53:29"",""alias"":""Job prediction dataset"",""id"":2098,""name"":""LEOJBPRD88066"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""null\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""select Job_Id,Job_TypeId, No_of_Records, VM_Type from @projectname_job_details where status is null\\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""dashboard"":null,""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""metadata"":null,""modeltype"":null,""taskdetails"":""[]"",""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-17 11:25:11"",""alias"":""CMDB_CIs"",""id"":4336,""name"":""LEOCMDB_70792"",""description"":"""",""schema"":null,""schemajson"":null,""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT `ci_name`,`cmdb_ci_sys_id` FROM `cfm_configuration_item` WHERE `ctype` IN(\\\\nSELECT id FROM `cfm_configuration_item_type` WHERE `ctype` = 'Batch Job' AND project_id =2)\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-19 10:09:16"",""alias"":""leapmaster"",""id"":3,""name"":""leapmaster"",""description"":""leapmaster"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""encoRquqc4WeDawKr9m2ZObnh6GIoz+utbg\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_coredb\\""}"",""salt"":""5Cha+aeT0olRxwjf+yP55cnsvzxY5V6KMEHYl5E8kDiNxJse71hURRkxLhbDUlThUEzW46mgkg5Qd5dw+Xa+kg=="",""organization"":""leo1311"",""dshashcode"":""1c4af13b9536b09e21b46ca87669db8c971373d2c28309cbfefa8ee62ce66a80"",""activetime"":""2024-09-19 10:09:15"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""WWUNM"",""alias"":""Generate Failure Alert"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""generate_alert"",""requirements"":"""",""params"":[],""script"":[""import mysql.connector\\r\\rfrom urllib.parse import urlparse\\rfrom leaputils import Vault\\rfrom leaputils import Security\\rdef get_db_connection(connection_attributes):\\r    print('Connection',connection_attributes)\\r    connectionDetails = json.loads(connection_attributes['connectionDetails'])\\r    salt= connection_attributes['salt']\\r    username= connectionDetails['userName']\\r    password=Security.decrypt(connectionDetails['password'],salt)\\r    url=connectionDetails['url']\\r    host = urlparse(url[5:]).hostname\\r    port =urlparse(url[5:]).port\\r    database = urlparse(url[5:]).path.rsplit('/', 1)[1]\\r    connection = mysql.connector.connect(user=username, password=password, host=host, database=database, port = port)\\r    # return connection\\r    # connection = mysql.connector.connect(user='leapadm', password='hPwpmwTz', host='10.191.31.130', database='leap2_7000_master', port=3307)\\r\\r    return connection\\r    \\rdef generate_alert( results,connection_attributes):    #python-script Data\\r    \\r    predictions = results\\r\\r    \\r    df_predictions = pd.DataFrame(predictions)\\r    \\r    # Filter the dataframe where status contains \\""Failure\\""\\r    filtered_predictions = [pred for pred in predictions if 'Failure' in pred['predicted_status'].lower()]\\r    print('F Preds', filtered_predictions)\\r    filtered_df = df_predictions[df_predictions['predicted_status'].str.contains('Failure', case=False, na=False)]\\r    print('F DF', filtered_df)\\r\\r\\r    #filtered_df = predictions[predictions['status'].str.contains('Failure', case=False, na=False)]\\r    \\r    # Create a new list of dictionaries as per your requirements\\r    result_list = []\\r    import random\\r    from datetime import datetime, date\\r\\r    import time\\r    for _, row in filtered_df.iterrows():\\r        incident = {\\r                'number': f\\""ALRT{random.randint(10000, 99999)}\\"",\\r                'shortdescription': f\\""{row['Job_TypeId']}: Job Failure Prediction\\"",\\r                'description': f\\""{row['Job_TypeId']} {row['VM_Type']}\\"",\\r                'priority': '3-medium',\\r                'configurationItem': row['Job_TypeId'],\\r                'cmdb_ci_sys_id' : row['cmdb_sys_id'],\\r                'createdDate': datetime.now().strftime(\\""%Y-%m-%d %H:%M:%S\\""),\\r                'taskType': 'Alerts',\\r                'type':'Alerts'\\r            }\\r        result_list.append(incident)\\r    \\r    \\r    # Print the result (you can modify this part based on what you want to do with the result)\\r    print(result_list)\\r    result_df = pd.DataFrame(result_list)\\r    \\r    \\r    cnx = get_db_connection(connection_attributes)\\r    cursor = cnx.cursor()\\r    table_name = 'leo1311_tickets'\\r    placeholders = \\"", \\"".join([\\""%s\\""] * len(result_df.columns))\\r    insert_query = f\\""INSERT INTO {table_name} ({', '.join(result_df.columns)}) VALUES ({placeholders})\\""\\r    print('Insert Query', insert_query)\\r    # Convert DataFrame to list of tuples\\r    values = [tuple(row) for row in result_df.values]\\r    print(values)\\r    \\r    # Execute the INSERT statement\\r    try:\\r        \\r        cursor.executemany(insert_query, values)\\r        cnx.commit()\\r        print('Alert Generated!')\\r    except:\\r        print('Error in generating Alert')\\r# Execute the INSERT query for each row\\r    # for values in values_list:\\r    #     print(values)\\r    #     cursor.execute(insert_record_query, values)\\r\\r    # columnNames=', '.join(result_df.columns)\\r    # print('columnNames*****', columnNames)\\r\\r    # insert_record_query = f\\""INSERT INTO {table_name} ({columnNames}) VALUES ({values})\\""\\r    #print('INSERT QUERY', insert_record_query)\\r    \\r\\r    # for index, row in result_df.iterrows():\\r    #     cursor.execute(insert_record_query, list(row))\\r    \\r    \\r    #Generate Alert\\r    return predictions""]},""position_x"":""673"",""position_y"":""309"",""connectors"":[{""type"":""source"",""endpoint"":""out1"",""position"":""RightMiddle"",""elementId"":""fXgbK"",""elementPosition"":""LeftMiddle""},{""type"":""target"",""endpoint"":""dataset2"",""position"":""TopCenter"",""elementId"":""BlpIo"",""elementPosition"":""RightMiddle""},{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""oirmK"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-17 10:40:42"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enchaT7yazcRUFUGmA2TOVaq1DYo8YKi5UC\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.191.31.130:3307/leapmaster_ref_data_7000\\""}"",""salt"":""yacEe5JJof8EagsTM7OMm6N3Rh1kcefxbIahC3bxz4QIf2RE6d1HtBiAdVo57ZcLYub48v/ECi4cvJyyObfjLw=="",""organization"":""leo1311"",""dshashcode"":""e7f5fbc464c56b299c78daa1257ae1b5ccdf50c59b2fd68012b9a384c52d5a17"",""activetime"":""2024-07-17 10:40:42"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false}},{""FunctionName"":""map_cmdb_ci"",""requirements"":"""",""params"":[],""script"":[""def map_cmdb_ci( predictions, cmdb_ci):    #python-script Data\\r    results = []\\r    for data in predictions:\\r        status = data['predicted_status']\\r        Job_TypeId  = data['Job_TypeId']\\r        #cmdb_ci = #find\\r        if 'fail' in status.lower():\\r            for row in cmdb_ci:\\r                if row['ci_name']==Job_TypeId:\\r                    data['cmdb_sys_id'] = row['cmdb_ci_sys_id']\\r        \\r        results.append(data)\\r    print(results)\\r    return results""]},{""FunctionName"":""predict"",""requirements"":"""",""params"":[],""script"":[""import pandas as pd\\r\\rimport numpy as np\\r\\rimport sklearn\\r\\rfrom sklearn.model_selection import train_test_split\\r\\rimport matplotlib.pyplot as plt\\r\\rfrom sklearn.ensemble import RandomForestClassifier\\r\\rfrom sklearn.linear_model import LinearRegression\\r\\rfrom sklearn.metrics import accuracy_score, classification_report\\r\\rfrom sklearn.preprocessing import LabelEncoder\\r\\rimport pickle\\r\\rdef predict(dataset, model):\\r    print(dataset)\\r    print('Model:', model)\\r\\r    data = pd.DataFrame(dataset)\\r\\r    print(data.head())\\r    with open(model, 'rb') as f:\\r        trained_model = pickle.load(f)\\r\\r    \\r    # Encode the categorical values using LabelEncoder\\r    le1 = LabelEncoder()\\r\\r    data['Job_TypeId_idx'] = le1.fit_transform(data['Job_TypeId'])\\r    le2 = LabelEncoder()\\r    data['VM_Type_idx'] = le2.fit_transform(data['VM_Type'])\\r\\r    x_test = data[['Job_TypeId_idx', 'VM_Type_idx', 'No_of_Records']]\\r    y_pred = trained_model.predict(x_test)\\r    print(type(y_pred))\\r    final_data= {'Job_Id': data['Job_Id'], 'Job_TypeId': le1.inverse_transform(x_test['Job_TypeId_idx']), 'VM_Type': le2.inverse_transform(x_test['VM_Type_idx']), 'predicted_status': y_pred}\\r    final_data = pd.DataFrame(final_data)\\r    final_data= final_data.to_dict('records')\\r    \\r    return final_data""]},{""bucket"":""aiplatdev"",""key"":""JobStatusPrediction/models/job_status_prediction_model.pkl"",""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-06-05 09:10:02"",""alias"":""Nutanix"",""id"":24,""name"":""AIPNTNXH56520"",""description"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-06-05 09:10:02"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false}},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-16 11:53:29"",""alias"":""Job prediction dataset"",""id"":2098,""name"":""LEOJBPRD88066"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""null\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""select Job_Id,Job_TypeId, No_of_Records, VM_Type from @projectname_job_details where status is null\\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""dashboard"":null,""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""metadata"":null,""modeltype"":null,""taskdetails"":""[]"",""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-17 11:25:11"",""alias"":""CMDB_CIs"",""id"":4336,""name"":""LEOCMDB_70792"",""description"":"""",""schema"":null,""schemajson"":null,""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT `ci_name`,`cmdb_ci_sys_id` FROM `cfm_configuration_item` WHERE `ctype` IN(\\\\nSELECT id FROM `cfm_configuration_item_type` WHERE `ctype` = 'Batch Job' AND project_id =2)\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-19 10:09:16"",""alias"":""leapmaster"",""id"":3,""name"":""leapmaster"",""description"":""leapmaster"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""encoRquqc4WeDawKr9m2ZObnh6GIoz+utbg\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_coredb\\""}"",""salt"":""5Cha+aeT0olRxwjf+yP55cnsvzxY5V6KMEHYl5E8kDiNxJse71hURRkxLhbDUlThUEzW46mgkg5Qd5dw+Xa+kg=="",""organization"":""leo1311"",""dshashcode"":""1c4af13b9536b09e21b46ca87669db8c971373d2c28309cbfefa8ee62ce66a80"",""activetime"":""2024-09-19 10:09:15"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]},{""id"":""BlpIo"",""alias"":""CMDB Connection"",""name"":""Connection"",""classname"":""Connection"",""category"":""Connection"",""attributes"":{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-17 10:40:42"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""enchaT7yazcRUFUGmA2TOVaq1DYo8YKi5UC\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.191.31.130:3307/leapmaster_ref_data_7000\\""}"",""salt"":""yacEe5JJof8EagsTM7OMm6N3Rh1kcefxbIahC3bxz4QIf2RE6d1HtBiAdVo57ZcLYub48v/ECi4cvJyyObfjLw=="",""organization"":""leo1311"",""dshashcode"":""e7f5fbc464c56b299c78daa1257ae1b5ccdf50c59b2fd68012b9a384c52d5a17"",""activetime"":""2024-07-17 10:40:42"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false}},""position_x"":""582"",""position_y"":""179"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""WWUNM"",""elementPosition"":""TopCenter""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""connections"":""""},""codeGeneration"":{""requirements"":[],""imports"":[],""script"":""def Connection_<id>(connections_param={}):\\n    \\n    return connections_param\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""IUquv"",""alias"":""Dataset Extractor"",""name"":""Dataset Extractor"",""classname"":""DatasetExtractor"",""category"":""Extractor"",""attributes"":{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-17 11:25:11"",""alias"":""CMDB_CIs"",""id"":4336,""name"":""LEOCMDB_70792"",""description"":"""",""schema"":null,""schemajson"":null,""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT `ci_name`,`cmdb_ci_sys_id` FROM `cfm_configuration_item` WHERE `ctype` IN(\\\\nSELECT id FROM `cfm_configuration_item_type` WHERE `ctype` = 'Batch Job' AND project_id =2)\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-19 10:09:16"",""alias"":""leapmaster"",""id"":3,""name"":""leapmaster"",""description"":""leapmaster"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""encoRquqc4WeDawKr9m2ZObnh6GIoz+utbg\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_coredb\\""}"",""salt"":""5Cha+aeT0olRxwjf+yP55cnsvzxY5V6KMEHYl5E8kDiNxJse71hURRkxLhbDUlThUEzW46mgkg5Qd5dw+Xa+kg=="",""organization"":""leo1311"",""dshashcode"":""1c4af13b9536b09e21b46ca87669db8c971373d2c28309cbfefa8ee62ce66a80"",""activetime"":""2024-09-19 10:09:15"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},""position_x"":""374"",""position_y"":""180"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""oirmK"",""elementPosition"":""TopCenter""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""dataset"":[""dropdown""]},""codeGeneration"":{""REST"":{},""requirements"":[],""servicenow"":{},""imports"":[],""MYSQL"":{},""w"":{},""H2"":{},""MSSQL"":{},""AWS"":{},""POSTGRESQL"":{},""script"":""def DatasetExtractor_<id>(dataset_param={}):\\r    datasetName = dataset_param.get('alias',dataset_param.get('name'))\\r    extractortype = dataset_param['datasource'].get('type','')\\r    if extractortype == '':\\r        logger.error('Datasource Type mapping not found. Validate Dataset Extractor datasource mapping')\\r    logger.info('Extracting Dataset - {0} of type {1}'.format(datasetName, extractortype))\\r    datasetAttributes= dataset_param['attributes']\\r    if type(datasetAttributes) is str:\\r        datasetAttributes = json.loads(datasetAttributes)\\r    datasource = dataset_param['datasource']\\r    datasourceAttributes = json.loads(datasource['connectionDetails'])\\r    datasourceAttributes['salt'] = datasource.get('salt','')\\r    for item in datasourceAttributes.keys():\\r        if '_vault' not in item:\\r            from leaputils import Vault\\r            try:\\r                isvault=datasourceAttributes[item+'_vault']\\r                if isvault:\\r                    value = Vault.getPassword(datasourceAttributes[item+'_vault'])\\r                    datasourceAttributes[item] = value\\r            except:\\r                a=1\\r    datasetAttributes['schema'] = dataset_param.get('schema','')\\r    datasetAttributes['applySchema'] = False\\r\\r    extractor = ''\\r    import importlib.util\\r    #load from plugins path\\r    EXTRA_PLUGINS_PATH = os.environ.get('EXTRA_PLUGINS_PATH','')\\r    if not os.path.exists(EXTRA_PLUGINS_PATH) or EXTRA_PLUGINS_PATH =='':\\r        EXTRA_PLUGINS_PATH = '/root/plugins'\\r        logger.error('Please update environment variable - EXTRA_PLUGINS_PATH ')\\r    file_path = os.path.join(EXTRA_PLUGINS_PATH, 'extractors', f'{extractortype}.py')\\r    print('FilePath', file_path)\\r    \\r    spec = importlib.util.spec_from_file_location('Extractor', file_path)\\r    module = importlib.util.module_from_spec(spec)\\r    sys.modules['Extractor'] = module\\r    spec.loader.exec_module(module)\\r    class_name = extractortype  # ask user - className\\r    extractor = getattr(module, class_name)\\r    extractor = extractor(datasourceAttributes, datasetAttributes)\\r    if extractor == '':\\r        logger.error('No extractor configured for type {0}'.format(extractortype))\\r    dataset = extractor.getData()\\r    return dataset\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\n""},""context"":[]},{""id"":""oirmK"",""alias"":""Map CIs for Alerts"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""map_cmdb_ci"",""requirements"":"""",""params"":[],""script"":[""def map_cmdb_ci( predictions, cmdb_ci):    #python-script Data\\r    results = []\\r    for data in predictions:\\r        status = data['predicted_status']\\r        Job_TypeId  = data['Job_TypeId']\\r        #cmdb_ci = #find\\r        if 'fail' in status.lower():\\r            for row in cmdb_ci:\\r                if row['ci_name']==Job_TypeId:\\r                    data['cmdb_sys_id'] = row['cmdb_ci_sys_id']\\r        \\r        results.append(data)\\r    print(results)\\r    return results""]},""position_x"":""482"",""position_y"":""303"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""bGtDU"",""elementPosition"":""RightMiddle""},{""type"":""target"",""endpoint"":""dataset2"",""position"":""TopCenter"",""elementId"":""IUquv"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out1"",""position"":""RightMiddle"",""elementId"":""WWUNM"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""predict"",""requirements"":"""",""params"":[],""script"":[""import pandas as pd\\r\\rimport numpy as np\\r\\rimport sklearn\\r\\rfrom sklearn.model_selection import train_test_split\\r\\rimport matplotlib.pyplot as plt\\r\\rfrom sklearn.ensemble import RandomForestClassifier\\r\\rfrom sklearn.linear_model import LinearRegression\\r\\rfrom sklearn.metrics import accuracy_score, classification_report\\r\\rfrom sklearn.preprocessing import LabelEncoder\\r\\rimport pickle\\r\\rdef predict(dataset, model):\\r    print(dataset)\\r    print('Model:', model)\\r\\r    data = pd.DataFrame(dataset)\\r\\r    print(data.head())\\r    with open(model, 'rb') as f:\\r        trained_model = pickle.load(f)\\r\\r    \\r    # Encode the categorical values using LabelEncoder\\r    le1 = LabelEncoder()\\r\\r    data['Job_TypeId_idx'] = le1.fit_transform(data['Job_TypeId'])\\r    le2 = LabelEncoder()\\r    data['VM_Type_idx'] = le2.fit_transform(data['VM_Type'])\\r\\r    x_test = data[['Job_TypeId_idx', 'VM_Type_idx', 'No_of_Records']]\\r    y_pred = trained_model.predict(x_test)\\r    print(type(y_pred))\\r    final_data= {'Job_Id': data['Job_Id'], 'Job_TypeId': le1.inverse_transform(x_test['Job_TypeId_idx']), 'VM_Type': le2.inverse_transform(x_test['VM_Type_idx']), 'predicted_status': y_pred}\\r    final_data = pd.DataFrame(final_data)\\r    final_data= final_data.to_dict('records')\\r    \\r    return final_data""]},{""bucket"":""aiplatdev"",""key"":""JobStatusPrediction/models/job_status_prediction_model.pkl"",""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-06-05 09:10:02"",""alias"":""Nutanix"",""id"":24,""name"":""AIPNTNXH56520"",""description"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-06-05 09:10:02"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false}},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-16 11:53:29"",""alias"":""Job prediction dataset"",""id"":2098,""name"":""LEOJBPRD88066"",""description"":null,""schema"":null,""schemajson"":""\\""\\\\\\""null\\\\\\""\\"""",""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""select Job_Id,Job_TypeId, No_of_Records, VM_Type from @projectname_job_details where status is null\\"",\\""Cacheable\\"":false,\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""dashboard"":null,""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-10 04:41:15"",""alias"":""leo1311"",""id"":1,""name"":""leo1311"",""description"":""Local data for setup"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""U9^*;;wy\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_ref_data\\""}"",""salt"":""VMLPUfsZeWlWQuJfeJpQRH2ERYjv+HWsLegUy29uylAS/0RcWVjJfe4Rd0ViN4XXHMQFdKNCTSaL/i5wlqF0Eg=="",""organization"":""leo1311"",""dshashcode"":""8cc2f8e4547444ab347b51cf95de1bbdc7340dea81bfb39841805f51c1aeafe2"",""activetime"":""2024-09-10 04:41:14"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""metadata"":null,""modeltype"":null,""taskdetails"":""[]"",""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}},{""dataset"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-07-17 11:25:11"",""alias"":""CMDB_CIs"",""id"":4336,""name"":""LEOCMDB_70792"",""description"":"""",""schema"":null,""schemajson"":null,""attributes"":""{\\""filter\\"":\\""\\"",\\""mode\\"":\\""query\\"",\\""Query\\"":\\""SELECT `ci_name`,`cmdb_ci_sys_id` FROM `cfm_configuration_item` WHERE `ctype` IN(\\\\nSELECT id FROM `cfm_configuration_item_type` WHERE `ctype` = 'Batch Job' AND project_id =2)\\"",\\""isStreaming\\"":\\""false\\"",\\""defaultValues\\"":\\""\\"",\\""writeMode\\"":\\""append\\"",\\""params\\"":\\""{}\\"",\\""tableName\\"":\\""\\"",\\""uniqueIdentifier\\"":\\""\\""}"",""type"":""r"",""datasource"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-19 10:09:16"",""alias"":""leapmaster"",""id"":3,""name"":""leapmaster"",""description"":""leapmaster"",""type"":""MYSQL"",""connectionDetails"":""{\\""password\\"":\\""encoRquqc4WeDawKr9m2ZObnh6GIoz+utbg\\"",\\""userName\\"":\\""leapadm\\"",\\""url\\"":\\""jdbc:mysql://10.67.9.46:3307/leap_7000_coredb\\""}"",""salt"":""5Cha+aeT0olRxwjf+yP55cnsvzxY5V6KMEHYl5E8kDiNxJse71hURRkxLhbDUlThUEzW46mgkg5Qd5dw+Xa+kg=="",""organization"":""leo1311"",""dshashcode"":""1c4af13b9536b09e21b46ca87669db8c971373d2c28309cbfefa8ee62ce66a80"",""activetime"":""2024-09-19 10:09:15"",""category"":""SQL"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false},""backingDataset"":null,""organization"":""leo1311"",""expStatus"":null,""views"":""Table View"",""context"":null,""archivalConfig"":null,""isArchivalEnabled"":null,""isApprovalRequired"":false,""isPermissionManaged"":false,""isAuditRequired"":false,""isInboxRequired"":false,""dashboard"":null,""metadata"":null,""modeltype"":null,""taskdetails"":null,""tags"":""[]"",""interfacetype"":null,""adaptername"":null,""isadapteractive"":null,""indexname"":null,""summary"":null,""event_details"":null}}]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""}],""environment"":[{""name"":""InstallDeps"",""value"":""False""}],""default_runtime"":""{\\""dsAlias\\"":\\""Test-Python Environment\\"",\\""dsName\\"":\\""LEOTST-P74170\\"",\\""type\\"":\\""REMOTE\\""}""}","admin","Job Status Prediction","2024-10-16 06:18:24","LEOJBSTS17702","leo1311","DragNDropLite","446",NULL,"pipeline","{""442"":{""taskId"":""4a550d48-6ea4-4a31-bdc8-de93b743b350""}}","\0","0"
"admin","2024-05-08 10:50:41.369000","\0","Semantic Search OnPrem",\N,"{""elements"":[{""id"":""YSLOw"",""alias"":""Data Chunker"",""name"":""Data Chunker"",""classname"":""DataChunker"",""category"":""DataChunker"",""attributes"":{},""position_x"":""251"",""position_y"":""71"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""alnmZ"",""elementPosition"":""LeftMiddle""},{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""HwjpM"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import os\\r\\nfrom langchain_core.documents import Document\\r\\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\\r\\nimport base64\\r\\nimport requests\\r\\nimport moviepy.editor as mp  \\r\\nfrom pydub import AudioSegment\\r\\nimport json\\r\\nfrom typing import List, Optional, Union, Dict, Sequence, Any, Type\\r\\nfrom langchain_community.document_loaders.text import TextLoader\\r\\nfrom langchain_community.document_loaders.csv_loader import CSVLoader\\r\\nfrom langchain_community.document_loaders.unstructured import UnstructuredFileLoader\\r\\nfrom langchain_community.document_loaders.html_bs import BSHTMLLoader\\r\\nfrom pypdf import PdfReader\\r\\nimport base64\\r\\nimport boto3\\r\\nfrom langchain_community.chat_models.bedrock import BedrockChat\\r\\nimport json\\r\\nfrom langchain.schema.document import Document\\r\\nimport uuid\\r\\nimport logging \\r\\nlogger = logging.getLogger(__name__)\\r\\nlogger.setLevel(logging.DEBUG)\\r\\nhandler = logging.StreamHandler()\\r\\nformatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')\\r\\nhandler.setFormatter(formatter)\\r\\nlogger.addHandler(handler)\\r\\nFILE_LOADER_TYPE = Union[Type[UnstructuredFileLoader], Type[TextLoader], Type[CSVLoader],Type[BSHTMLLoader]\\r\\n                            ]\\r\\nclass DatasetChunkerConfig:\\r\\n    def __init__(self, config: Optional[Any]={}) -> None:        \\r\\n        self.encoding: Optional[str] = config.get('encoding','utf8')\\r\\n        self.autodetect_encoding: bool = config.get('autodetect_encoding',False)\\r\\n        self.password: Optional[Union[str, bytes]] = config.get('password',None)\\r\\n        self.headers: Optional[Dict] = config.get('headers',None)\\r\\n        self.extract_images: bool = config.get('extract_images',False)\\r\\n        self.source_column: str = config.get('source_column',None)\\r\\n        self.metadata_columns: Sequence[str] = config.get('metadata_columns',())\\r\\n        self.csv_args: Dict | None = config.get('csv_args',None)\\r\\n        self.mode: str = config.get('mode','single')\\r\\n        self.strategy: str = config.get('strategy','fast')\\r\\n        self.chunk_size: int = config.get('chunk_size',500)\\r\\n        self.chunk_overlap: int = config.get('chunk_overlap',50)\\r\\n        self.separators: List[str] = config.get('separators',None)\\r\\n        self.keep_separator: bool = config.get('keep_separator',True)\\r\\n        self.audio_chunk_size: int = config.get('audio_chunk_size', 60)\\r\\nclass DatasetChunker:   \\r\\n    \\""\\""\\""Chunk and split the data.    \\r\\n    Args:\\r\\n        file_path (str): Path of the file to load, \\r\\n        textloader:              \\r\\n            encoding (Optional,str): File encoding to use. If `None`, the file will be loaded with the default system encoding \\r\\n            autodetect_encoding (Optional,bool): Whether to try to autodetect the file encoding if the specified encoding fails\\r\\n        pdfloader:\\r\\n            password (Optional,[Union[str, bytes]]): Password for PyPDFLoader\\r\\n            headers (Optional,[Dict]): Header for PyPDFLoader\\r\\n            extract_images (Optional,bool): Extract image from pdf\\r\\n        csvloader:\\r\\n            source_column (Optional, str): The name of the column in the CSV file to use as the source\\r\\n            metadata_columns  (Optional,Sequence[str]): A sequence of column names to use as metadata\\r\\n            csv_args (Optonal, Dict): A dictionary of arguments to pass to the csv.DictReader              \\r\\n            encoding (Optional,str): File encoding to use. If `None`, the file will be loaded with the default system encoding \\r\\n            autodetect_encoding (Optional,bool): Whether to try to autodetect the file encoding if the specified encoding fails\\r\\n        markdown:\\r\\n            mode (Optional,str):  You can run the loader in one of two modes: \\""single\\"" and \\""elements\\"". If you use \\""single\\"" mode, the document will be returned as a single langchain Document object. If you use \\""elements\\"" mode, the unstructured library will split the document into elements such as Title and NarrativeText\\r\\n            strategy (Optional,str): strategy to chunk, default is\\""fast\\""        \\r\\n        splitdocs:\\r\\n            chunk_size (Optiona,int): Define chunk size for RecursiveCharacterTextSplitter\\r\\n            chunk_overlap (Optiona,int): Define chunk overlape for RecursiveCharacterTextSplitter\\r\\n            separators (Optional,List[str]): Define separators for RecursiveCharacterTextSplitter,\\r\\n            keep_separator (Optional,bool): Define keep_separator for RecursiveCharacterTextSplitter\\r\\n    Returns:        \\r\\n        List of splitted documents to be stored in vector dbs \\r\\n        documents: List[Document]\\r\\n    \\""\\""\\""\\r\\n    def __init__(self, metadata: dict) -> None:\\r\\n        self.file_path = metadata['source']\\r\\n        self.metadata = metadata\\r\\n    # Main function    \\r\\n    def chunk_data(self, config) -> List[Document]:\\r\\n        import os\\r\\n        '''\\r\\n            this function will chunk the data based on the config provided\\r\\n            return: List[Document]\\r\\n        '''\\r\\n        try:\\r\\n            allsplit_doc_list = list()\\r\\n            if config.extract_images:\\r\\n                loader = self.directory_loader(path=self.file_path,silent_errors=True,show_progress=True)\\r\\n                documents = loader.load()\\r\\n                del self.metadata['source']\\r\\n                final_document = self.document_with_metadata(documents, self.metadata)\\r\\n                allsplit_doc_list.extend(final_document)\\r\\n                for root, dirs, files in os.walk(self.file_path):\\r\\n                    for file in files:\\r\\n                        file_type = os.path.splitext(file)[1].lower()\\r\\n                        filename = os.path.join(root, file)\\r\\n                        if file_type == '.mp4'.strip().lower() :\\r\\n                            audio_file = self.audio_extractor(filename)\\r\\n                            chunker_folder = self.audio_chunker(audio_file, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe,file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()  \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)\\r\\n                        elif file_type.strip().lower() == '.mp3'.strip().lower():\\r\\n                            audio_file = self.mp3_converter(filename)\\r\\n                            chunker_folder = self.audio_chunker(audio_file, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe, file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()  \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)\\r\\n                        elif file_type.strip().lower() == '.wav'.strip().lower():                     \\r\\n                            chunker_folder = self.audio_chunker(filename, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe, file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()\\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)\\r\\n            else:\\r\\n\\r\\n                for subdir, dirs, files in os.walk(self.file_path):\\r\\n                    for file in files:\\r\\n                        filename = os.path.join(subdir, file)                \\r\\n                        file_type = self.checkfiletype(file_path=filename)  \\r\\n                        if file_type.strip().lower() == '.txt'.strip().lower():                                        \\r\\n                            loader = self.text_loader(file_path=filename, encoding=config.encoding, autodetect_encoding=config.autodetect_encoding)                \\r\\n                            documents = loader.load()\\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/')                     \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata)\\r\\n                            allsplit_doc_list.extend(final_document) \\r\\n                        elif file_type.strip().lower()  == '.pdf'.strip().lower() or file_type.strip().lower()  == '.ppt'.strip().lower()  or file_type.strip().lower() =='.pptx'.strip().lower()  or file_type.strip().lower() =='docx'.strip().lower() :\\r\\n                            if file_type=='.ppt'or file_type=='.pptx':\\r\\n                                import comtypes.client \\r\\n                                import pythoncom\\r\\n                                pythoncom.CoInitialize()\\r\\n                                powerpoint = comtypes.client.CreateObject(\\""Powerpoint.Application\\"")\\r\\n                                deck = powerpoint.Presentations.Open(filename)\\r\\n                                output_pdf_file = os.path.splitext(filename)[0] + \\"".pdf\\""\\r\\n                                deck.SaveAs(output_pdf_file, 32)\\r\\n                                deck.Close()\\r\\n                                powerpoint.Quit()\\r\\n                                os.remove(filename)\\r\\n                                base_name, _ = os.path.splitext(filename)\\r\\n                                filename=base_name +'.pdf'\\r\\n                            if file_type=='docx':\\r\\n                                from docx2pdf import convert\\r\\n                                import os\\r\\n                                convert(filename)\\r\\n                                os.remove(filename)\\r\\n                                base_name, _ = os.path.splitext(filename)\\r\\n                                filename=base_name +'.pdf'\\r\\n                            loader = self.pdf_loader(file_path=filename, password=config.password, headers=config.headers, extract_images=config.extract_images)\\r\\n                            documents = loader.load()  \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata)\\r\\n                            if config.extract_images:\\r\\n                                image_summary_document= self.get_images_summary(filename)\\r\\n                                final_document.extend(image_summary_document) \\r\\n                            allsplit_doc_list.extend(final_document)    \\r\\n                        elif file_type.strip().lower()  == '.csv'.strip().lower() :\\r\\n                            loader = self.csv_loader(file_path=filename, source_column=config.source_column, metadata_columns=config.metadata_columns, csv_args=config.csv_args, encoding=config.encoding, autodetect_encoding=config.autodetect_encoding)\\r\\n                            documents = loader.load() \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/')              \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata)               \\r\\n                            allsplit_doc_list.extend(final_document) \\r\\n                        elif file_type.strip().lower()  == '.md'.strip().lower() :\\r\\n                            loader = self.markdown_loader(file_path=filename, mode=config.mode, strategy=config.strategy)\\r\\n                            documents = loader.load()\\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/')               \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document) \\r\\n                        elif file_type.strip().lower() == '.mp4'.strip().lower():                \\r\\n                            audio_file = self.audio_extractor(filename)\\r\\n                            chunker_folder = self.audio_chunker(audio_file, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe,file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()  \\r\\n                            \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)\\r\\n                        elif file_type.strip().lower() == '.mp3'.strip().lower():\\r\\n                            audio_file = self.mp3_converter(filename)\\r\\n                            chunker_folder = self.audio_chunker(audio_file, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe, file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()  \\r\\n                            \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)  \\r\\n                        elif file_type.strip().lower() == '.wav'.strip().lower():                     \\r\\n                            chunker_folder = self.audio_chunker(filename, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe, file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()  \\r\\n                            \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)\\r\\n                            \\r\\n                        else:\\r\\n                            raise f'Currently {file_type} file type is not supported'\\r\\n            if allsplit_doc_list != None:\\r\\n                final_splitted_document = self.splitdocs(allsplit_doc_list, chunk_size=config.chunk_size, chunk_overlap=config.chunk_overlap, separators=config.separators, keep_separator=config.keep_separator)\\r\\n                return final_splitted_document        \\r\\n            # if final_document != None:\\r\\n            #     final_splitted_document = self.splitdocs(final_document, chunk_size=config.chunk_size, chunk_overlap=config.chunk_overlap, separators=config.separators, keep_separator=config.keep_separator)\\r\\n            #     return final_splitted_document        \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in chunk_data as',e)\\r\\n            raise e\\r\\n    # Helper functions\\r\\n    def get_imageSummary(self,base64_image):\\r\\n        from langchain_community.chat_models.bedrock import BedrockChat\\r\\n        ACCESS_ID=os.environ.get('app_aws_secret_access_id')\\r\\n        ACCESS_KEY=os.environ.get('app_aws_secret_access_key')\\r\\n        bedrock = boto3.client(service_name='bedrock-runtime',aws_access_key_id=ACCESS_ID,aws_secret_access_key=ACCESS_KEY,region_name='us-east-1',endpoint_url='https://bedrock-runtime.us-east-1.amazonaws.com')\\r\\n        modelId = 'anthropic.claude-3-sonnet-20240229-v1:0' # change this to use a different version from the model provider\\r\\n        chat = BedrockChat(model_id=modelId,\\r\\n                        client=bedrock,\\r\\n                        model_kwargs={\\r\\n                            'temperature': 0.1,\\r\\n                            'top_p': 0.1\\r\\n                        }\\r\\n                        )\\r\\n        prompt = \\""\\""\\""\\r\\n            Summarize all the details in the image, focus on the statistics provided in the image such as bar charts and graphs. \\r\\n            Make sure to include the time period in the summary, if available. For example, the images shows line graph showing data from 1993 to 2022.\\r\\n            \\""\\""\\""\\r\\n        content = [\\r\\n            {\\""type\\"": \\""text\\"", \\""text\\"": prompt},\\r\\n            {\\""type\\"": \\""image\\"", \\""source\\"": {\\""type\\"": \\""base64\\"", \\""media_type\\"": \\""image/png\\"", \\""data\\"": base64_image}}\\r\\n        ]\\r\\n        message_list = [\\r\\n            {\\r\\n                \\""role\\"": 'user',\\r\\n                \\""content\\"": content\\r\\n            }\\r\\n        ]\\r\\n        try:\\r\\n            msg = chat.invoke(message_list)\\r\\n            return msg.content  \\r\\n        except Exception as e:\\r\\n            logger.info(\\""got error in generating image summary from bedrock model\\"")\\r\\n            return 'Empty'\\r\\n    def get_images_summary(self,pdf_path):\\r\\n        from pypdf import PdfReader\\r\\n        import uuid\\r\\n        images_summary={}\\r\\n        image_summary_list=[]\\r\\n        reader = PdfReader(pdf_path)\\r\\n        for page in reader.pages:\\r\\n            for image in page.images:\\r\\n                base64_image= base64.b64encode(image.data).decode('utf-8')\\r\\n                image_summary= self.get_imageSummary(base64_image)\\r\\n                images_summary[image.name]=image_summary\\r\\n                image_summary_list.append(image_summary)      \\r\\n        img_ids = [str(uuid.uuid4()) for _ in image_summary_list]        \\r\\n        summary_img = [\\r\\n                Document(page_content=s, metadata={'doc_id': img_ids[i]})\\r\\n                for i, s in enumerate(image_summary_list)\\r\\n            ]  \\r\\n        return summary_img\\r\\n    def audio_transcriber(self, chunker_folder:str): \\r\\n        import whisper\\r\\n        import os\\r\\n        from whisper.utils import get_writer \\r\\n        flag = True\\r\\n        try:\\r\\n            input_directory = chunker_folder            \\r\\n            model = whisper.load_model('base')\\r\\n            for dirs, subdirs, files in os.walk(input_directory):  \\r\\n                output_directory = ''\\r\\n                for i, file_ in enumerate(files):\\r\\n                    if file_.endswith(('.wav', '.WAV')):\\r\\n                        file = os.path.join(dirs, file_)\\r\\n                        inputfile = file\\r\\n                        subdirs = dirs.split('\\\\\\\\')[-1]\\r\\n                        output_directory = os.path.join(input_directory,subdirs,'output')                    \\r\\n                        if not os.path.isdir(output_directory):\\r\\n                            os.makedirs(output_directory)\\r\\n                        filename = inputfile                        \\r\\n                        result = model.transcribe(filename)\\r\\n                        # Set some initial options values\\r\\n                        options = {\\r\\n                            'max_line_width': None,\\r\\n                            'max_line_count': None,\\r\\n                            'highlight_words': False\\r\\n                        }                    \\r\\n                        file_ = os.path.splitext(file_)[0]\\r\\n                        output_filename = os.path.join(output_directory, file_)                                    \\r\\n                        # Save as a JSON file\\r\\n                        json_writer = get_writer('json', output_directory)\\r\\n                        json_writer(result, output_filename, options)\\r\\n                return output_directory\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Transcriber as: ',e)\\r\\n            raise e\\r\\n    def mp3_converter(self, root_audio_file_path: str):\\r\\n        '''\\r\\n        This function will extract the audio from the video file\\r\\n        Args:\\r\\n            root_video_file_path: str\\r\\n        return: str\\r\\n        '''        \\r\\n        try:                \\r\\n            video_folder = os.path.dirname(root_audio_file_path)\\r\\n            audio_folder = video_folder+'/data/audios'\\r\\n            if not os.path.isdir(audio_folder):\\r\\n                os.makedirs(audio_folder)\\r\\n            # Load the video \\r\\n            sound = AudioSegment.from_mp3(root_audio_file_path)\\r\\n            filename = os.path.basename(root_audio_file_path)          \\r\\n            audio_file_name = audio_folder+'/'+os.path.splitext(filename)[0]+'.wav'   \\r\\n            sound.export(audio_file_name, format=\\""wav\\"")            \\r\\n            logger.info('Converted .mp3 Audio to .wav Audio : ',filename) \\r\\n            logger.info('mp3_converter executed successfully!')\\r\\n            return audio_file_name\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in mp3_converter as: ',e)\\r\\n            raise e\\r\\n    def GetTranscribeWithMetaData(self, output_directory, extension):\\r\\n        import pandas as pd        \\r\\n        videotranscripts_df = pd.DataFrame(columns=['Transcribe', 'start_time','end_time'])     \\r\\n        video_audio_name = output_directory.split(\\""\\\\\\\\\\"")[0].split('/')[-1]+extension\\r\\n        for dirs, subdirs, files in os.walk(output_directory):  \\r\\n            for file in files:\\r\\n                file_key = file\\r\\n                logger.info(\\""file_key===\\"",file_key)\\r\\n                if file_key.endswith('.json'):                     \\r\\n                    file_name = file_key\\r\\n                    with open(dirs+'/'+file_key) as f:\\r\\n                        file_content = f.read()                        \\r\\n                        json_content = json.loads(file_content)\\r\\n                    Transcribe = json_content['text'] \\r\\n                    if videotranscripts_df.empty:                                \\r\\n                        start_time = json_content['segments'][0]['start']\\r\\n                        end_time = json_content['segments'][-1]['end']                \\r\\n                        pre_end_time = end_time\\r\\n                    else:\\r\\n                        start_time = pre_end_time        \\r\\n                        end_time = pre_end_time + json_content['segments'][-1]['end']\\r\\n                        pre_end_time =  end_time               \\r\\n                    if video_audio_name.endswith(('.mp4','.MP4')):\\r\\n                        tempdf = pd.DataFrame({'Transcribe':Transcribe, 'start_time':start_time, 'end_time':end_time, 'file_name': file_name, 'video_name': video_audio_name}, index=[0])                        \\r\\n                    else:\\r\\n                        tempdf = pd.DataFrame({'Transcribe':Transcribe, 'start_time':start_time, 'end_time':end_time, 'file_name': file_name, 'audio_name': video_audio_name}, index=[0])    \\r\\n                    videotranscripts_df = pd.concat([videotranscripts_df, tempdf], ignore_index=True)\\r\\n        logger.info(\\""videotranscripts_df==\\"",videotranscripts_df)              \\r\\n        return videotranscripts_df\\r\\n    def checkfiletype(self, file_path: str) -> str:\\r\\n        '''\\r\\n        This function will check the file type and return the file type\\r\\n        Args:\\r\\n            file_path: str\\r\\n        return: str        \\r\\n        '''    \\r\\n        try:\\r\\n            extension = os.path.splitext(file_path)[1].lower()\\r\\n            self.type = extension\\r\\n            return self.type\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in checkfiletype as', e)\\r\\n            raise e\\r\\n    def document_with_metadata(self, documents: List[Document], metadata) -> List[Document]:\\r\\n        '''\\r\\n        This function will add the metadata to the document\\r\\n        Args:\\r\\n            documents: List[Document]\\r\\n            metadata: dict\\r\\n        return: List[Document]\\r\\n        '''   \\r\\n        try:     \\r\\n            for index, doc in enumerate(documents):\\r\\n                doc.metadata.update(metadata)  # Inject metadata directly into the document object\\r\\n            return documents\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in document_with_metadata as', e)\\r\\n            raise e\\r\\n    def text_loader(self, file_path : str ='', encoding : str = None, autodetect_encoding : bool = False) -> object:    \\r\\n        \\""\\""\\""\\r\\n        Args:\\r\\n            file_path: Path of the file to load.\\r\\n            encoding: File encoding to use. If `None`, the file will be loaded\\r\\n            with the default system encoding.\\r\\n            autodetect_encoding: Whether to try to autodetect the file encoding\\r\\n                if the specified encoding fails.\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain.document_loaders import TextLoader\\r\\n            loader = TextLoader(file_path=file_path, encoding=encoding, autodetect_encoding=autodetect_encoding)\\r\\n            return loader \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in text_loader as', e)\\r\\n            raise e\\r\\n    def pdf_loader(self, file_path : str ='', password: Optional[Union[str, bytes]] = None, headers: Optional[Dict] = None, extract_images: bool = False) -> object:\\r\\n        \\""\\""\\""\\r\\n        Load PDF using pypdf into list of documents.\\r\\n        Loader chunks by page and stores page numbers in metadata.\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.document_loaders import PyPDFLoader       \\r\\n            loader = PyPDFLoader(file_path=file_path, password=password, headers=headers, extract_images=extract_images)        \\r\\n            return loader        \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in pdf_loader as', e)\\r\\n            raise e\\r\\n    def csv_loader(self, file_path: str, source_column: Optional[str] = None, metadata_columns: Sequence[str] = (), csv_args: Optional[Dict] = None, encoding: Optional[str] = None, autodetect_encoding: bool = False):\\r\\n        \\""\\""\\""\\r\\n        Load a `CSV` file into a list of Documents.\\r\\n        Each document represents one row of the CSV file. Every row is converted into a\\r\\n        key/value pair and outputted to a new line in the document's page_content.\\r\\n        The source for each document loaded from csv is set to the value of the\\r\\n        `file_path` argument for all documents by default.\\r\\n        You can override this by setting the `source_column` argument to the\\r\\n        name of a column in the CSV file.\\r\\n        The source of each document will then be set to the value of the column\\r\\n        with the name specified in `source_column`.\\r\\n        Output Example:\\r\\n            .. code-block:: txt\\r\\n                column1: value1\\r\\n                column2: value2\\r\\n                column3: value3\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.document_loaders.csv_loader import CSVLoader\\r\\n            loader = CSVLoader(file_path=file_path, source_column=source_column, metadata_columns=metadata_columns, csv_args=csv_args,encoding=encoding, autodetect_encoding=autodetect_encoding)\\r\\n            return loader\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in csv_loader as', e)\\r\\n            raise e\\r\\n    def dataframe_loader(self, df, page_content_column: str = ''):\\r\\n        \\""\\""\\""Initialize with dataframe object.\\r\\n        Args:\\r\\n            data_frame: Pandas DataFrame object.\\r\\n            page_content_column: Name of the column containing the page content.\\r\\n              Defaults to \\""text\\"".\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.document_loaders.dataframe import DataFrameLoader\\r\\n            loader = DataFrameLoader(df, page_content_column=page_content_column)\\r\\n            return loader\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in dataframe_loader as', e)\\r\\n            raise e\\r\\n    def markdown_loader(self, file_path: str = '', mode: str = \\""single\\"", strategy: str=\\""fast\\""):\\r\\n        \\""\\""\\""Load `Markdown` files using `Unstructured`.\\r\\n        You can run the loader in one of two modes: \\""single\\"" and \\""elements\\"".\\r\\n        If you use \\""single\\"" mode, the document will be returned as a single\\r\\n        langchain Document object. If you use \\""elements\\"" mode, the unstructured\\r\\n        library will split the document into elements such as Title and NarrativeText.\\r\\n        You can pass in additional unstructured kwargs after mode to apply\\r\\n        different unstructured settings.\\r\\n        Examples\\r\\n        --------\\r\\n        from langchain_community.document_loaders import UnstructuredMarkdownLoader\\r\\n        loader = UnstructuredMarkdownLoader(\\r\\n            \\""example.md\\"", mode=\\""elements\\"", strategy=\\""fast\\"",\\r\\n        )\\r\\n        docs = loader.load()\\r\\n        References\\r\\n        ----------\\r\\n        https://unstructured-io.github.io/unstructured/core/partition.html#partition-md\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.document_loaders import UnstructuredMarkdownLoader\\r\\n            loader = UnstructuredMarkdownLoader(file_path=file_path, mode=mode, strategy=strategy)\\r\\n            return loader\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in markdown_loader as', e)\\r\\n            raise e\\r\\n    def string_loader(self, text_content: str, metadata: dict = {}):\\r\\n        '''\\r\\n        This function will convert the string into list of document object\\r\\n        Args:\\r\\n            text_content: str\\r\\n            metadata: dict\\r\\n        return: List[Document]         \\r\\n        '''\\r\\n        try:\\r\\n            from langchain.schema.document import Document\\r\\n            docs = [Document(page_content=text_content,metadata=metadata)]                \\r\\n            return docs\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in string_loader as', e)\\r\\n            raise e\\r\\n    def directory_loader(self, \\r\\n                         path: str,\\r\\n                         glob: str = \\""**/[!.]*\\"",\\r\\n                         silent_errors: bool = False,\\r\\n                         load_hidden: bool = False,\\r\\n                         loader_cls: FILE_LOADER_TYPE = UnstructuredFileLoader,\\r\\n                         loader_kwargs: Union[dict, None] = None,\\r\\n                         recursive: bool = False,\\r\\n                         show_progress: bool = False,\\r\\n                         use_multithreading: bool = False,\\r\\n                         max_concurrency: int = 4,                         \\r\\n                         sample_size: int = 0,\\r\\n                         randomize_sample: bool = False,\\r\\n                         sample_seed: Union[int, None] = None):\\r\\n        '''\\r\\n        This function will load the directory and return the list of document object\\r\\n        Args:\\r\\n            path: Path to directory.\\r\\n            glob: Glob pattern to use to find files. Defaults to \\""**/[!.]*\\""\\r\\n               (all files except hidden).\\r\\n            silent_errors: Whether to silently ignore errors. Defaults to False.\\r\\n            load_hidden: Whether to load hidden files. Defaults to False.\\r\\n            loader_cls: Loader class to use for loading files.\\r\\n              Defaults to UnstructuredFileLoader.\\r\\n            loader_kwargs: Keyword arguments to pass to loader_cls. Defaults to None.\\r\\n            recursive: Whether to recursively search for files. Defaults to False.\\r\\n            show_progress: Whether to show a progress bar. Defaults to False.\\r\\n            use_multithreading: Whether to use multithreading. Defaults to False.\\r\\n            max_concurrency: The maximum number of threads to use. Defaults to 4.\\r\\n            sample_size: The maximum number of files you would like to load from the\\r\\n                directory.\\r\\n            randomize_sample: Shuffle the files to get a random sample.\\r\\n            sample_seed: set the seed of the random shuffle for reproducibility.                \\r\\n        '''\\r\\n        try:\\r\\n            from langchain_community.document_loaders import DirectoryLoader\\r\\n            loader = DirectoryLoader(path = path,\\r\\n                                        glob = glob,\\r\\n                                        silent_errors = silent_errors,\\r\\n                                        load_hidden = load_hidden,\\r\\n                                        loader_cls = loader_cls,\\r\\n                                        loader_kwargs = loader_kwargs,\\r\\n                                        recursive = recursive,\\r\\n                                        show_progress = show_progress,\\r\\n                                        use_multithreading = use_multithreading,\\r\\n                                        max_concurrency = max_concurrency,                                    \\r\\n                                        sample_size = sample_size,\\r\\n                                        randomize_sample = randomize_sample,\\r\\n                                        sample_seed = sample_seed)        \\r\\n            return loader\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in directory_loader as', e)\\r\\n            raise e\\r\\n    def splitdocs(self, docs, chunk_size:int=50, chunk_overlap:int=10, separators:List[str]=None, keep_separator:bool=True):\\r\\n        '''\\r\\n        This function will split the document in to chunk size with overlap\\r\\n        Args:\\r\\n            docs: List[Document]\\r\\n            chunk_size: int\\r\\n            chunk_overlap: int\\r\\n            separators: List[str]\\r\\n            keep_separator: bool\\r\\n        return: List[Document]\\r\\n        '''\\r\\n        try:\\r\\n            text_splitter  = RecursiveCharacterTextSplitter(chunk_size=chunk_size,chunk_overlap=chunk_overlap,separators = separators,keep_separator=keep_separator)\\r\\n            splitted_doc = text_splitter.split_documents(docs)\\r\\n            return splitted_doc\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in splitdocs as', e)\\r\\n            raise e\\r\\n    def audio_extractor(self, root_video_file_path: str):\\r\\n        '''\\r\\n        This function will extract the audio from the video file\\r\\n        Args:\\r\\n            root_video_file_path: str\\r\\n        return: str\\r\\n        '''        \\r\\n        try:                \\r\\n            video_folder = os.path.dirname(root_video_file_path)\\r\\n            audio_folder = video_folder+'/data/audios'\\r\\n            if not os.path.isdir(audio_folder):\\r\\n                os.makedirs(audio_folder)\\r\\n            if root_video_file_path.endswith(('.mp4', '.MP4')):            \\r\\n                # Load the video \\r\\n                video = mp.VideoFileClip(root_video_file_path) \\r\\n                # Extract the audio from the video \\r\\n                audio_file = video.audio \\r\\n                filename = os.path.basename(root_video_file_path)          \\r\\n                audio_file_name = audio_folder+'/'+os.path.splitext(filename)[0]+'.wav'                  \\r\\n                audio_file.write_audiofile(audio_file_name) \\r\\n                logger.info('Extracted Audio from video : ',filename) \\r\\n            logger.info('AudioExtractor executed successfully!')\\r\\n            return audio_file_name\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in AudioExtractor as: ',e)\\r\\n            raise e\\r\\n    def audio_chunker(self, audio_file_name: str, chunk_size_param: int = 300):  \\r\\n        '''\\r\\n        This function will divide the audio into chunks of chunk_size_param\\r\\n        Args:\\r\\n            audio_file_name: str\\r\\n            chunk_size_param: int\\r\\n        return: str        \\r\\n        '''\\r\\n        try:\\r\\n            chunk_size = chunk_size_param      \\r\\n            '''Divide the audio file into chunk_size samples'''\\r\\n            f = AudioSegment.from_wav(audio_file_name)\\r\\n            j = 0\\r\\n            chunker_folder = os.path.splitext(audio_file_name)[0].replace('audios','chunks')\\r\\n            if not os.path.exists(chunker_folder):\\r\\n                os.makedirs(chunker_folder)\\r\\n            os.chdir(chunker_folder)\\r\\n            chunked_audio_file_name = os.path.basename(audio_file_name)\\r\\n            while len(f[:]) >= chunk_size * 1000:\\r\\n                chunk = f[:chunk_size * 1000]\\r\\n                chunk.export(chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j), format='wav')\\r\\n                logger.info('Padded file stored as ' + chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j))\\r\\n                f = f[chunk_size * 1000:]\\r\\n                j += 1\\r\\n            if 0 < len(f[:]) and len(f[:]) < chunk_size * 1000:\\r\\n                silent = AudioSegment.silent(duration=chunk_size * 1000)\\r\\n                paddedData = silent.overlay(f, position=0, times=1)\\r\\n                paddedData.export(chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j), format='wav')\\r\\n                logger.info('Padded file stored as ' + chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j))\\r\\n            os.chdir('../../')\\r\\n            logger.info('Chunker executed successfully!')\\r\\n            return chunker_folder\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Chunker as: ',e)\\r\\n            raise e\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[{}]},{""id"":""alnmZ"",""alias"":""Embedding Models"",""name"":""Embedding Models"",""classname"":""EmbeddingModels"",""category"":""EmbeddingModels"",""attributes"":{},""position_x"":""479"",""position_y"":""71"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""YSLOw"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""OATtZ"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""from typing import Optional,Any\\r\\nimport os\\r\\nimport logging as logger\\r\\nclass EmbeddingConfig:\\r\\n    def __init__(self,config_json:Optional[Any] = {}):\\r\\n        self.embedding_type:Optional[str]=config_json.get('embedding_type',\\""HuggingFace\\"")\\r\\n        self.model_name:Optional[str]=config_json.get('model_name',\\""sentence-transformers/all-MiniLM-L6-v2\\"")\\r\\n        self.azure_openai_api_key:Optional[str]=config_json.get('azure_openai_api_key',os.environ.get('app_openai_api_key'))\\r\\n        self.azure_openai_endpoint:Optional[str]=config_json.get('azure_openai_endpoint','https://azureft.openai.azure.com/')\\r\\n        self.azure_api_version:Optional[str]=config_json.get('azure_api_version','2023-03-15-preview')\\r\\n        self.azure_deployment:Optional[str]=config_json.get('azure_deployment','openaiada2')\\r\\n        self.openai_model:Optional[str]=config_json.get('openai_model','text-embedding-ada-002')\\r\\n        self.openai_api_base:Optional[str]=config_json.get('openai_api_base','https://azureft.openai.azure.com/')\\r\\n        self.openai_api_type:Optional[str]=config_json.get('openai_api_type','azure')\\r\\n        self.bedrock_access_id:Optional[str]=config_json.get('bedrock_access_id',os.environ.get('app_aws_secret_access_id'))\\r\\n        self.bedrock_access_key:Optional[str]=config_json.get('bedrock_access_key',os.environ.get('app_aws_secret_access_key'))\\r\\n        self.bedrock_region_name:Optional[str]=config_json.get('bedrock_region_name','us-east-1')\\r\\n        self.bedrock_endpoint_url:Optional[str]=config_json.get('bedrock_endpoint_url','https://bedrock-runtime.us-east-1.amazonaws.com')\\r\\n        self.bedrock_model_id:Optional[str]=config_json.get('bedrock_model_id','amazon.titan-embed-g1-text-02')\\r\\n        self.elastic_search_model_id:Optional[str]=config_json.get('elastic_search_model_id',None)\\r\\n        self.elastic_search_cloud_id:Optional[str]=config_json.get('elastic_search_cloud_id',None)\\r\\n        self.elastic_search_user_id:Optional[str]=config_json.get('elastic_search_user_id',None)\\r\\n        self.elastic_search_password:Optional[str]=config_json.get('elastic_search_password',None)\\r\\nclass EmbeddingModels:\\r\\n    def __init__(self) -> None:\\r\\n        pass\\r\\n    def get_embedding_function(self,config):\\r\\n        \\""\\""\\""Embedding Model Defination for vector db. We support FaissDB,chromadb,ElasticsearchDB, it's not required if you prepared your own vector db.\\r\\n        Args:\\r\\n            embedding_type(str): Type of Embedding to be used, We support HuggingFace, AzureOpenAI, Bedrock, ElasticSearch, Default is HuggingFace.\\r\\n            model_name(str): Model Name to generate the embedding according to your embedding type, Default is \\""sentence-transformers/all-MiniLM-L6-v2\\"".\\r\\n            AzureOpenAI_Params(str):azure_openai_api_key,\\r\\n                                    azure_openai_endpoint,\\r\\n                                    azure_api_version,\\r\\n                                    azure_deployment,\\r\\n                                    model_name= Open AI Embedding Model Name ,\\r\\n                                    openai_api_base,\\r\\n                                    openai_api_type\\r\\n            Bedrock_Params(str):bedrock_access_id,\\r\\n                                bedrock_access_key,\\r\\n                                bedrock_region_name,\\r\\n                                bedrock_endpoint_url,\\r\\n                                bedrock_model_id\\r\\n            ElasticSearch_Params(str):  elastic_search_model_id,\\r\\n                                        elastic_search_cloud_id,\\r\\n                                        elastic_search_user,\\r\\n                                        elastic_search_password\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            logger.info(config.azure_openai_api_key)\\r\\n            if config.embedding_type.strip().lower() == \\""huggingface\\"":\\r\\n                return self.HuggingFace(model_name=config.model_name)\\r\\n            elif config.embedding_type.strip().lower() == \\""azureopenai\\"":\\r\\n                return self.AzureOpenAI(azure_openai_api_key_param=config.azure_openai_api_key,azure_api_version_param=config.azure_api_version,azure_deployment_param=config.azure_deployment,model_param=config.model_name,openai_api_base_param=config.openai_api_base,openai_api_type_param=config.openai_api_type)\\r\\n            elif config.embedding_type.strip().lower() == \\""bedrock\\"":\\r\\n                return self.Bedrock(access_id_param=config.bedrock_access_id,access_key_param=config.bedrock_access_key,region_name_param=config.bedrock_region_name,endpoint_url_param=config.bedrock_endpoint_url,model_id_param=config.bedrock_model_id)\\r\\n            elif config.embedding_type.strip().lower() == \\""elasticsearch\\"":\\r\\n                return self.ElasticSearch(elastic_model_id_param=config.elastic_search_model_id,es_cloud_id_param=config.elastic_search_cloud_id,es_user_param=config.elastic_search_user,es_password_param=config.elastic_search_password)\\r\\n            else:\\r\\n                raise Exception(\\""Unknown embedding type, we support only ElasticSearch, Bedrock, AzureOpenAI, and HuggingFace\\"")\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_embedding_function',e)\\r\\n            raise e\\r\\n    def HuggingFace(self,model_name:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings import HuggingFaceEmbeddings\\r\\n            embeddings = HuggingFaceEmbeddings(\\r\\n                    model_name=model_name\\r\\n            )\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in HuggingFace', e)\\r\\n            raise e\\r\\n    def AzureOpenAI(self,azure_openai_api_key_param:str='',azure_api_version_param:str='',azure_deployment_param:str='',model_param:str='',openai_api_base_param:str='',openai_api_type_param:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings import AzureOpenAIEmbeddings\\r\\n            embeddings = AzureOpenAIEmbeddings(api_key=azure_openai_api_key_param,api_version=azure_api_version_param,azure_deployment=azure_deployment_param,model=model_param,openai_api_type=openai_api_type_param,base_url=openai_api_base_param)\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in AzureOpenAI', e)\\r\\n            raise e\\r\\n    def Bedrock(self,access_id_param:str='',access_key_param:str='',region_name_param:str='',endpoint_url_param:str='',model_id_param:str=''):\\r\\n        try:\\r\\n            import boto3\\r\\n            from langchain.embeddings import BedrockEmbeddings\\r\\n            bedrock = boto3.client('bedrock-runtime',aws_access_key_id=access_id_param,aws_secret_access_key=access_key_param,region_name=region_name_param,endpoint_url=endpoint_url_param)\\r\\n            embeddings = BedrockEmbeddings(\\r\\n                model_id=model_id_param, \\r\\n                client=bedrock\\r\\n            )\\r\\n            embeddings\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Bedrock', e)\\r\\n            raise e\\r\\n    def Elastic_search(self,model_id_param:str='',es_cloud_id_param:str='',es_user_param:str='',es_password_param:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings.elasticsearch import ElasticsearchEmbeddings\\r\\n            embeddings = ElasticsearchEmbeddings.from_credentials(\\r\\n                model_id=model_id_param,\\r\\n                es_cloud_id=es_cloud_id_param,\\r\\n                es_user=es_user_param,\\r\\n                es_password=es_password_param,\\r\\n            )\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Elastic_search', e)\\r\\n            raise e\\n""},""context"":[{},{}]},{""id"":""OATtZ"",""alias"":""Vector Store"",""name"":""Vector Store"",""classname"":""VectorStore"",""category"":""VectorStore"",""attributes"":{},""position_x"":""738"",""position_y"":""71"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""alnmZ"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import os\\r\\nfrom typing import List,Optional,Any\\r\\nimport logging as logger\\r\\nclass VectorConfig:\\r\\n    def __init__(self,config_json:Optional[Any]={}) :\\r\\n        self.DB_Type : Optional[str] = config_json.get('DB_Type',\\""Faiss\\"")\\r\\n        self.elastic_search_url : str = config_json.get('elastic_search_url',os.environ.get('app_elastic_search_url'))\\r\\n        self.index_name : Optional[str] = config_json.get('index_name',\\""Vector_Store\\"")\\r\\n        self.qdrant_url : Optional[str] = config_json.get('qdrant_url',os.environ.get('app_qdrant_url'))\\r\\n        self.force_recreate : Optional[bool] = config_json.get('force_recreate',False)\\r\\nclass VectorStore:      \\r\\n    def __init__(self,embedding,docs) -> None:\\r\\n        self.embedding_function = embedding\\r\\n        self.docs = docs\\r\\n    def SaveEmbedding(self,config:dict):\\r\\n        \\""\\""\\""Store Embeddings In vector db. We support FaissDB,chromadb,ElasticsearchDB, it's not required if you prepared your own vector db.\\r\\n        Args:\\r\\n            DB_Type (str): The type of vector store to be used available options are Elasticsearch,Faiss,Chroma .\\r\\n            embedding_function (Callable): the embedding function to use.\\r\\n            docs(list[Document]): List of splitted text that has to be stored in vector DB.        \\r\\n            elastic_search_url(str): Elastic Search hosted URL \\r\\n            index_name(str): The Index Name Default is \\""Vector_Store\\"".\\r\\n            qdrant_url(str): qdrant URL \\r\\n            force_recreate(bool): Create new index, If it exists it will delete and create new index while it is True, If False, It will append the existing Index and if index is not present will create new Index.\\r\\n                                    Default is False.\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            # logger.info(config.persist_directory)\\r\\n            if config.DB_Type.strip().lower() == 'faiss':\\r\\n                return self.FaissDB(embedding_function=self.embedding_function,docs=self.docs,persist_directory=\\""/temp/faiss_db/\\""+config.index_name)\\r\\n            elif config.DB_Type.strip().lower() == 'chroma':\\r\\n                return self.ChromaDB(embedding_function=self.embedding_function,docs=self.docs,persist_directory=\\""/temp/chroma_db/\\""+config.index_name)\\r\\n            elif config.DB_Type.strip().lower() == 'elasticsearch':\\r\\n                return self.ElasticsearchDB(embedding=self.embedding_function, docs=self.docs, es_url=config.elastic_search_url, index_name=config.index_name)\\r\\n            elif config.DB_Type.strip().lower() == 'qdrant':\\r\\n                return self.Qdrant(embeddings=self.embedding_function,texts=self.docs,url=config.qdrant_url,collection_name=config.index_name,force_recreate=config.force_recreate)\\r\\n            else:\\r\\n                logger.info('Unsupported VectorStore type)')\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in SaveEmbedding',e)\\r\\n            raise e\\r\\n        \\r\\n    def FaissDB(self,embedding_function:Any=None,docs:Any=None,persist_directory:str=''):\\r\\n        try:\\r\\n            from langchain.vectorstores import FAISS\\r\\n            faiss_db = FAISS.from_documents(docs, embedding_function)                    \\r\\n            if os.path.exists(persist_directory):\\r\\n                local_db = FAISS.load_local(persist_directory, embedding_function,allow_dangerous_deserialization=True)\\r\\n                local_db.merge_from(faiss_db)\\r\\n                local_db.save_local(persist_directory)\\r\\n            else:\\r\\n                faiss_db.save_local(persist_directory)\\r\\n            return \\""Completed\\""\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in FaissDB', e)\\r\\n            raise e\\r\\n        \\r\\n    def ChromaDB(self,embedding_function:Any=None,docs:Any=None, persist_directory:str=None):\\r\\n        try:\\r\\n            from langchain.vectorstores import Chroma\\r\\n            db = Chroma.from_documents(documents=docs, embedding=embedding_function, persist_directory=persist_directory)\\r\\n            return \\""Completed\\""\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in ChromaDB', e)\\r\\n            raise e\\r\\n        \\r\\n    def ElasticsearchDB(self, embedding:Any=None, docs:Any=None, es_url:str='', index_name:str=\\""Vector_Store\\""):   \\r\\n        try:     \\r\\n            from langchain.vectorstores import ElasticVectorSearch       \\r\\n            db = ElasticVectorSearch(elasticsearch_url=es_url, index_name=index_name, embedding=embedding)        \\r\\n            db.add_documents(docs)        \\r\\n            return \\""Completed\\""\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in ElasticsearchDB', e)\\r\\n            raise e\\r\\n        \\r\\n    def Qdrant(self,embeddings:Any=None,texts:str='',url:str='',collection_name:str='',force_recreate:bool=False):\\r\\n        try:\\r\\n            from langchain.vectorstores import Qdrant\\r\\n            qdrant = Qdrant.from_documents(\\r\\n            texts,\\r\\n            embeddings,\\r\\n            url= url,\\r\\n            collection_name=collection_name,\\r\\n            force_recreate=force_recreate,\\r\\n            )\\r\\n            return \\""Completed\\""\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Qdrant', e)\\r\\n            raise e \\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[{},{},{}]},{""id"":""FsrZi"",""alias"":""Query VectorDB"",""name"":""Query VectorDB"",""classname"":""QueryVectorDB"",""category"":""QueryVectorDB"",""attributes"":{},""position_x"":""303"",""position_y"":""356"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""AwSRT"",""elementPosition"":""LeftMiddle""},{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""uinAn"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import os\\r\\nfrom typing import List,Optional,Dict,Union,Sequence,Any\\r\\nimport logging as logger\\r\\nclass VectordbConfig:\\r\\n    def __init__(self,config_json:Optional[Any]={}) :\\r\\n        self.DB_Type : Optional[str] = config_json.get('DB_Type',\\""Faiss\\"")\\r\\n        self.elastic_search_url : str = config_json.get('elastic_search_url',os.environ.get('app_elastic_search_url'))\\r\\n        self.index_name : Optional[str] = config_json.get('index_name',\\""Vector_Store\\"")\\r\\n        self.qdrant_url : Optional[str] = config_json.get('qdrant_url',os.environ.get('app_qdrant_url'))\\r\\n        self.force_recreate : Optional[bool] = config_json.get('force_recreate',False)\\r\\n        self.query : Optional[str] = config_json.get('query',\\""Hi, How are you?\\"")\\r\\n        self.k : Optional[int] = config_json.get('k',4)\\r\\n        \\r\\nclass QueryVectorDB:\\r\\n    def __init__(self,embedding) -> None:\\r\\n        self.embeddings = embedding\\r\\n    \\r\\n    def get_similar_docs(self,config):\\r\\n        \\""\\""\\""`Meta Faiss` vector store.\\r\\n        To use, you must have the ``faiss`` python package installed.\\r\\n        Example:\\r\\n            .. code-block:: python\\r\\n                from langchain_community.embeddings.openai import OpenAIEmbeddings\\r\\n                from langchain_community.vectorstores import FAISS\\r\\n                embeddings = OpenAIEmbeddings()\\r\\n                texts = [\\""FAISS is an important library\\"", \\""LangChain supports FAISS\\""]\\r\\n                faiss = FAISS.from_texts(texts, embeddings)\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            if config.DB_Type.lower() == 'faiss':\\r\\n                return self.get_similar_docs_faiss_db(embeddings=self.embeddings,persist_directory='/temp/faiss_db/'+config.index_name,query=config.query,k=config.k)                \\r\\n            elif config.DB_Type.lower() == 'chroma':  \\r\\n                return self.get_similar_docs_chroma_db(embeddings=self.embeddings,persist_directory='/temp/chroma_db/'+config.index_name,query=config.query,k=config.k)        \\r\\n            elif config.DB_Type.lower() == 'elasticsearch':                   \\r\\n                return self.get_similar_docs_elastic_db(embeddings=self.embeddings,docs=self.docs,es_url=config.elastic_search_url,index_name=config.index_name,query=config.query,k=config.k)\\t\\t    \\r\\n            elif config.DB_Type.lower() == 'qdrant':      \\r\\n                return self.get_similar_docs_qdrant_db(embeddings=self.embeddings,qdrant_url=config.qdrant_url,collection_name=config.index_name,query=config.query,k=config.k)\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_similar_docs', e)\\r\\n            raise e\\r\\n        \\r\\n    def get_similar_docs_chroma_db(self,embeddings:Any=None,persist_directory:str=\\""\\"",query:str='',k:int=None):\\r\\n        \\""\\""\\""`ChromaDB` vector store.\\r\\n        To use, you should have the ``chromadb`` python package installed.\\r\\n        Example:\\r\\n        .. code-block:: python\\r\\n        from langchain_community.vectorstores import Chroma\\r\\n        from langchain_community.embeddings.openai import OpenAIEmbeddings\\r\\n        embeddings = OpenAIEmbeddings()\\r\\n        vectorstore = Chroma(\\""langchain_store\\"", embeddings)\\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.vectorstores import Chroma\\r\\n            db3 = Chroma(persist_directory=persist_directory, embeddings=embeddings)\\r\\n            docs = db3.similarity_search(query,k=k)\\r\\n            \\r\\n            return docs\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_similar_docs_chroma_db', e)\\r\\n            raise e\\r\\n    def get_similar_docs_faiss_db(self,embeddings:Any=None,persist_directory:str=\\""\\"",query:str='',k:int=None):   \\r\\n        try:     \\r\\n            from langchain.vectorstores import FAISS\\r\\n            db = FAISS.load_local(persist_directory, embeddings,allow_dangerous_deserialization=True)\\r\\n            docs = db.similarity_search(query,k=k)\\r\\n            \\r\\n            return docs\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_similar_docs_faiss_db', e)\\r\\n            raise e\\r\\n    def get_similar_docs_qdrant_db(self,qdrant_url:str='',embeddings:Any='',query:str='',collection_name:str='',k:int=None):\\r\\n        \\""\\""\\""\\r\\n        QdrantvectorDb\\r\\n        Args:[]\\r\\n            embeddings=self.embeddings, # Vector embeddings to use for similarity search\\r\\n            qdrant_url=config.qdrant_url, # URL of Qdrant search server \\r\\n            collection_name=config.index_name, # Name of indexed document collection in Qdrant \\r\\n            query=config.query # Search query text to find similar documents for\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from qdrant_client import QdrantClient\\r\\n            \\r\\n            client = QdrantClient(url=qdrant_url)\\r\\n            if 'HuggingFaceEmbeddings' in str(type(embeddings)):\\r\\n                from sentence_transformers import SentenceTransformer\\r\\n                model=embeddings.model_name\\r\\n                name=model.split('/')\\r\\n                encoder = SentenceTransformer(name[1])\\r\\n                query_vector=encoder.encode(query).tolist()\\r\\n            elif 'AzureOpenAIEmbeddings' in str(type(embeddings)):\\r\\n                \\r\\n                import openai\\r\\n                model=embeddings.deployment\\r\\n                openai.api_key = embeddings.openai_api_key\\r\\n                openai.api_version = embeddings.openai_api_version\\r\\n                openai.api_type = embeddings.openai_api_type\\r\\n                openai.api_base = embeddings.openai_api_base\\r\\n                query_vector = openai.Embedding.create(\\r\\n                engine = model,\\r\\n                input=query,\\r\\n                model=embeddings.model,\\r\\n        )['data'][0]['embedding']\\r\\n            elif 'BedrockEmbeddings' in str(type(embeddings)):\\r\\n                import json\\r\\n                model_id = embeddings.model_id\\r\\n                bedrock = embeddings.client\\r\\n                input_text = query\\r\\n                body = json.dumps({\\r\\n                    \\""inputText\\"": input_text\\r\\n                    })\\r\\n                accept = \\""application/json\\""\\r\\n                content_type = \\""application/json\\""\\r\\n                query_vector = bedrock.invoke_model(\\r\\n                    body=body, modelId=model_id, accept=accept, contentType=content_type\\r\\n                )\\r\\n                query_vector = json.loads(query_vector.get('body').read())['embedding']\\r\\n            hits = client.search(collection_name=collection_name,query_vector=query_vector,limit=k)\\r\\n            l=[]\\r\\n            for hit in hits:\\r\\n                l.append(hit.payload)        \\r\\n            \\r\\n            return l\\r\\n        except Exception as e:  \\r\\n            logger.info('Exception in get_similar_docs_qdrant_db', e)\\r\\n            raise e\\r\\n        \\r\\n    def get_similar_docs_elastic_db(self,embeddings:Any=None,docs:Any=None,query:str='',es_url=\\""\\"",index_name=\\""\\"",k:int=None):\\r\\n        \\""\\""\\""`Elasticsearch` vector store.\\r\\n        Args:\\r\\n            index_name: Name of the Elasticsearch index to create.\\r\\n            es_url: URL of the Elasticsearch instance to connect to.\\r\\n            cloud_id: Cloud ID of the Elasticsearch instance to connect to.\\r\\n            es_user: Username to use when connecting to Elasticsearch.\\r\\n            es_password: Password to use when connecting to Elasticsearch.\\r\\n            es_api_key: API key to use when connecting to Elasticsearch.\\r\\n            es_connection: Optional pre-existing Elasticsearch connection.\\r\\n            vector_query_field: Optional. Name of the field to store\\r\\n                                the embedding vectors in.\\r\\n            query_field: Optional. Name of the field to store the texts in.\\r\\n            strategy: Optional. Retrieval strategy to use when searching the index.\\r\\n                        Defaults to ApproxRetrievalStrategy. Can be one of\\r\\n                        ExactRetrievalStrategy, ApproxRetrievalStrategy,\\r\\n                        or SparseRetrievalStrategy.\\r\\n            distance_strategy: Optional. Distance strategy to use when\\r\\n                                searching the index.\\r\\n                                Defaults to COSINE. Can be one of COSINE,\\r\\n                                    EUCLIDEAN_DISTANCE, or DOT_PRODUCT. \\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.vectorstores import ElasticsearchStore\\r\\n            db = ElasticsearchStore.from_documents(\\r\\n            docs,\\r\\n            embeddings,\\r\\n            es_url=es_url,\\r\\n            index_name=index_name,\\r\\n            )\\r\\n            db.client.indices.refresh(index=index_name)\\r\\n            results = db.similarity_search(query,k=k)            \\r\\n            return results\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_similar_docs_elastic_db', e)\\r\\n            raise e\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[{}]},{""id"":""AwSRT"",""alias"":""LLM Infer"",""name"":""LLM Infer"",""classname"":""LLM Infer"",""category"":""LLMInfer"",""attributes"":{},""position_x"":""567"",""position_y"":""356"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""FsrZi"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import os\\r\\nfrom typing import List,Optional,Dict,Union,Sequence,Any\\r\\nimport json\\r\\nimport requests\\r\\nimport logging as logger\\r\\nclass LLMInferenceConfig:\\r\\n    def __init__(self,config_json:Optional[Any]={}):\\r\\n        self.LLM_Type : Optional[str] = config_json.get('LLM_Type',\\""OnPrem\\"")\\r\\n        self.prompt_template : Optional[str] = config_json.get('prompt_template','Answer the query asked by user based on the given Context below.')\\r\\n        self.model_url : Optional[str] = config_json.get('url',\\""https://itgateway.infosys.com/ai-platform/mxtral-aic/v1/language/generate\\"")\\r\\n        self.falcon_url : Optional[str] = config_json.get('falcon_url',os.environ.get('app_falcon_url'))\\r\\n        self.max_tokens : Optional[int] = config_json.get('max_tokens',2000)\\r\\n        self.top_k :  Optional[int] = config_json.get('top_k',5)\\r\\n        self.top_p :  Optional[float] = config_json.get('top_p',0.25)\\r\\n        self.typical_p : Optional[float] = config_json.get('typical_p',0.25)\\r\\n        self.temperature : Optional[float] = config_json.get('temperature',0)\\r\\n        self.repetition_penalty : Optional[float] = config_json.get('repetition_penalty',None)\\r\\n        self.api_type : Optional[str] = config_json.get('api_type',\\""azure\\"")\\r\\n        self.api_base : Optional[str] = config_json.get('api_base',\\""https://azureft.openai.azure.com/\\"") \\r\\n        self.api_version : Optional[str] = config_json.get('api_version',\\""2023-03-15-preview\\"")\\r\\n        self.api_key : Optional[str] = config_json.get('api_key',os.environ.get('app_openai_api_key'))\\r\\n        self.stop : Optional[str] = config_json.get('stop',\\""\\"")\\r\\n        self.service_name : Optional[str] = config_json.get('service_name','bedrock-runtime')\\r\\n        self.aws_access_key_id : Optional[str] = config_json.get('aws_access_key_id',os.environ.get('app_aws_secret_access_id'))\\r\\n        self.aws_secret_access_key : Optional[str] = config_json.get('aws_secret_access_key',os.environ.get('app_aws_secret_access_key'))\\r\\n        self.region_name : Optional[str] = config_json.get('region_name','us-east-1')\\r\\n        self.endpoint_url : Optional[str] = config_json.get('endpoint_url','https://bedrock-runtime.us-east-1.amazonaws.com')\\r\\n        self.model_id : Optional[str] = config_json.get('model_id','anthropic.claude-v2')\\r\\n        self.query : Optional[str] = config_json.get('query',\\""Hi\\"")\\r\\n        self.engine : Optional[str] = config_json.get('engine','gtp35turbo')\\r\\n        self.client_id : Optional[str] = config_json.get('client_id',os.environ.get('app_client_id'))\\r\\n        self.client_secret : Optional[str] = config_json.get('client_secret',os.environ.get('app_client_secret'))\\r\\n        \\r\\n\\r\\nclass LLMInference:\\r\\n    def __init__(self, context):\\r\\n        self.context = context\\r\\n    \\r\\n    def Query_LLM(self,config):\\r\\n        ''' \\r\\n        Falcon40b model\\r\\n        args[]\\r\\n            prompt_template:  # Prompt template string to prepend before the input context, question and parameters\\r\\n            falcon_40b_model_url:  # URL of the Falcon 4.0b model to use\\r\\n            context:  # Context string to provide background for answering the question\\r\\n            question:  # Question string to get an answer for\\r\\n            max_tokens:  # Maximum number of tokens to generate in the answer\\r\\n            top_k:  # Sample from the top k tokens, overrides typical_p if set\\r\\n            top_p:  # Sample from the smallest possible set of tokens whose cumulative probability exceeds the probability top_p, overrides top_k if set\\r\\n            typical_p:  # Typical sampling probability, overrides top_p if set\\r\\n            temperature:  # Randomness of the sampling, higher values means more random, overrides typical_p if set\\r\\n            repetition_penalty:  # Penalty for repetitive phrases, higher values mean more diversity \\r\\n        '''\\r\\n        try:\\r\\n            if config.LLM_Type.strip().lower() == 'falcon':\\r\\n                return self.OnPrem(context=self.context,prompt_template=config.prompt_template,falcon_40b_model_url = config.falcon_url,question=config.query,max_tokens=config.max_tokens,top_k=config.top_k,top_p=config.top_p,typical_p=config.typical_p,temperature=config.temperature,repetition_penalty=config.repetition_penalty)\\r\\n            elif config.LLM_Type.strip().lower() == 'onprem':\\r\\n                return self.Mixtral(prompt_template=config.prompt_template,context=self.context,Mixtral_model_url = config.model_url,question=config.query,max_tokens=config.max_tokens,top_k=config.top_k,top_p=config.top_p,typical_p=config.typical_p,temperature=config.temperature,repetition_penalty=config.repetition_penalty,client_id=config.client_id,client_secret=config.client_secret)\\r\\n\\r\\n            elif config.LLM_Type.strip().lower() == 'azureopenai':\\r\\n                '''\\r\\n                Openaimodel\\r\\n                args[]\\r\\n                engine: # Specify the AI engine/model to use for text generation\\r\\n                prompt_template:  # Prompt template string to prepend before the input context and question\\r\\n                context:  # Context string providing background information to inform the answer\\r\\n                question:  # Question string specifying the actual question to get an answer for\\r\\n                api_type:  # The type of API if using an API-based text generation engine, e.g. 'OpenAI'  \\r\\n                api_base:  # Base URL endpoint if using an API-based text generation engine \\r\\n                api_version:   # API version, e.g. 'v1'\\r\\n                api_key:  # API key for authentication if using an API-based text generation engine\\r\\n                temperature:  # Float value controlling randomness/creativity of text generation\\r\\n                max_tokens:  # Maximum number of tokens to generate in the answer\\r\\n                stop: s # String sequence to stop further text generation\\r\\n                '''        \\r\\n                return self.AzureOpenai(engine=config.engine,prompt_template=config.prompt_template,context=self.context,question=config.query,api_type=config.api_type,api_base=config.api_base,api_version=config.api_version,api_key=config.api_key,temperature=config.temperature, max_tokens=config.max_tokens, stop=config.stop, top_p=config.top_p)\\r\\n            elif config.LLM_Type.lower() == 'bedrock':\\r\\n                return self.Bedrock(service_name=config.service_name,prompt_template=config.prompt_template,question=config.query,context=self.context,aws_access_key_id=config.aws_access_key_id,aws_secret_access_key=config.aws_secret_access_key,region_name=config.region_name,endpoint_url=config.endpoint_url,temperature=config.temperature, max_tokens=config.max_tokens, top_p=config.top_p,modelId=config.model_id)\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Query_LLM as',e)\\r\\n            raise e\\r\\n    def Mixtral(self, prompt_template:str='',Mixtral_model_url:str='',context:str='', question:str='',max_tokens:float=None, top_k:float=None, top_p:float=None, typical_p:float=None, temperature:float=None, repetition_penalty: float=None,client_id:str='',client_secret:str=''):\\r\\n        def generate_token():\\r\\n            url='https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\n            headers={\\r\\n                \\""Content-Type\\"": \\""application/x-www-form-urlencoded\\"",\\r\\n                \\""Cookie\\"":\\""fpc=Akan455tw-pPuiXfSA1sz_fwGWPkAQAAAO7xkNwOAAAA; stsservicecookie=estsfd; x-ms-gateway-slice=estsfd; fpc=Akan455tw-pPuiXfSA1sz_eqfEQzAQAAAF04ktwOAAAAEWQ-MAEAAADuOJLcDgAAAExTSTMBAAAADzmS3A4AAAA; x-ms-gateway-slice=estsfd; fpc=AjRjfSpYATNGtUVf3IhQhQ71dL7bAQAAANrZid0OAAAA\\""\\r\\n            }\\r\\n            data={\\r\\n                \\""client_id\\"":client_id,\\r\\n                \\""client_secret\\"":client_secret,\\r\\n                \\""grant_type\\"":\\""client_credentials\\"",\\r\\n                \\""scope\\"":\\""b3490b10-6bd3-4f66-908d-fa1950e46598/.default\\""\\r\\n            }\\r\\n            response = requests.request('POST', url, headers=headers, data=data, verify=False)\\r\\n            \\r\\n            return json.loads(response.text)[\\""access_token\\""]\\r\\n        token=generate_token()\\r\\n        auth=f'Bearer {token}'\\r\\n        generated_answer = ''\\r\\n        input_prompt = f'''{prompt_template} \\\\\\\\n\\\\\\\\nContext: '{context}'. \\\\\\\\n\\\\\\\\nQuestion: {question}. \\\\\\\\n\\\\\\\\nAnswer:'''\\r\\n        payload = json.dumps({\\r\\n        'inputs': [input_prompt],\\r\\n        'parameters': {\\r\\n                'max_new_tokens': max_tokens\\r\\n            }\\r\\n        })\\r\\n        \\r\\n        headers = {\\r\\n            'Content-Type':'application/json', \\r\\n            'Authorization' : auth\\r\\n\\r\\n        }\\r\\n        \\r\\n        response = requests.request('POST', Mixtral_model_url, headers=headers, data=payload, verify=False)\\r\\n        \\r\\n        generated_answer = json.loads(response.text)\\r\\n        generated_answer=generated_answer['generated_text']\\r\\n        return generated_answer   \\r\\n    def OnPrem(self, prompt_template:str='',falcon_40b_model_url:str='',context:str='', question:str='',max_tokens:float=None, top_k:float=None, top_p:float=None, typical_p:float=None, temperature:float=None, repetition_penalty: float=None):\\r\\n        try:\\r\\n            generated_answer = ''\\r\\n            input_prompt = f'''{prompt_template} \\\\\\\\n\\\\\\\\nContext: '{context}'. \\\\\\\\n\\\\\\\\nQuestion: {question}. \\\\\\\\n\\\\\\\\nAnswer:'''\\r\\n            payload = json.dumps({\\r\\n            'inputs': input_prompt,\\r\\n            'parameters': {\\r\\n                    'max_new_tokens': max_tokens,\\r\\n                    'top_k': top_k,\\r\\n                    'top_p': top_p,\\r\\n                    'typical_p': typical_p,\\r\\n                    'temperature': temperature,\\r\\n                    'repetition_penalty': repetition_penalty\\r\\n                }\\r\\n            })\\r\\n            \\r\\n            headers = {\\r\\n                'Content-Type': 'application/json' \\r\\n            }\\r\\n            \\r\\n            response = requests.request('POST', falcon_40b_model_url, headers=headers, data=payload, verify=False)\\r\\n            \\r\\n            generated_answer = json.loads(response.text)[0]['generated_text']\\r\\n\\r\\n            return generated_answer\\r\\n        \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in OnPrem as', e)\\r\\n            raise e\\r\\n    \\r\\n    def AzureOpenai(self,engine:str='',prompt_template:str='',context:str='',question:str='',api_type:str='',api_base:str='',api_version:str='',api_key:str='',temperature:float='', max_tokens:float='', stop:str='', top_p:float=''):\\r\\n        try:\\r\\n            import openai\\r\\n            openai.proxy = {'http' : 'http://blrproxy.ad.infosys.com:80','https' : 'http://blrproxy.ad.infosys.com:80'}\\r\\n            openai.api_type = api_type\\r\\n            openai.api_base = api_base\\r\\n            openai.api_version = api_version\\r\\n            openai.api_key = api_key\\r\\n            prompt = f'''{prompt_template} \\\\n\\\\nContext: '{context}'. \\\\n\\\\nQuestion: {question}. \\\\n\\\\nAnswer:'''\\r\\n            response = openai.ChatCompletion.create(engine=engine,\\r\\n                    messages = [{\\""role\\"":\\""user\\"",\\""content\\"":prompt}],\\r\\n                    temperature=temperature,\\r\\n                    max_tokens=max_tokens,\\r\\n                    top_p=top_p,\\r\\n                    stop=stop)\\r\\n            out = response[\\""choices\\""][0][\\""message\\""][\\""content\\""]\\r\\n            return out\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in AzureOpenai as', e)\\r\\n            raise e\\r\\n                \\r\\n    def Bedrock(self,service_name:str='',prompt_template:str='',question:str='',context:str='',aws_access_key_id:str='',aws_secret_access_key:str='',region_name:str='',endpoint_url:str='',max_tokens:float=None,temperature:float=None,top_p:float=None,modelId:str=''):\\r\\n        try:            \\r\\n            import boto3\\r\\n            bedrock = boto3.client(service_name=service_name,aws_access_key_id=aws_access_key_id,aws_secret_access_key=aws_secret_access_key,region_name=region_name,endpoint_url=endpoint_url)\\r\\n    \\r\\n            prompt_data = f\\""\\""\\""Human: {prompt_template} \\\\n\\\\nContext: '{context}'. \\\\n\\\\nQuestion: {question}\\r\\n            Assistant:\\""\\""\\""\\r\\n            body = json.dumps({\\r\\n                \\""prompt\\"": prompt_data,\\r\\n                \\""max_tokens_to_sample\\"":max_tokens,\\r\\n                \\""temperature\\"":temperature,\\r\\n                \\""top_p\\"":top_p\\r\\n            })\\r\\n            modelId = modelId\\r\\n            logger.info(body)\\r\\n            response = bedrock.invoke_model(body=body, modelId=modelId)\\r\\n            response_body = json.loads(response.get('body').read())\\r\\n            outputText = response_body.get('completion')\\r\\n            return outputText\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Bedrock as', e)\\r\\n            raise e \\n""},""context"":[{},{}]},{""id"":""uinAn"",""alias"":""Embedding Functions"",""name"":""Embedding Functions"",""classname"":""EmbeddingFunction"",""category"":""EmbeddingFunctions"",""attributes"":{},""position_x"":""30"",""position_y"":""356"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""FsrZi"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""from typing import Optional,Any\\r\\nimport os\\r\\nimport logging as logger\\r\\nclass EmbeddingConfig:\\r\\n    def __init__(self,config_json:Optional[Any] = {}):\\r\\n        self.embedding_type:Optional[str]=config_json.get('embedding_type',\\""HuggingFace\\"")\\r\\n        self.model_name:Optional[str]=config_json.get('model_name',\\""sentence-transformers/all-MiniLM-L6-v2\\"")\\r\\n        self.azure_openai_api_key:Optional[str]=config_json.get('azure_openai_api_key',os.environ.get('app_openai_api_key'))\\r\\n        self.azure_openai_endpoint:Optional[str]=config_json.get('azure_openai_endpoint','https://azureft.openai.azure.com/')\\r\\n        self.azure_api_version:Optional[str]=config_json.get('azure_api_version','2023-03-15-preview')\\r\\n        self.azure_deployment:Optional[str]=config_json.get('azure_deployment','openaiada2')\\r\\n        self.openai_model:Optional[str]=config_json.get('openai_model','text-embedding-ada-002')\\r\\n        self.openai_api_base:Optional[str]=config_json.get('openai_api_base','https://azureft.openai.azure.com/')\\r\\n        self.openai_api_type:Optional[str]=config_json.get('openai_api_type','azure')\\r\\n        self.bedrock_access_id:Optional[str]=config_json.get('bedrock_access_id',os.environ.get('app_aws_secret_access_id'))\\r\\n        self.bedrock_access_key:Optional[str]=config_json.get('bedrock_access_key',os.environ.get('app_aws_secret_access_key'))\\r\\n        self.bedrock_region_name:Optional[str]=config_json.get('bedrock_region_name','us-east-1')\\r\\n        self.bedrock_endpoint_url:Optional[str]=config_json.get('bedrock_endpoint_url','https://bedrock-runtime.us-east-1.amazonaws.com')\\r\\n        self.bedrock_model_id:Optional[str]=config_json.get('bedrock_model_id','amazon.titan-embed-g1-text-02')\\r\\n        self.elastic_search_model_id:Optional[str]=config_json.get('elastic_search_model_id',None)\\r\\n        self.elastic_search_cloud_id:Optional[str]=config_json.get('elastic_search_cloud_id',None)\\r\\n        self.elastic_search_user_id:Optional[str]=config_json.get('elastic_search_user_id',None)\\r\\n        self.elastic_search_password:Optional[str]=config_json.get('elastic_search_password',None)\\r\\nclass EmbeddingModels:\\r\\n    def __init__(self) -> None:\\r\\n        pass\\r\\n    def get_embedding_function(self,config):\\r\\n        \\""\\""\\""Embedding Model Defination for vector db. We support FaissDB,chromadb,ElasticsearchDB, it's not required if you prepared your own vector db.\\r\\n        Args:\\r\\n            embedding_type(str): Type of Embedding to be used, We support HuggingFace, AzureOpenAI, Bedrock, ElasticSearch, Default is HuggingFace.\\r\\n            model_name(str): Model Name to generate the embedding according to your embedding type, Default is \\""sentence-transformers/all-MiniLM-L6-v2\\"".\\r\\n            AzureOpenAI_Params(str):azure_openai_api_key,\\r\\n                                    azure_openai_endpoint,\\r\\n                                    azure_api_version,\\r\\n                                    azure_deployment,\\r\\n                                    model_name= Open AI Embedding Model Name ,\\r\\n                                    openai_api_base,\\r\\n                                    openai_api_type\\r\\n            Bedrock_Params(str):bedrock_access_id,\\r\\n                                bedrock_access_key,\\r\\n                                bedrock_region_name,\\r\\n                                bedrock_endpoint_url,\\r\\n                                bedrock_model_id\\r\\n            ElasticSearch_Params(str):  elastic_search_model_id,\\r\\n                                        elastic_search_cloud_id,\\r\\n                                        elastic_search_user,\\r\\n                                        elastic_search_password\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            logger.info(config.azure_openai_api_key)\\r\\n            if config.embedding_type.strip().lower() == \\""huggingface\\"":\\r\\n                return self.HuggingFace(model_name=config.model_name)\\r\\n            elif config.embedding_type.strip().lower() == \\""azureopenai\\"":\\r\\n                return self.AzureOpenAI(azure_openai_api_key_param=config.azure_openai_api_key,azure_api_version_param=config.azure_api_version,azure_deployment_param=config.azure_deployment,model_param=config.model_name,openai_api_base_param=config.openai_api_base,openai_api_type_param=config.openai_api_type)\\r\\n            elif config.embedding_type.strip().lower() == \\""bedrock\\"":\\r\\n                return self.Bedrock(access_id_param=config.bedrock_access_id,access_key_param=config.bedrock_access_key,region_name_param=config.bedrock_region_name,endpoint_url_param=config.bedrock_endpoint_url,model_id_param=config.bedrock_model_id)\\r\\n            elif config.embedding_type.strip().lower() == \\""elasticsearch\\"":\\r\\n                return self.ElasticSearch(elastic_model_id_param=config.elastic_search_model_id,es_cloud_id_param=config.elastic_search_cloud_id,es_user_param=config.elastic_search_user,es_password_param=config.elastic_search_password)\\r\\n            else:\\r\\n                raise Exception(\\""Unknown embedding type, we support only ElasticSearch, Bedrock, AzureOpenAI, and HuggingFace\\"")\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_embedding_function',e)\\r\\n            raise e\\r\\n        \\r\\n    def HuggingFace(self,model_name:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings import HuggingFaceEmbeddings\\r\\n            embeddings = HuggingFaceEmbeddings(\\r\\n                    model_name=model_name\\r\\n            )\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in HuggingFace', e)\\r\\n            raise e\\r\\n        \\r\\n    def AzureOpenAI(self,azure_openai_api_key_param:str='',azure_api_version_param:str='',azure_deployment_param:str='',model_param:str='',openai_api_base_param:str='',openai_api_type_param:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings import AzureOpenAIEmbeddings\\r\\n            embeddings = AzureOpenAIEmbeddings(api_key=azure_openai_api_key_param,api_version=azure_api_version_param,azure_deployment=azure_deployment_param,model=model_param,openai_api_type=openai_api_type_param,base_url=openai_api_base_param)\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in AzureOpenAI', e)\\r\\n            raise e\\r\\n        \\r\\n    def Bedrock(self,access_id_param:str='',access_key_param:str='',region_name_param:str='',endpoint_url_param:str='',model_id_param:str=''):\\r\\n        try:\\r\\n            import boto3\\r\\n            from langchain.embeddings import BedrockEmbeddings\\r\\n            bedrock = boto3.client('bedrock-runtime',aws_access_key_id=access_id_param,aws_secret_access_key=access_key_param,region_name=region_name_param,endpoint_url=endpoint_url_param)\\r\\n            embeddings = BedrockEmbeddings(\\r\\n                model_id=model_id_param, \\r\\n                client=bedrock\\r\\n            )\\r\\n            embeddings\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Bedrock', e)\\r\\n            raise e\\r\\n        \\r\\n    def Elastic_search(self,model_id_param:str='',es_cloud_id_param:str='',es_user_param:str='',es_password_param:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings.elasticsearch import ElasticsearchEmbeddings\\r\\n            embeddings = ElasticsearchEmbeddings.from_credentials(\\r\\n                model_id=model_id_param,\\r\\n                es_cloud_id=es_cloud_id_param,\\r\\n                es_user=es_user_param,\\r\\n                es_password=es_password_param,\\r\\n            )\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Elastic_search', e)\\r\\n            raise e\\n""},""context"":[]},{""id"":""xSkHJ"",""alias"":""SQL Engine"",""name"":""SQL Engine"",""classname"":""SQLEngine"",""category"":""SQLEngine"",""attributes"":{},""position_x"":""35"",""position_y"":""222"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""xlHqC"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import os\\r\\nimport json\\r\\nimport requests\\r\\nimport json\\r\\nfrom urllib.parse import quote_plus\\r\\nfrom leaputils import Security\\r\\nfrom langchain.sql_database import SQLDatabase\\r\\nfrom sql_metadata import Parser\\r\\nimport sqlite3\\r\\n\\r\\n#!pip install sql-metadata\\r\\n#!pip install leaputils-3.0.0-py3-none-any.whl\\r\\n           \\r\\nclass SQLEngine:                            \\r\\n    '''\\r\\n    Extract dataset. Currently We support S3 datastore.        \\r\\n \\r\\n    Args:\\r\\n        dataset_id (str): Dataset id to get dataset config  \\r\\n        local_path (str): Local file path to store file downloaded from data store,     \\r\\n        s3:\\r\\n            s3_end_point_url (str): s3 end point url\\r\\n            s3_access_key (str): s3 access key\\r\\n            s3_secret_key (str): s3 secret key \\r\\n            bucket (str): s3 bucket name\\r\\n            obj_key (str): s3 object(file, folder) name\\r\\n        mysql db:\\r\\n            db_host:str = None, \\r\\n            db_port:str = None, \\r\\n            db_user_name:str = None, \\r\\n            db_password:str = None, \\r\\n            query:str = None\\r\\n    Returns:\\r\\n        file_path (str): Local file path            \\r\\n    '''\\r\\n    def __init__(self, dataset_id:str, organization:str) -> None:\\r\\n        self.organization = organization\\r\\n        self.dataset_id = dataset_id        \\r\\n\\r\\n    def get_db(self) -> str: \\r\\n        '''\\r\\n        Get database connection and metadata from database.\\r\\n        Returns:\\r\\n            db (SQLDatabase): Database connection object\\r\\n            metadata (dict): Dataset metadata\\r\\n            connection_details (dict): Connection details for database connection        \\r\\n        '''\\r\\n        try: \\r\\n            # Connect to the database\\r\\n            root_dir = '/RAG_DB'\\r\\n            os.makedirs(root_dir, exist_ok=True)  # Create only if needed\\r\\n            root_path = os.path.abspath(root_dir)\\r\\n            path = os.path.join(root_path,'rag_database.db')\\r\\n            # path = os.path.join('../database','rag_database.db')\\r\\n            conn = sqlite3.connect(path)\\r\\n\\r\\n            # Create a cursor object\\r\\n            cursor = conn.cursor()\\r\\n\\r\\n            sql = 'SELECT * FROM dataset_details WHERE dataset_id=? AND organization=?'\\r\\n            values = (self.dataset_id, self.organization)\\r\\n            cursor.execute(sql, values)\\r\\n\\r\\n            data = cursor.fetchone()\\r\\n\\r\\n            connection_string = data[3]   \\r\\n            connection_details = json.loads(data[4]) \\r\\n            sql_query = connection_details['query']\\r\\n            metadata = json.loads(data[5])\\r\\n\\r\\n            tablesToInclude = Parser(sql_query).tables\\r\\n            db = SQLDatabase.from_uri(connection_string,include_tables=tablesToInclude)  \\r\\n            \\r\\n        except sqlite3.connector.Error as err:\\r\\n            print('Thre is some error whiling storing data as:',err)\\r\\n            raise err\\r\\n        finally:\\r\\n            # Close database connection properly\\r\\n            cursor.close()\\r\\n            conn.close()  \\r\\n\\r\\n        return db, metadata, connection_details  \\r\\n        \\n""},""context"":[]},{""id"":""xlHqC"",""alias"":""Define LLM"",""name"":""Define LLM"",""classname"":""Definellm"",""category"":""Definellm"",""attributes"":{},""position_x"":""249"",""position_y"":""222"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""xSkHJ"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""OtjdF"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""from typing import Optional,Any\\r\\nfrom langchain.chat_models import AzureChatOpenAI\\r\\nimport os\\r\\nimport logging as logger\\r\\n\\r\\nclass LLMDefineConfig:\\r\\n    '''\\r\\n    define llm model. currently we support Azureopenai\\r\\n    Args:\\r\\n        deployment_name (str): Name of the Azure OpenAI deployment to use for text generation\\r\\n        model_name (str): Name of the Azure OpenAI model to use for text generation\\r\\n        openai_api_key (str): API key for authentication if using an API-based text generation engine\\r\\n        openai_api_version (str): API version, e.g. 'v1'\\r\\n        openai_api_base (str): Base URL endpoint if using an API-based text generation engine\\r\\n        openai_api_type (str): The type of API if using an API-based text generation engine, e.g. 'OpenAI'\\r\\n        temperature (float): Float value controlling randomness/creativity of text generation\\r\\n    Returns:\\r\\n        llm: llm model's object.\\r\\n    '''    \\r\\n    def __init__(self,config_json:Optional[Any]={}):\\r\\n        self.deployment_name:Optional[str]=config_json.get('deployment_name','')\\r\\n        self.model_name:Optional[str]=config_json.get('model_name','')\\r\\n        self.openai_api_key:Optional[str]=config_json.get('openai_api_key','') \\r\\n        self.openai_api_version:Optional[str]= config_json.get('openai_api_version','') \\r\\n        self.openai_api_base:Optional[str]=config_json.get('openai_api_base','') \\r\\n        self.openai_api_type:Optional[str]=config_json.get('openai_api_type','azure')\\r\\n        self.temperature:Optional[float]=config_json.get('temperature',0)\\r\\n        self.LLM_Type : Optional[str] = config_json.get('LLM_Type','AzureOpenai')\\r\\n           \\r\\n\\r\\nclass LLMDefine:    \\r\\n    def getmodel(self,config): \\r\\n        '''\\r\\n        define llm model. currently we support Azureopenai\\r\\n        Args:\\r\\n            config (LLMDefineConfig): define llm model. currently we support Azureopenai\\r\\n        Returns:\\r\\n            llm: llm model's object.\\r\\n        '''        \\r\\n        try:                 \\r\\n            if config.LLM_Type.lower() == 'azureopenai':\\r\\n                '''\\r\\n                AzureOpenai\\r\\n                deployment_name: # Name of the Azure OpenAI deployment to use for text generation\\r\\n                model_name: # Name of the Azure OpenAI model to use for text generation\\r\\n                openai_api_key: # API key for authentication if using an API-based text generation engine\\r\\n                openai_api_version: # API version, e.g. 'v1'\\r\\n                openai_api_base: # Base URL endpoint if using an API-based text generation engine\\r\\n                openai_api_type: # The type of API if using an API-based text generation engine, e.g. 'OpenAI'\\r\\n                temperature: # Float value controlling randomness/creativity of text generation\\r\\n                '''           \\r\\n                llm = self.AzureOpenai(deployment_name=config.deployment_name, \\r\\n                                    model_name=config.model_name, \\r\\n                                    openai_api_key=config.openai_api_key, \\r\\n                                    openai_api_version=config.openai_api_version,\\r\\n                                    openai_api_base=config.openai_api_base,\\r\\n                                    openai_api_type=config.openai_api_type,\\r\\n                                    temperature=config.temperature\\r\\n                                    )\\r\\n                return llm\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in getmodel as',e)\\r\\n            raise e    \\r\\n    \\r\\n    def AzureOpenai(self,\\r\\n                    deployment_name:str='', \\r\\n                    model_name:str='', \\r\\n                    openai_api_key:str='', \\r\\n                    openai_api_version:str='',\\r\\n                    openai_api_base:str='',\\r\\n                    openai_api_type:str='',\\r\\n                    temperature:float=0        \\r\\n                    ):  \\r\\n        '''\\r\\n        define llm model. currently we support Azureopenai\\r\\n        Args:\\r\\n            deployment_name (str): Name of the Azure OpenAI deployment to use for text generation\\r\\n            model_name (str): Name of the Azure OpenAI model to use for text generation\\r\\n            openai_api_key (str): API key for authentication if using an API-based text generation engine\\r\\n            openai_api_version (str): API version, e.g. 'v1'\\r\\n            openai_api_base (str): Base URL endpoint if using an API-based text generation engine\\r\\n            openai_api_type (str): The type of API if using an API-based text generation engine, e.g. 'OpenAI'\\r\\n            temperature (float): Float value controlling randomness/creativity of text generation\\r\\n        Returns:\\r\\n            llm: llm model's object.                \\r\\n        '''\\r\\n        try:              \\r\\n            # openai.proxy = {'http' : 'http://blrproxy.ad.infosys.com:80','https' : 'http://blrproxy.ad.infosys.com:80'}\\r\\n            llm = AzureChatOpenAI(\\r\\n                                    deployment_name=deployment_name,\\r\\n                                    model_name=model_name,\\r\\n                                    openai_api_key=openai_api_key,\\r\\n                                    openai_api_version=openai_api_version,\\r\\n                                    openai_api_base=openai_api_base,\\r\\n                                    openai_api_type=openai_api_type, \\r\\n                                    temperature=temperature                               \\r\\n                                )\\r\\n            return llm\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in AzureOpenai as', e)\\r\\n            raise e\\r\\n\\n""},""context"":[{}]},{""id"":""OtjdF"",""alias"":""Query Generator"",""name"":""Query Generator"",""classname"":""QueryGenerator"",""category"":""QueryGenerator"",""attributes"":{},""position_x"":""488"",""position_y"":""222"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""xlHqC"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""KzUDv"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import boto3\\r\\nfrom typing import List, Optional\\r\\nimport pathlib\\r\\nimport os\\r\\nimport json\\r\\nimport shutil\\r\\nimport requests\\r\\nimport boto3\\r\\nimport json\\r\\nfrom typing import List, Optional, Union, Dict, Sequence, Any\\r\\nfrom langchain.chains import create_sql_query_chain\\r\\nimport logging as logger\\r\\nclass QueryGeneratorConfig:\\r\\n    '''\\r\\n    Config class for QueryGenerator.\\r\\n    Args:\\r\\n        user_query (str): The user's query.\\r\\n    '''\\r\\n    def __init__(self, config_json: Optional[Any]={}) -> None:\\r\\n        self.user_query: Optional[str] = config_json.get('user_query',None)        \\r\\n\\r\\nclass QueryGenerator:\\r\\n    '''\\r\\n    QueryGenerator class.\\r\\n    Args:\\r\\n        db (str): The database to query.\\r\\n        llm (str): The language model to use.\\r\\n    Returns:\\r\\n        sql_query (str): The generated SQL query.\\r\\n    '''                                \\r\\n    def __init__(self, db, llm) -> None:        \\r\\n        self.db = db\\r\\n        self.llm = llm\\r\\n\\r\\n    def get_sql_query(self, config) -> str: \\r\\n        '''\\r\\n        Get the SQL query.\\r\\n        Args:\\r\\n            config (QueryGeneratorConfig): The configuration for the query generator.\\r\\n        Returns:\\r\\n            sql_query (str): The generated SQL query.\\r\\n        '''    \\r\\n        try:    \\r\\n            # define chain                      \\r\\n            chain = create_sql_query_chain(self.llm, self.db)        \\r\\n            sql_query = chain.invoke({\\""question\\"": config.user_query})        \\r\\n            return sql_query\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in QueryGenerator as: ', e)\\r\\n            return e\\r\\n\\r\\n\\n""},""context"":[{},{}]},{""id"":""KzUDv"",""alias"":""Query Executor"",""name"":""Query Executor"",""classname"":""QueryExecutor"",""category"":""QueryExecutor"",""attributes"":{},""position_x"":""739"",""position_y"":""222"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""OtjdF"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import boto3\\r\\nfrom typing import List, Optional\\r\\nimport boto3\\r\\nimport json\\r\\nfrom typing import List, Optional, Union, Dict, Sequence, Any\\r\\nfrom langchain.chains import create_sql_query_chain\\r\\nfrom langchain.agents import create_sql_agent\\r\\nfrom langchain.agents.agent_types import AgentType\\r\\nfrom langchain.sql_database import SQLDatabase\\r\\nfrom langchain_community.agent_toolkits import SQLDatabaseToolkit\\r\\nfrom langchain_experimental.sql import SQLDatabaseChain\\r\\nimport mysql.connector\\r\\nimport pandas as pd\\r\\nimport logging as logger\\r\\n\\r\\nclass QueryExecutorConfig:\\r\\n    '''\\r\\n    Config class for QueryExecutor.\\r\\n    Args:\\r\\n        user_query (str): The user's query.\\r\\n    '''\\r\\n    def __init__(self, config_json: Optional[Any]={}) -> None:\\r\\n        self.user_query: Optional[str] = config_json.get('user_query',None)   \\r\\n\\r\\nclass QueryExecutor:  \\r\\n    '''\\r\\n    Execute sql query, chain and returns dataframe and summarize answer.\\r\\n    Args:\\r\\n        connection_details (dict): The connection details.\\r\\n        llm (str): The language model to use.\\r\\n        db (str): The database to query.\\r\\n        metadata (dict): The metadata.\\r\\n    Returns:\\r\\n        df (DataFrame): The dataframe.\\r\\n        ans (str): The summarize answer.                        \\r\\n    '''                              \\r\\n    def __init__(self, connection_details:dict, llm, db, sql_query, metadata) -> None:   \\r\\n        self.connection_string = connection_details.get('connection_string', None)        \\r\\n        self.db_user_name = connection_details.get('db_user_name', None)\\r\\n        self.db_password = connection_details.get('db_password', None)\\r\\n        self.db_host = connection_details.get('db_host', None)\\r\\n        self.db_port = connection_details.get('db_port', None)\\r\\n        self.database = connection_details.get('database', None)  \\r\\n        self.llm = llm\\r\\n        self.db = db\\r\\n        self.metadata = metadata  \\r\\n        self.sql_query = sql_query\\r\\n\\r\\n    def execute_query(self, config) -> str:\\r\\n        try:\\r\\n            '''\\r\\n            Execute query, chain and returns dataframe and summarize answer.\\r\\n            Args:\\r\\n                config (QueryExecutorConfig): The config.\\r\\n            Returns:\\r\\n                df (DataFrame): The dataframe.\\r\\n                ans (str): The summarize answer.\\r\\n            '''           \\r\\n            df = self.get_df(host=self.db_host, user=self.db_user_name, password=self.db_password, database=self.database, sql_query=self.sql_query)       \\r\\n            df.to_dict('records') \\r\\n            ans = self.get_ans_summary(self.llm, self.db, config.user_query)               \\r\\n            return df, ans\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in QueryExecutor as: ',e)\\r\\n            return e\\r\\n                \\r\\n    def get_df(self, host:str='', user:str='', password:str='', database:str='', sql_query:str=''):\\r\\n        '''\\r\\n        Get dataframe.\\r\\n        Args:\\r\\n            host (str): The host.\\r\\n            user (str): The user.\\r\\n            password (str): The password.\\r\\n            database (str): The database.\\r\\n            sql_query (str): The SQL query.\\r\\n        Returns:\\r\\n            data_df (DataFrame): The dataframe.\\r\\n        '''\\r\\n        try:\\r\\n            mydb = mysql.connector.connect(host=host,user=user,password=password,database=database)        \\r\\n            mycursor = mydb.cursor(dictionary=True)\\r\\n            mycursor.execute(sql_query)\\r\\n            data = mycursor.fetchall()\\r\\n            column_names = [desc[0] for desc in mycursor.description]\\r\\n            data_df = pd.DataFrame(data, columns=column_names)\\r\\n            return data_df    \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in QueryExecutor as: ', e)\\r\\n            return e        \\r\\n\\r\\n    def get_ans_summary(self, llm, db, user_query:str=''):\\r\\n        '''\\r\\n        Get summarize answer.\\r\\n        Args:\\r\\n            llm (str): The language model.\\r\\n            db (str): The database.\\r\\n            user_query (str): The user query.\\r\\n        Returns:\\r\\n            response (str): The summarize answer.\\r\\n        '''   \\r\\n        try:    \\r\\n            db_chain = SQLDatabaseChain.from_llm(llm, db, verbose=False, metadata=self.metadata)\\r\\n            response = db_chain.run(user_query)      \\r\\n            return response\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in QueryExecutor as: ', e)\\r\\n            return e\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[{},{},{}]},{""id"":""WuSgl"",""alias"":""FlaskAPP"",""name"":""FlaskAPP"",""classname"":""FlaskAPP"",""category"":""FlaskAPP"",""attributes"":{""port"":""8501"",""script"":[""app = Flask(__name__)\\rfrom dotenv import load_dotenv\\rfrom translatepy import Translator\\r \\rload_dotenv()    \\r \\ros.environ['CURL_CA_BUNDLE'] = ''\\r@app.route('/Ingest', methods=['POST'])\\r\\rdef custom_request_post_ingest():\\r\\r    data = request.get_json()\\r\\r    dataset_id = data.get('dataset_id','')\\r\\r    organization = data.get('organization','')\\r    DB_Type = data.get('DB_Type','Faiss')\\r    index_name = data.get('index_name','Vector_Store')\\r\\r    # config=data.get('config','')\\r    config={\\""DatasetExtractorConfig\\"":{\\""local_path\\"":\\""RAG_data\\""},\\r\\""DatasetChunkerConfig\\"":{\\""chunk_size\\"":1000,\\""chunk_overlap\\"":50},\\r\\""EmbeddingFunctionsConfig\\"":{\\""embedding_type\\"":\\""HuggingFace\\""},\\r\\""VectorStoreConfig\\"":{\\""DB_Type\\"":DB_Type,\\""index_name\\"":index_name}}\\r    \\r\\r    \\r\\r    # print(data)\\r\\r    datasetextractorconfig_obj = DatasetExtractorConfig(config=config['DatasetExtractorConfig'])\\r\\r    dataextractor_obj = DatasetExtractor(dataset_id, organization)\\r\\r    metadata = dataextractor_obj.get_data(datasetextractorconfig_obj)\\r\\r    if metadata['dataset_type'] not in ['MYSQL','POSTGRESQL','MSSQL']:\\r\\r        # print(metadata)\\r\\r        datasetchunkerconfig_obj = DatasetChunkerConfig(config=config['DatasetChunkerConfig'])\\r\\r        datasetchunker_obj = DatasetChunker(metadata)\\r\\r        splitted_docs = datasetchunker_obj.chunk_data(datasetchunkerconfig_obj)\\r\\r        # print(splitted_docs)\\r\\r        embeddingmodels_obj = EmbeddingModels()\\r\\r        cfg = EmbeddingConfig(config[\\""EmbeddingFunctionsConfig\\""])\\r\\r        embedding = embeddingmodels_obj.get_embedding_function(cfg)\\r\\r        # print(embedding)\\r\\r        db = VectorStore(embedding,splitted_docs)\\r\\r        config = VectorConfig(config[\\""VectorStoreConfig\\""])\\r\\r        result = db.SaveEmbedding(config)\\r\\r        print(result)\\r\\r        \\r\\r        answer={'Status':result}\\r\\r        return jsonify(answer),200\\r\\r    else:\\r\\r        answer={'Status':'Connection string created sucessfully'}\\r\\r        return jsonify(answer),200\\r\\r    \\r\\r@app.route('/Infer', methods=['POST'])\\r\\rdef custom_request_post_infer():\\r\\r    data = request.get_json()\\r\\r    # config=data.get('config','')\\r\\r    # print('config==',config)  \\r    DB_Type = data.get('DB_Type','Faiss')\\r    query = data.get('query','Hi')\\r    \\r    translator = Translator()\\r    language = translator.language(query)\\r    detected_language =  str(language.result)\\r    if detected_language != \\""eng\\"":\\r        query = translator.translate(query, \\""English\\"").result\\r        \\r    index_name = data.get('index_name','Vector_Store')\\r\\r    dataset_id = data.get('dataset_id', None)\\r\\r    org = data.get('organization', None)\\r\\r    print('dataset_id==', dataset_id)\\r\\r    print('org==', org)\\r    config={\\""EmbeddingConfig\\"":{\\""embedding_type\\"":\\""HuggingFace\\""},\\r\\""VectorStoreConfig\\"":{\\""DB_Type\\"":DB_Type,\\""query\\"":query,\\""index_name\\"":index_name},\\r\\""LLMConfig\\"":{\\""LLM_Type\\"":\\""onprem\\"",\\""temperature\\"":0.1,\\""query\\"":query,\\""prompt_template\\"":\\""Human: Use the following pieces of context to provide a concise answer to the question at the end. If you dont know the answer, just say that you dont know, dont try to make up an answer{context}.For the query, if it requires drawing a table give results as a table markdown format.Question: {question}Assistant: \\"",\\""max_tokens\\"":2000}}\\r\\r\\r\\r    if dataset_id!=None and org!=None: \\r\\r        SQLEngine_obj = SQLEngine(dataset_id=dataset_id, organization=org)\\r\\r        db,metadata, connection_details = SQLEngine_obj.get_db()      \\r\\r        \\r\\r        llmdefine_obj = LLMDefine()\\r        llmdefineconfig_config = LLMDefineConfig(config_json=config['LLMInferenceConfig'])\\r        llm = llmdefine_obj.getmodel(llmdefineconfig_config)\\r\\r\\r\\r        querygeneratorconfig_obj = QueryGeneratorConfig(config_json=config['QueryGeneratorConfig'])\\r\\r        querygenerator_obj = QueryGenerator(db,llm)\\r\\r        sql_query = querygenerator_obj.get_sql_query(querygeneratorconfig_obj)        \\r\\r\\r\\r        QueryExecutorConfig_config = QueryExecutorConfig(config_json=config['QueryExecutorConfig'])\\r\\r        QueryExecutor_obj = QueryExecutor(connection_details, llm, db, sql_query, metadata)\\r\\r        \\r\\r        df, res = QueryExecutor_obj.execute_query(QueryExecutorConfig_config)\\r\\r        df={'Dataframe':df.to_json()}\\r\\r        answer = {'Answer':str(res.split(\\""\\"")[0])}\\r\\r        metadata = {'Metadata': metadata}\\r\\r        return jsonify(answer,df,metadata),200        \\r\\r    else:\\r\\r        embeddingmodels_infer_obj = EmbeddingModels()\\r\\r        embedding_config_obj  = EmbeddingConfig(config['EmbeddingConfig'])\\r\\r        embeddings_out = embeddingmodels_infer_obj.get_embedding_function(embedding_config_obj)\\r\\r        vector_config_obj = VectordbConfig(config[\\""VectorStoreConfig\\""])\\r\\r        query_vector_db_obj = QueryVectorDB(embeddings_out)\\r\\r        similar_docs= query_vector_db_obj.get_similar_docs(vector_config_obj)\\r\\r        print(similar_docs)\\r\\r        llm_config_obj = LLMInferenceConfig(config[\\""LLMConfig\\""])\\r\\r        llm_infer_obj = LLMInference(similar_docs)\\r\\r        output = llm_infer_obj.Query_LLM(llm_config_obj)\\r\\r        print(output)\\r        if str(type(similar_docs[0]))!='''<class 'dict'>''':\\r            context_list=[]\\r    \\r            \\r    \\r            for i in similar_docs:\\r    \\r                d={}\\r    \\r                d[\\""page_content\\""]=i.page_content\\r    \\r                d[\\""metadata\\""]=i.metadata\\r    \\r                context_list.append(d)\\r        else:\\r            context_list=[]\\r            for i in range(len(similar_docs)):\\r                d={}\\r    \\r                d[\\""page_content\\""]=similar_docs[i][\\""page_content\\""]\\r    \\r                d[\\""metadata\\""]=similar_docs[i]['metadata']\\r    \\r                context_list.append(d)\\r\\r        print(context_list)\\r        \\r        if detected_language != \\""eng\\"":\\r            output = translator.translate(output, detected_language).result\\r        \\r\\r        answer={'Answer':output}\\r\\r        context = {'context':context_list}\\r\\r        return jsonify(answer,context),200\\r\\r    \\r\\r\\r\\r@app.route('/root', methods=['GET'])\\r\\rdef custom_request_root():\\r\\r    return jsonify({\\""Message\\"":\\""Success\\""})""]},""position_x"":""767"",""position_y"":""353"",""connectors"":[],""inputEndpoints"":[],""outputEndpoints"":[],""formats"":{""port"":""integer"",""script"":""textarea""},""codeGeneration"":{""imports"":[""from flask import Flask"",""from flask import request"",""from flask import jsonify""],""requirements"":[""flask""],""script"":""def FlaskAPP(port_param=5000,script_param=''):\\n    app.run(debug=False, host='0.0.0.0', port = port_param)\\n\\n\\n""},""context"":[]},{""id"":""HwjpM"",""alias"":""Dataset Extractor"",""name"":""Dataset Extractor"",""classname"":""DatasetExtractorSemantic"",""category"":""DatasetExtractor"",""attributes"":{},""position_x"":""58"",""position_y"":""70"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""YSLOw"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import boto3\\r\\nfrom typing import List, Optional\\r\\nimport logging as logger \\r\\nimport pathlib\\r\\nimport os\\r\\nimport json\\r\\nimport shutil\\r\\nimport requests\\r\\nimport boto3\\r\\nimport json\\r\\nfrom typing import List, Optional, Union, Dict, Sequence, Any\\r\\nfrom urllib.parse import quote_plus\\r\\n#from leaputils import Security\\r\\nimport sqlite3\\r\\n# !pip install unstructured\\r\\n# !pip install \\""unstructured[pdf]\\""\\r\\n\\r\\nclass DatasetExtractorConfig:\\r\\n    \\""\\""\\""\\r\\n    DatasetExtractorConfig class to get dataset config.\\r\\n    Args:\\r\\n        config (dict): Dataset config\\r\\n    \\""\\""\\""\\r\\n    def __init__(self, config: Optional[Any]={}) -> None:   \\r\\n        self.local_path: str = config.get('local_path','RAG_data')            \\r\\n        self.query: str = config.get('query',None)   \\r\\n        self.index_search: str = config.get('index_search', 'Default_Index')              \\r\\nclass DatasetExtractor:                            \\r\\n    \\""\\""\\""\\r\\n    Extract dataset. Currently We support S3 datastore.        \\r\\n    Args:\\r\\n        dataset_id (str): Dataset id to get dataset config  \\r\\n        local_path (str): Local file path to store file downloaded from data store,   \\r\\n        index_search (str): To store embedding at particular index          \\r\\n    Returns:\\r\\n        if dataset_type is S3: file_path (str): Local file path\\r\\n        if dataset_type is MYSQL, POSTGRESQL, MSSQL: metadata (dict): metadata\\r\\n    \\""\\""\\""\\r\\n    def __init__(self, dataset_id:str, organization:str) -> None:\\r\\n        self.organization = organization\\r\\n        self.dataset_id = dataset_id        \\r\\n    def get_data(self, config) -> str:         \\r\\n        try:\\r\\n            # get dataset config dict\\r\\n            datasetcofig = self.getdatasetconfig(dataset_id=self.dataset_id, organization=self.organization)              \\r\\n            view = datasetcofig['views']      \\r\\n            dataset_type = datasetcofig['datasource']['type']        \\r\\n            metadata = {\\r\\n                'dataset_id': self.dataset_id,\\r\\n                'organization': self.organization,\\r\\n                'dataset_type': dataset_type,                   \\r\\n            }\\r\\n            connection_details = dict()\\r\\n            if dataset_type == 'S3':  \\r\\n                if view == 'Folder View':\\r\\n                    connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\n                    s3_access_key = connection_dict['accessKey']\\r\\n                    s3_secret_key = connection_dict['secretKey']\\r\\n                    s3_end_point_url = connection_dict['url']\\r\\n                    attribute = json.loads(datasetcofig['attributes'])\\r\\n                    bucket = attribute['bucket']    \\r\\n                    path = attribute['path'] \\r\\n                    local_path = '/temp/'+config.local_path+'_'+self.dataset_id\\r\\n                    count = 0\\r\\n                    flag = False\\r\\n                    for i in os.listdir(\\""/temp/\\""):\\r\\n                        if i.find(local_path[1:])==0:\\r\\n                            flag = True\\r\\n                            count += 1\\r\\n                    if flag:\\r\\n                        local_path = local_path+(count*'_')\\r\\n                    file_path = self.s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = path, local_path = local_path)\\r\\n                    metadata['source'] = file_path \\r\\n                    return metadata\\r\\n                else:                \\r\\n                    connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\n                    s3_access_key = connection_dict['accessKey']\\r\\n                    s3_secret_key = connection_dict['secretKey']\\r\\n                    s3_end_point_url = connection_dict['url'] \\r\\n                    attribute = json.loads(datasetcofig['attributes'])\\r\\n                    bucket = attribute['bucket']               \\r\\n                    path = attribute['path']   \\r\\n                    obj_key = attribute['object']  \\r\\n                    key = f'{path}/{obj_key}'                \\r\\n                    local_path = '/temp/'+config.local_path+'_'+self.dataset_id                           \\r\\n                    count = 0\\r\\n                    flag = False\\r\\n                    for i in os.listdir(\\""/temp/\\""):\\r\\n                        if i.find(local_path[1:])==0:\\r\\n                            flag = True\\r\\n                            count += 1\\r\\n                    if flag:\\r\\n                        local_path = local_path+(count*'_')                                 \\r\\n                    file_path = self.s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = key, local_path = local_path)\\r\\n                    metadata['source'] = file_path                \\r\\n                    return metadata\\r\\n            elif dataset_type == 'MYSQL':   \\r\\n                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\n                attributes = json.loads(datasetcofig['attributes'])            \\r\\n                db_user_name = connection_dict['userName']           \\r\\n                db_url = connection_dict['url']\\r\\n                db_password = connection_dict['password']   \\r\\n                salt = datasetcofig['datasource']['salt']\\r\\n                sql_query = attributes['Query'] \\r\\n                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query,prefix='jdbc:mysql://')            \\r\\n                self.store_connection_details(connection_details, connection_string, config.index_search, metadata)\\r\\n                return metadata            \\r\\n            elif dataset_type == 'POSTGRESQL':\\r\\n                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\n                attributes = json.loads(datasetcofig['attributes'])            \\r\\n                db_user_name = connection_dict['userName']           \\r\\n                db_url = connection_dict['url']\\r\\n                db_password = connection_dict['password']   \\r\\n                salt = datasetcofig['datasource']['salt']\\r\\n                sql_query = attributes['Query'] \\r\\n                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query, prefix='jdbc:postgresql://')            \\r\\n                self.store_connection_details(connection_details, connection_string, config.index_search)\\r\\n                return metadata         \\r\\n            elif dataset_type == 'MSSQL':\\r\\n                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\n                attributes = json.loads(datasetcofig['attributes'])            \\r\\n                db_user_name = connection_dict['userName']           \\r\\n                db_url = connection_dict['url']\\r\\n                db_password = connection_dict['password']   \\r\\n                salt = datasetcofig['datasource']['salt']\\r\\n                sql_query = attributes['Query'] \\r\\n                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query,prefix='jdbc:sqlserver://')            \\r\\n                self.store_connection_details(connection_details, connection_string, config.index_search)\\r\\n                return metadata \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in DatasetExtractor as: ',e)\\r\\n            return e\\r\\n    #helper functions\\r\\n    def getdatasetconfig(self, dataset_id:str, organization:str):\\r\\n        '''\\r\\n        call ai-plat api to get dataset config\\r\\n        return {dataset_config}\\r\\n        '''  \\r\\n        try:                  \\r\\n                      \\r\\n            api_referer = os.environ.get(\\""API_URL\\"")\\r\\n            url = f'{api_referer}/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}'\\r\\n            logger.info(url)\\r\\n            headers = {\\r\\n            'access-token': os.environ.get('app_access_token'),\\r\\n            'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B',\\r\\n            'Project':'2'\\r\\n            }\\r\\n            response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\n            dataset_config = json.loads(response.text)\\r\\n            return dataset_config\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in getdatasetconfig as: ', e)\\r\\n            raise e\\r\\n    def s3_download_data(self, end_point_url:str = '', access_key:str = '', secret_key:str = '', bucket:str = '', obj_key:str = '', local_path:str='/data'):\\r\\n        '''\\r\\n        download data from s3         \\r\\n        return local file path       \\r\\n        '''     \\r\\n        try:\\r\\n            s3_client = boto3.resource(service_name='s3',\\r\\n                        endpoint_url=end_point_url,\\r\\n                        aws_access_key_id=access_key,\\r\\n                        aws_secret_access_key=secret_key,\\r\\n                        verify=False)\\r\\n            bucket_object = s3_client.Bucket(bucket)\\r\\n            object_save_path = ''\\r\\n            logger.info(bucket_object.objects.filter(Prefix=obj_key))        \\r\\n            if os.path.exists(local_path):\\r\\n                shutil.rmtree(local_path)\\r\\n            os.makedirs(local_path)\\r\\n            model_path = os.path.join(local_path)\\r\\n            for my_bucket_object in bucket_object.objects.filter(Prefix=obj_key):   \\r\\n                if my_bucket_object.key.endswith('/'):\\r\\n                    pass\\r\\n                elif my_bucket_object.key.find('.aip')>=0:\\r\\n                    pass\\r\\n                else:                 \\r\\n                    object_save_path = (f\\""{model_path}/{pathlib.Path(my_bucket_object.key).name}\\"")\\r\\n                    bucket_object.download_file(my_bucket_object.key, object_save_path)\\r\\n            return local_path \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in s3_download_data as: ', e)\\r\\n            raise e\\r\\n    def get_connection_details(self, db_user_name:str, db_password:str, db_url:str, salt:str, sql_query:str, prefix:str):\\r\\n        '''\\r\\n        Get connection string for the database.\\r\\n        Args:\\r\\n            db_user_name (str): Database user name.\\r\\n            db_password (str): Database password.\\r\\n            db_url (str): Database URL.\\r\\n            salt (str): Salt used to encrypt the password.\\r\\n            prefix (str): Protocol prefix.\\r\\n        Returns:\\r\\n            connection_details (dict): Dictionary containing connection string, user name, password, host, port, and database.           \\r\\n        '''\\r\\n        try:\\r\\n            connection_details = {}\\r\\n            # decrypt password\\r\\n            db_password = Security.decrypt(db_password,salt)\\r\\n            # Remove protocol prefix and leading slash\\r\\n            stripped_url = db_url[len(prefix):]\\r\\n            # Split by components, assuming username and password are not present\\r\\n            host, port_database = stripped_url.split(\\""/\\"", 1)\\r\\n            # Extract host and port\\r\\n            host, port = host.split(\\"":\\"")\\r\\n            # Extract database\\r\\n            database = port_database.strip(\\""/\\"")\\r\\n            # Form connection string\\r\\n            connection_string = f'mysql://{db_user_name}:{quote_plus(db_password)}@{host}:{port}/{database}'\\r\\n            connection_details['db_user_name'] = db_user_name\\r\\n            connection_details['db_password'] = db_password\\r\\n            connection_details['db_host'] = host\\r\\n            connection_details['db_port'] = port\\r\\n            connection_details['database'] = database\\r\\n            connection_details['query'] = sql_query\\r\\n            return connection_string, connection_details\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_connection_details as: ', e)\\r\\n            raise e\\r\\n    def store_connection_details(self, connection_details:dict, connection_string:str, index_search:str, metadata:dict):         \\r\\n        try:\\r\\n            # Connect to the database or create it if it doesn't exist\\r\\n            root_dir = \\""/RAG_DB\\""\\r\\n            os.makedirs(root_dir, exist_ok=True)  # Create only if needed\\r\\n            root_path = os.path.abspath(root_dir)\\r\\n            path = os.path.join(root_path,'rag_database.db')\\r\\n            # path = os.path.join('../database','rag_database.db')\\r\\n            conn = sqlite3.connect(path) \\r\\n            # Create a cursor object to execute SQL commands\\r\\n            cursor = conn.cursor()\\r\\n            # Create a table (replace with your desired table name and columns)\\r\\n            cursor.execute('''\\r\\n            CREATE TABLE IF NOT EXISTS dataset_details (\\r\\n                id INTEGER PRIMARY KEY AUTOINCREMENT,\\r\\n                dataset_id TEXT NOT NULL,\\r\\n                organization TEXT NOT NULL,\\r\\n                connection_string TEXT NOT NULL,\\r\\n                connection_details JSON NOT NULL,\\r\\n                metadata JSON,\\r\\n                index_search TEXT NOT NULL\\r\\n            )\\r\\n            ''')\\r\\n            connection_details_json = json.dumps(connection_details)\\r\\n            metadata_json = json.dumps(metadata)\\r\\n            # Prepare SQL query with placeholders for values\\r\\n            sql = \\""INSERT INTO dataset_details (dataset_id, ORGANIZATION, connection_string, connection_details, metadata, index_search) VALUES (?, ?, ?, ?, ?, ?)\\""\\r\\n            # Data to be inserted (replace with your actual values)\\r\\n            values = (self.dataset_id, self.organization, connection_string, connection_details_json, metadata_json, index_search)\\r\\n            # Execute the query with prepared values\\r\\n            cursor.execute(sql, values)\\r\\n            # Commit the changes to the database\\r\\n            conn.commit()\\r\\n            logger.info(\\""data inserted successfully!....\\"")                   \\r\\n        except sqlite3.connector.Error as e:\\r\\n            logger.info('Thre is some error whiling storing data as:',e)\\r\\n            raise e\\r\\n        finally:\\r\\n            # Close database connection properly\\r\\n            cursor.close()\\r\\n            conn.close()\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""},{""name"":""usedSecrets"",""value"":""app_aws_secret_access_key""},{""name"":""usedSecrets"",""value"":""app_aws_secret_access_id""},{""name"":""usedSecrets"",""value"":""app_openai_api_key""},{""name"":""usedSecrets"",""value"":""app_qdrant_url""},{""name"":""usedSecrets"",""value"":""app_elastic_search_url""},{""name"":""usedSecrets"",""value"":""app_client_id""},{""name"":""usedSecrets"",""value"":""app_client_secret""},{""name"":""usedSecrets"",""value"":""app_access_token""}],""environment"":[{""name"":""API_URL"",""value"":""https://leap2:3100""},{""name"":""http_proxy"",""value"":""http://blrproxy.ad.infosys.com:80""},{""name"":""https_proxy"",""value"":""http://blrproxy.ad.infosys.com:80""},{""name"":""no_proxy"",""value"":""10.66.15.100,10.82.212.22,victlpth5-04,victlpast02,10.0.0.0,22,10.82.210.68,leap2,10.82.53.110,10.82.210.68""},{""name"":""PYTHONIOENCODING"",""value"":""utf8""},{""name"":""PYTHONLEGACYWINDOWSSTDIO"",""value"":""utf8""}],""default_runtime"":""{\\""dsAlias\\"":\\""semantic-searchtest\\"",\\""dsName\\"":\\""LEOSMNTC34666\\"",\\""type\\"":\\""REMOTE\\""}"",""latest_jobid"":""9342bd46-5bf8-4d21-a1f1-ab9f1846d502""}","onkar.salunke@infosys.com","Semantic-Search-OnPrem","2024-11-15 07:32:13","LEOSMNTC27817","leo1311","SemanticSearch","48",\N,"chain",NULL,"\0","0"
"admin","2024-07-19 07:56:26.585000","\0","",NULL,"{""elements"":[{""id"":""hayuM"",""alias"":""DatasetExtractor"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":[],""script"":[""import os\\r\\rimport logging as logger\\r\\rimport requests\\r\\rimport json\\r\\rimport boto3\\r\\rimport os\\r\\rimport shutil\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r\\r    print(dataset_id)\\r\\r    print(organization)\\r    \\r    #os.environ['AIPlatform_Referred']='https://leap2:7000'\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100,api-aicloud.ad.infosys.com'\\r\\r    \\r\\r    '''\\r\\r    call ai-plat api to get dataset config\\r\\r    return {dataset_config}\\r\\r    '''\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r    headers = {\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r        'Project': '2',\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r    }\\r\\r    try:\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r        print(\\""status code was :\\"",response.status_code)\\r\\r        response.raise_for_status()\\r\\r        dataset_config = json.loads(response.text)\\r\\r        print('dataset_details', dataset_config)\\r\\r    except json.JSONDecodeError:\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r        dataset_config = None\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r        dataset_config = None\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r        dataset_config = None\\r\\r    return dataset_config\\r\\r    \\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r    '''\\r\\r    download data from s3\\r\\r    return local file path\\r\\r    '''\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r                               endpoint_url=end_point_url,\\r\\r                               aws_access_key_id=access_key,\\r\\r                               aws_secret_access_key=secret_key,\\r\\r                               verify=False)\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r    if os.path.exists(local_path):\\r\\r        shutil.rmtree(local_path)\\r\\r    os.makedirs(local_path)\\r\\r    model_path = os.path.join(local_path)\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r        print((obj.key))\\r\\r        if obj.key.endswith('/'):\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r        else:\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r    return model_path\\r\\r    \\r\\r    \\r\\rdef DatasetExtractor():  # python-script Data\\r\\r\\r    # get dataset configurations\\r    datasetid_param = os.environ['datasetId']\\r    print(\\""dstId###\\"",datasetid_param)\\r    org_param = os.environ['org']\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        print(connection_dict)\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        path = attribute['path']\\r\\r        #obj_key = attribute['object']\\r\\r        #key = f'{path}/{obj_key}'\\r        key = f'{path}/'\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r        print(file_path)\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r    return local_path""]},""position_x"":""175"",""position_y"":""11"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""UWfIX"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""UWfIX"",""alias"":""process_folder"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""process_folder"",""requirements"":""translatepy,audio_extract,transformers"",""params"":[],""script"":[""import base64\\r\\rimport requests\\r\\rimport json\\r\\rimport os\\r\\rimport mimetypes\\r\\rfrom pydub import AudioSegment\\r\\rimport urllib3\\r\\rimport pathlib\\r\\rimport shutil\\r\\r\\r\\rurllib3.disable_warnings()\\r\\r\\r\\rmodel = \\""whisper-m\\""\\r\\r\\r\\ros.environ['itgateway_token_url'] = 'https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\ros.environ['app_itgateway_client_id'] = '9090f1c5-d381-4ef6-b845-4bac98d02fbe'\\r\\ros.environ['app_itgateway_client_secret'] = 'CNl8Q~IA-EUpiyA5Kkh97-4uH3ajo2PqQOkpHbp~'\\r\\ros.environ['itgateway_grant_type'] = 'client_credentials'\\r\\ros.environ['app_itgateway_scope'] = 'b3490b10-6bd3-4f66-908d-fa1950e46598/.default'\\r\\ros.environ[model] = 'https://api-aicloud.ad.infosys.com/v1/speech/transcribe/models/whisper-m/versions/1/infer'\\r\\r\\r\\rdef generate_token():\\r\\r    url = os.environ.get('itgateway_token_url')\\r\\r    client_id = os.environ.get('app_itgateway_client_id')\\r\\r    client_secret = os.environ.get('app_itgateway_client_secret')\\r\\r    grant_type = os.environ.get('itgateway_grant_type')\\r\\r    scope = os.environ.get('app_itgateway_scope')\\r\\r\\r\\r    payload = 'client_id={0}&client_secret={1}&scope={2}&grant_type={3}'.format(client_id, client_secret, scope, grant_type)\\r\\r    headers = {'Content-Type': 'application/x-www-form-urlencoded'}\\r\\r\\r\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=payload, verify=False,\\r\\r                                proxies={'http': os.environ.get('proxy'), 'https': os.environ.get('proxy')})\\r\\r\\r\\r    if response.status_code != 200:\\r\\r        print(\\""Failed to obtain token from the OAuth 2.0 server\\"")\\r\\r        return \\""\\""\\r\\r    else:\\r\\r        tokens = json.loads(response.text)\\r\\r        return tokens['access_token']\\r\\r\\r\\rdef transcribe(file_path, model=\\""whisper-m\\""):\\r\\r    try:\\r\\r        with open(file_path, \\""rb\\"") as f:\\r\\r            input_file = f.read()\\r\\r\\r\\r        byteArray = base64.b64encode(input_file)\\r\\r        payload = json.dumps({\\""audio_bytes\\"": str(byteArray)[2:-1]})\\r\\r        headers = {'Content-Type': 'application/json'}\\r\\r        url = os.environ.get(model)\\r\\r        headers['Authorization'] = 'Bearer ' + generate_token()\\r\\r\\r\\r        response = requests.request(\\""POST\\"", url, headers=headers, data=payload, verify=False, timeout=1000)\\r\\r\\r\\r        if response.status_code == 200:\\r\\r            print(f\\""{file_path} transcribed successfully\\"")\\r\\r            return json.loads(response.text)[\\""text\\""]\\r\\r        else:\\r\\r            print(f\\""Transcription failed with status code {response.status_code}\\"")\\r\\r            print(f\\""Response text: {response.text}\\"")\\r\\r            return response.text\\r\\r    except Exception as e:\\r\\r        print(f\\""Error during transcription: {e}\\"")\\r\\r        return \\""\\""\\r\\r\\r\\rdef extract_audio(video_file_path):\\r\\r    from audio_extract import extract_audio\\r\\r    audio_file_path = ('.').join(video_file_path.split('.')[:-1])\\r\\r    extract_audio(input_path=video_file_path, output_path=audio_file_path, output_format='wav', overwrite=True)\\r\\r    return audio_file_path + '.wav'\\r\\r\\r\\rdef chunk_audio(file_path):\\r\\r    from pydub.utils import make_chunks\\r\\r    chunk_len = 15 * 1000\\r\\r    seg = AudioSegment.from_wav(file_path)\\r\\r    chunks = make_chunks(seg, chunk_len)\\r\\r    chunks_path = ('.').join(file_path.split('.')[:-1]) + '_chunks'\\r\\r    print(\\""CHUNK PATH\\"", chunks_path)\\r\\r    os.makedirs(chunks_path, exist_ok=True)\\r\\r    for i, chunk in enumerate(chunks):\\r\\r        chunk_path = os.path.join(chunks_path, \\""c{}.wav\\"".format(i))\\r\\r        chunk.export(chunk_path, format='wav')\\r\\r    return chunks_path\\r\\r\\r\\rdef convert_audio_to_wav(audio_file_path):\\r\\r    sound = AudioSegment.from_mp3(audio_file_path)\\r\\r    file_name_without_extension = audio_file_path.rsplit('.', 1)[0]\\r\\r    wav_audio_file_path = file_name_without_extension + '.wav'\\r\\r    sound.export(wav_audio_file_path, format=\\""wav\\"")\\r\\r    return wav_audio_file_path\\r\\r\\r\\rdef get_wav_audio_length(wav_audio_file_path):\\r\\r    audio = AudioSegment.from_file(wav_audio_file_path)\\r\\r    return audio.duration_seconds\\r\\r\\r\\rdef process_folder(folder_path):\\r\\r    created_folders = []  # List to store the paths of the created .aip folders\\r\\r    for root, dirs, files in os.walk(folder_path):\\r\\r        for file_name in files:\\r\\r            file_path = os.path.join(root, file_name)\\r\\r            extension = os.path.splitext(file_name)[1]\\r\\r            mimetype = mimetypes.guess_type(file_path)[0]\\r\\r            if mimetype and ('audio' in mimetype or 'video' in mimetype):\\r\\r                transcribe_folder = os.path.join(root,'.aip', 'Transcribe')\\r\\r                os.makedirs(transcribe_folder, exist_ok=True)\\r\\r                created_folders.append(transcribe_folder)\\r\\r                transcript = ''\\r\\r                if mimetype and 'audio' in mimetype:\\r\\r                    transcript = transcribe_audio(file_path)\\r\\r                elif mimetype and 'video' in mimetype:\\r\\r                    transcript = transcribe_video(file_path)\\r\\r                    print(\\""transcript_test\\"",transcript)\\r\\r                transcript = ' '.join(transcript.split())\\r\\r                words = transcript.split()\\r\\r                lines = []\\r\\r                current_line = []\\r\\r                for i in range(0, len(words), 21):\\r\\r                    current_line = words[i:i + 21]\\r\\r                    lines.append(' '.join(current_line))\\r\\r                delimiter = '. '\\r\\r                formatted_transcript = delimiter.join(lines)\\r\\r                formatted_transcript = '\\\\n'.join(lines)\\r\\r                print(\\""formatted_transcript::\\"",formatted_transcript)\\r\\r                output_file_path = os.path.join(transcribe_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                with open(output_file_path, 'w', encoding='utf-8') as f:\\r\\r                    f.write(formatted_transcript)\\r\\r                print(f\\""Transcribed file {file_name} has been saved to {output_file_path}\\"")\\r\\r    print(\\""created folders : \\"", created_folders)\\r\\r    return created_folders\\r\\r\\r\\rdef transcribe_video(file_path):\\r\\r    import re\\r\\r    transcript = ''\\r\\r    # extract audio in wav format\\r\\r    wav_audio_file_path = extract_audio(file_path)\\r\\r    # get the duration of audio\\r\\r    duration = get_wav_audio_length(wav_audio_file_path)\\r\\r    # if duration is more than 10 seconds, chunk the audio\\r\\r    if (duration > 10):\\r\\r        chunks_path = chunk_audio(wav_audio_file_path)\\r\\r        chunked_files = []\\r\\r        for filepath in pathlib.Path(chunks_path).glob('**/*'):\\r\\r            chunked_files.append(filepath.absolute())\\r\\r        chunked_files = sorted(chunked_files, key=lambda x:float(re.findall(r\\""(\\\\d+)\\"",x.name)[0]))\\r\\r        for file in chunked_files:\\r\\r            try:\\r\\r                text = transcribe(file)\\r\\r            except Exception as e:\\r\\r                print(f\\""Error transcribing chunk {file}: {e}\\"")\\r\\r                continue\\r\\r            transcript = transcript + ' ' + text\\r\\r        shutil.rmtree(chunks_path)\\r\\r    else:\\r\\r        transcript = transcribe(file_path)\\r\\r    os.remove(wav_audio_file_path)\\r\\r    return transcript\\r\\r\\r\\rdef transcribe_audio(file_path):\\r\\r    transcript = ''\\r\\r    wav_audio_file_path = convert_audio_to_wav(file_path)\\r\\r    print(\\""wav file path\\"", wav_audio_file_path)\\r\\r    duration = get_wav_audio_length(wav_audio_file_path)\\r\\r    if duration > 10:\\r\\r        chunks_path = chunk_audio(wav_audio_file_path)\\r\\r        chunked_files = []\\r\\r        for filepath in pathlib.Path(chunks_path).glob('**/*'):\\r\\r            chunked_files.append(filepath.absolute())\\r\\r        for file in chunked_files:\\r\\r            print(\\""Transcribing file\\"", file)\\r\\r            try:\\r\\r                text = transcribe(file)\\r\\r            except Exception as e:\\r\\r                print(f\\""Error transcribing chunk {file}: {e}\\"")\\r\\r                continue\\r\\r            print(\\""text\\"", text)\\r\\r            transcript = transcript + ' ' + text\\r\\r        shutil.rmtree(chunks_path)\\r\\r    else:\\r\\r        transcript = transcribe(file_path)\\r\\r    os.remove(wav_audio_file_path)\\r\\r    return transcript\\r\\r""]},""position_x"":""408"",""position_y"":""124"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""hayuM"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""EdbSD"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":[],""script"":[""import os\\r\\rimport logging as logger\\r\\rimport requests\\r\\rimport json\\r\\rimport boto3\\r\\rimport os\\r\\rimport shutil\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r\\r    print(dataset_id)\\r\\r    print(organization)\\r    \\r    #os.environ['AIPlatform_Referred']='https://leap2:7000'\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100,api-aicloud.ad.infosys.com'\\r\\r    \\r\\r    '''\\r\\r    call ai-plat api to get dataset config\\r\\r    return {dataset_config}\\r\\r    '''\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r    headers = {\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r        'Project': '2',\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r    }\\r\\r    try:\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r        print(\\""status code was :\\"",response.status_code)\\r\\r        response.raise_for_status()\\r\\r        dataset_config = json.loads(response.text)\\r\\r        print('dataset_details', dataset_config)\\r\\r    except json.JSONDecodeError:\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r        dataset_config = None\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r        dataset_config = None\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r        dataset_config = None\\r\\r    return dataset_config\\r\\r    \\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r    '''\\r\\r    download data from s3\\r\\r    return local file path\\r\\r    '''\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r                               endpoint_url=end_point_url,\\r\\r                               aws_access_key_id=access_key,\\r\\r                               aws_secret_access_key=secret_key,\\r\\r                               verify=False)\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r    if os.path.exists(local_path):\\r\\r        shutil.rmtree(local_path)\\r\\r    os.makedirs(local_path)\\r\\r    model_path = os.path.join(local_path)\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r        print((obj.key))\\r\\r        if obj.key.endswith('/'):\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r        else:\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r    return model_path\\r\\r    \\r\\r    \\r\\rdef DatasetExtractor():  # python-script Data\\r\\r\\r    # get dataset configurations\\r    datasetid_param = os.environ['datasetId']\\r    print(\\""dstId###\\"",datasetid_param)\\r    org_param = os.environ['org']\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        print(connection_dict)\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        path = attribute['path']\\r\\r        #obj_key = attribute['object']\\r\\r        #key = f'{path}/{obj_key}'\\r        key = f'{path}/'\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r        print(file_path)\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r    return local_path""]}]},{""id"":""EdbSD"",""alias"":""UploadToNutanix"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""UploadToNutanix"",""requirements"":"""",""params"":[],""script"":[""def UploadToNutanix(localpaths):\\r    datasetid_param = os.environ['datasetId']\\r    print(\\""datasetId###\\"",datasetid_param)\\r    org_param = os.environ['org']\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetconfig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetconfig['datasource']['type']\\r\\r\\t\\r\\r    if dataset_type == 'S3':\\r\\r        viewtype = datasetconfig['views']\\r\\r        connection_dict = json.loads(datasetconfig['datasource']['connectionDetails'])\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetconfig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        for localpath in set(localpaths):  # Convert localpaths to a set to remove duplicates\\r\\r            for root, dirs, files in os.walk(localpath):\\r                print(\\""rroot\\"",root)\\r                print(\\""ddirs\\"",dirs)\\r                print(\\""files\\"",files)\\r                print(\\""localpath:::\\"",localpath)\\r\\r                if 'Transcribe' in root:\\r\\r                    dirs[:] = []  # Skip subdirectories\\r\\r                else:\\r\\r                    transcribe_path = os.path.join(root,'.aip' 'Transcribe')\\r\\r                    print(\\""transcribe_path=\\"", transcribe_path)\\r\\r                    os.makedirs(transcribe_path, exist_ok=True)\\r\\r                for file in files:\\r\\r                    local_file = os.path.join(root, file)\\r                    print(\\""rroot in for file\\"",root)\\r                    print(\\""ffile:::\\"",file)\\r                    print(\\""llocal_file\\"",local_file)\\r\\r                    directories = local_file.split(os.sep)\\r                    print(\\""directories::::\\"",directories)\\r\\r                    #if viewtype == 'Folder View':\\r\\r                    if viewtype in ['Folder View', 'Audio View', 'Video View', 'Pdf View']:\\r                        new_path = gen_path(directories)\\r                        print(\\""nnewwpath::\\"",new_path)\\r\\r                        # new_path = '/'.join(directories[2:])\\r\\r                        print(\\""new path iin if bblock= \\"",new_path)\\r\\r                    else:\\r\\r                        new_path = '/'.join(directories[3:])\\r                        print(\\""new path in else bblock= \\"",new_path)\\r\\r                    print(\\""local files:\\"", local_file)\\r\\r                    print(\\""new_path:\\"", new_path)\\r\\r                    print(\\""attribute paths=\\"",attribute['path'])\\r\\r                    object_key = attribute['path']+'/'+new_path\\r\\r                    print(\\""object key: \\"", object_key)\\r\\r                    metadata = None\\r\\r                    s3 = boto3.resource('s3', endpoint_url=s3_end_point_url,\\r\\r                                        aws_access_key_id=s3_access_key,\\r\\r                                        aws_secret_access_key=s3_secret_key,\\r\\r                                        verify=False)\\r\\r                    extra_args = {'Metadata': metadata} if metadata else None\\r\\r                    s3.Bucket(bucket).upload_file(local_file, object_key, ExtraArgs=extra_args)\\r\\r                    print(f'File saved to S3: s3://{bucket}/' + object_key)\\rdef gen_path(path):\\r    index = path.index('.aip')\\r    newpath='/'.join(path[index:])\\r    return newpath\\r    ""]},""position_x"":""656"",""position_y"":""0"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""UWfIX"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""process_folder"",""requirements"":""translatepy,audio_extract,transformers"",""params"":[],""script"":[""import base64\\r\\rimport requests\\r\\rimport json\\r\\rimport os\\r\\rimport mimetypes\\r\\rfrom pydub import AudioSegment\\r\\rimport urllib3\\r\\rimport pathlib\\r\\rimport shutil\\r\\r\\r\\rurllib3.disable_warnings()\\r\\r\\r\\rmodel = \\""whisper-m\\""\\r\\r\\r\\ros.environ['itgateway_token_url'] = 'https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\ros.environ['app_itgateway_client_id'] = '9090f1c5-d381-4ef6-b845-4bac98d02fbe'\\r\\ros.environ['app_itgateway_client_secret'] = 'CNl8Q~IA-EUpiyA5Kkh97-4uH3ajo2PqQOkpHbp~'\\r\\ros.environ['itgateway_grant_type'] = 'client_credentials'\\r\\ros.environ['app_itgateway_scope'] = 'b3490b10-6bd3-4f66-908d-fa1950e46598/.default'\\r\\ros.environ[model] = 'https://api-aicloud.ad.infosys.com/v1/speech/transcribe/models/whisper-m/versions/1/infer'\\r\\r\\r\\rdef generate_token():\\r\\r    url = os.environ.get('itgateway_token_url')\\r\\r    client_id = os.environ.get('app_itgateway_client_id')\\r\\r    client_secret = os.environ.get('app_itgateway_client_secret')\\r\\r    grant_type = os.environ.get('itgateway_grant_type')\\r\\r    scope = os.environ.get('app_itgateway_scope')\\r\\r\\r\\r    payload = 'client_id={0}&client_secret={1}&scope={2}&grant_type={3}'.format(client_id, client_secret, scope, grant_type)\\r\\r    headers = {'Content-Type': 'application/x-www-form-urlencoded'}\\r\\r\\r\\r    response = requests.request(\\""POST\\"", url, headers=headers, data=payload, verify=False,\\r\\r                                proxies={'http': os.environ.get('proxy'), 'https': os.environ.get('proxy')})\\r\\r\\r\\r    if response.status_code != 200:\\r\\r        print(\\""Failed to obtain token from the OAuth 2.0 server\\"")\\r\\r        return \\""\\""\\r\\r    else:\\r\\r        tokens = json.loads(response.text)\\r\\r        return tokens['access_token']\\r\\r\\r\\rdef transcribe(file_path, model=\\""whisper-m\\""):\\r\\r    try:\\r\\r        with open(file_path, \\""rb\\"") as f:\\r\\r            input_file = f.read()\\r\\r\\r\\r        byteArray = base64.b64encode(input_file)\\r\\r        payload = json.dumps({\\""audio_bytes\\"": str(byteArray)[2:-1]})\\r\\r        headers = {'Content-Type': 'application/json'}\\r\\r        url = os.environ.get(model)\\r\\r        headers['Authorization'] = 'Bearer ' + generate_token()\\r\\r\\r\\r        response = requests.request(\\""POST\\"", url, headers=headers, data=payload, verify=False, timeout=1000)\\r\\r\\r\\r        if response.status_code == 200:\\r\\r            print(f\\""{file_path} transcribed successfully\\"")\\r\\r            return json.loads(response.text)[\\""text\\""]\\r\\r        else:\\r\\r            print(f\\""Transcription failed with status code {response.status_code}\\"")\\r\\r            print(f\\""Response text: {response.text}\\"")\\r\\r            return response.text\\r\\r    except Exception as e:\\r\\r        print(f\\""Error during transcription: {e}\\"")\\r\\r        return \\""\\""\\r\\r\\r\\rdef extract_audio(video_file_path):\\r\\r    from audio_extract import extract_audio\\r\\r    audio_file_path = ('.').join(video_file_path.split('.')[:-1])\\r\\r    extract_audio(input_path=video_file_path, output_path=audio_file_path, output_format='wav', overwrite=True)\\r\\r    return audio_file_path + '.wav'\\r\\r\\r\\rdef chunk_audio(file_path):\\r\\r    from pydub.utils import make_chunks\\r\\r    chunk_len = 15 * 1000\\r\\r    seg = AudioSegment.from_wav(file_path)\\r\\r    chunks = make_chunks(seg, chunk_len)\\r\\r    chunks_path = ('.').join(file_path.split('.')[:-1]) + '_chunks'\\r\\r    print(\\""CHUNK PATH\\"", chunks_path)\\r\\r    os.makedirs(chunks_path, exist_ok=True)\\r\\r    for i, chunk in enumerate(chunks):\\r\\r        chunk_path = os.path.join(chunks_path, \\""c{}.wav\\"".format(i))\\r\\r        chunk.export(chunk_path, format='wav')\\r\\r    return chunks_path\\r\\r\\r\\rdef convert_audio_to_wav(audio_file_path):\\r\\r    sound = AudioSegment.from_mp3(audio_file_path)\\r\\r    file_name_without_extension = audio_file_path.rsplit('.', 1)[0]\\r\\r    wav_audio_file_path = file_name_without_extension + '.wav'\\r\\r    sound.export(wav_audio_file_path, format=\\""wav\\"")\\r\\r    return wav_audio_file_path\\r\\r\\r\\rdef get_wav_audio_length(wav_audio_file_path):\\r\\r    audio = AudioSegment.from_file(wav_audio_file_path)\\r\\r    return audio.duration_seconds\\r\\r\\r\\rdef process_folder(folder_path):\\r\\r    created_folders = []  # List to store the paths of the created .aip folders\\r\\r    for root, dirs, files in os.walk(folder_path):\\r\\r        for file_name in files:\\r\\r            file_path = os.path.join(root, file_name)\\r\\r            extension = os.path.splitext(file_name)[1]\\r\\r            mimetype = mimetypes.guess_type(file_path)[0]\\r\\r            if mimetype and ('audio' in mimetype or 'video' in mimetype):\\r\\r                transcribe_folder = os.path.join(root,'.aip', 'Transcribe')\\r\\r                os.makedirs(transcribe_folder, exist_ok=True)\\r\\r                created_folders.append(transcribe_folder)\\r\\r                transcript = ''\\r\\r                if mimetype and 'audio' in mimetype:\\r\\r                    transcript = transcribe_audio(file_path)\\r\\r                elif mimetype and 'video' in mimetype:\\r\\r                    transcript = transcribe_video(file_path)\\r\\r                    print(\\""transcript_test\\"",transcript)\\r\\r                transcript = ' '.join(transcript.split())\\r\\r                words = transcript.split()\\r\\r                lines = []\\r\\r                current_line = []\\r\\r                for i in range(0, len(words), 21):\\r\\r                    current_line = words[i:i + 21]\\r\\r                    lines.append(' '.join(current_line))\\r\\r                delimiter = '. '\\r\\r                formatted_transcript = delimiter.join(lines)\\r\\r                formatted_transcript = '\\\\n'.join(lines)\\r\\r                print(\\""formatted_transcript::\\"",formatted_transcript)\\r\\r                output_file_path = os.path.join(transcribe_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                with open(output_file_path, 'w', encoding='utf-8') as f:\\r\\r                    f.write(formatted_transcript)\\r\\r                print(f\\""Transcribed file {file_name} has been saved to {output_file_path}\\"")\\r\\r    print(\\""created folders : \\"", created_folders)\\r\\r    return created_folders\\r\\r\\r\\rdef transcribe_video(file_path):\\r\\r    import re\\r\\r    transcript = ''\\r\\r    # extract audio in wav format\\r\\r    wav_audio_file_path = extract_audio(file_path)\\r\\r    # get the duration of audio\\r\\r    duration = get_wav_audio_length(wav_audio_file_path)\\r\\r    # if duration is more than 10 seconds, chunk the audio\\r\\r    if (duration > 10):\\r\\r        chunks_path = chunk_audio(wav_audio_file_path)\\r\\r        chunked_files = []\\r\\r        for filepath in pathlib.Path(chunks_path).glob('**/*'):\\r\\r            chunked_files.append(filepath.absolute())\\r\\r        chunked_files = sorted(chunked_files, key=lambda x:float(re.findall(r\\""(\\\\d+)\\"",x.name)[0]))\\r\\r        for file in chunked_files:\\r\\r            try:\\r\\r                text = transcribe(file)\\r\\r            except Exception as e:\\r\\r                print(f\\""Error transcribing chunk {file}: {e}\\"")\\r\\r                continue\\r\\r            transcript = transcript + ' ' + text\\r\\r        shutil.rmtree(chunks_path)\\r\\r    else:\\r\\r        transcript = transcribe(file_path)\\r\\r    os.remove(wav_audio_file_path)\\r\\r    return transcript\\r\\r\\r\\rdef transcribe_audio(file_path):\\r\\r    transcript = ''\\r\\r    wav_audio_file_path = convert_audio_to_wav(file_path)\\r\\r    print(\\""wav file path\\"", wav_audio_file_path)\\r\\r    duration = get_wav_audio_length(wav_audio_file_path)\\r\\r    if duration > 10:\\r\\r        chunks_path = chunk_audio(wav_audio_file_path)\\r\\r        chunked_files = []\\r\\r        for filepath in pathlib.Path(chunks_path).glob('**/*'):\\r\\r            chunked_files.append(filepath.absolute())\\r\\r        for file in chunked_files:\\r\\r            print(\\""Transcribing file\\"", file)\\r\\r            try:\\r\\r                text = transcribe(file)\\r\\r            except Exception as e:\\r\\r                print(f\\""Error transcribing chunk {file}: {e}\\"")\\r\\r                continue\\r\\r            print(\\""text\\"", text)\\r\\r            transcript = transcript + ' ' + text\\r\\r        shutil.rmtree(chunks_path)\\r\\r    else:\\r\\r        transcript = transcribe(file_path)\\r\\r    os.remove(wav_audio_file_path)\\r\\r    return transcript\\r\\r""]},{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":[],""script"":[""import os\\r\\rimport logging as logger\\r\\rimport requests\\r\\rimport json\\r\\rimport boto3\\r\\rimport os\\r\\rimport shutil\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r\\r    print(dataset_id)\\r\\r    print(organization)\\r    \\r    #os.environ['AIPlatform_Referred']='https://leap2:7000'\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100,api-aicloud.ad.infosys.com'\\r\\r    \\r\\r    '''\\r\\r    call ai-plat api to get dataset config\\r\\r    return {dataset_config}\\r\\r    '''\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r    headers = {\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r        'Project': '2',\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r    }\\r\\r    try:\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r        print(\\""status code was :\\"",response.status_code)\\r\\r        response.raise_for_status()\\r\\r        dataset_config = json.loads(response.text)\\r\\r        print('dataset_details', dataset_config)\\r\\r    except json.JSONDecodeError:\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r        dataset_config = None\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r        dataset_config = None\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r        dataset_config = None\\r\\r    return dataset_config\\r\\r    \\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r    '''\\r\\r    download data from s3\\r\\r    return local file path\\r\\r    '''\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r                               endpoint_url=end_point_url,\\r\\r                               aws_access_key_id=access_key,\\r\\r                               aws_secret_access_key=secret_key,\\r\\r                               verify=False)\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r    if os.path.exists(local_path):\\r\\r        shutil.rmtree(local_path)\\r\\r    os.makedirs(local_path)\\r\\r    model_path = os.path.join(local_path)\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r        print((obj.key))\\r\\r        if obj.key.endswith('/'):\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r        else:\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r    return model_path\\r\\r    \\r\\r    \\r\\rdef DatasetExtractor():  # python-script Data\\r\\r\\r    # get dataset configurations\\r    datasetid_param = os.environ['datasetId']\\r    print(\\""dstId###\\"",datasetid_param)\\r    org_param = os.environ['org']\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        print(connection_dict)\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        path = attribute['path']\\r\\r        #obj_key = attribute['object']\\r\\r        #key = f'{path}/{obj_key}'\\r        key = f'{path}/'\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r        print(file_path)\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r    return local_path""]}]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""}],""environment"":[{""name"":""AIPlatform_Referrer"",""value"":""https://leap2:7000""},{""name"":""no_proxy"",""value"":""victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:7000""},{""name"":""proxy"",""value"":""http://blrproxy.ad.infosys.com:80""}],""default_runtime"":""{\\""dsAlias\\"":\\""LocalCluster\\"",\\""dsName\\"":\\""LEALCLCL12132\\"",\\""type\\"":\\""REMOTE\\""}""}","meghashree.m02@infosys.com","Transcribe","2024-10-29 09:31:41","LEOTST_T65351","leo1311","DragNDropLite","35","N","pipeline","{""35"":{""taskId"":""c0604a8e-4de8-4759-ba30-8c52b0690b8f""}}","\0","0"
"admin","2024-07-18 11:34:33.373000","\0","",NULL,"{""elements"":[{""id"":""eoXeL"",""alias"":""DatasetExtractor"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":[],""script"":[""import os\\r\\rimport json\\r\\rimport requests\\r\\rimport shutil\\r\\rimport boto3\\r\\r\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100,api-aicloud.ad.infosys.com'\\r\\r\\r    '''\\r\\r\\r\\r    call ai-plat api to get dataset config\\r\\r\\r\\r    return {dataset_config}\\r\\r\\r\\r    '''\\r\\r\\r\\r   #url = f\\""https://infyaiplat.ad.infosys.com/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r    #url = f\\""{os.environ['AIPlatform_Referrer']}/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r\\r    headers = {\\r\\r\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r\\r\\r        'Project': '2',\\r\\r\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r\\r\\r    }\\r\\r\\r\\r    try:\\r\\r\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r\\r\\r        response.raise_for_status()\\r\\r\\r\\r        dataset_config = json.loads(response.text)\\r\\r\\r\\r        print('dataset_details', dataset_config)\\r\\r\\r\\r    except json.JSONDecodeError:\\r\\r\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r\\r\\r        dataset_config = None\\r\\r\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r\\r\\r        dataset_config = None\\r\\r\\r\\r    except Exception as e:\\r\\r\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r\\r\\r        dataset_config = None\\r\\r\\r\\r    return dataset_config\\r\\r\\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r\\r\\r    '''\\r\\r\\r\\r    download data from s3\\r\\r\\r\\r    return local file path\\r\\r\\r\\r    '''\\r\\r\\r\\r    print(\\""obj key\\"",obj_key)\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r\\r\\r                               endpoint_url=end_point_url,\\r\\r\\r\\r                               aws_access_key_id=access_key,\\r\\r\\r\\r                               aws_secret_access_key=secret_key,\\r\\r\\r\\r                               verify=False)\\r\\r\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r\\r\\r    print(\\""local path:\\"",local_path)\\r\\r\\r\\r    if os.path.exists(local_path):\\r\\r\\r\\r        shutil.rmtree(local_path)\\r\\r\\r\\r    os.makedirs(local_path)\\r\\r\\r\\r    model_path = os.path.join(local_path)\\r\\r\\r\\r    print(\\""model path:\\"",model_path)\\r\\r    print(\\""objects:\\"",bucket_object.objects)\\r\\r\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r\\r\\r        print(\\""obj key\\"",obj.key)\\r\\r\\r\\r        if obj.key.endswith('/'):\\r\\r\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r\\r\\r        else:\\r\\r\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r\\r\\r            print(f\\""Downloaded {obj.key} to {model_path}/{obj.key}\\"")\\r\\r\\r\\r            print(\\""res\\"",res)\\r\\r\\r\\r    return model_path\\r\\r\\r\\rdef DatasetExtractor():  # python-script Data\\r\\r\\r    # get dataset configuration\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""dstId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r\\r\\r    if dataset_type == 'S3':\\r\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r\\r\\r        print(connection_dict)\\r\\r\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r\\r\\r        bucket = attribute['bucket']\\r\\r\\r\\r        path = attribute['path']\\r\\r\\r\\r        obj_key = attribute['object']\\r\\r        \\r\\r        key = f'{path}/'\\r\\r\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r\\r\\r        print(file_path)\\r\\r\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r\\r\\r    return local_path""]},""position_x"":""189"",""position_y"":""19"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""fgKiR"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""fgKiR"",""alias"":""process_folder"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""process_folder"",""requirements"":""translatepy,PyPDF2,docx,exceptions,python-docx,pptx,python-pptx,collections,re"",""params"":[],""script"":[""import requests\\r\\rimport json\\r\\rimport os\\r\\rimport mimetypes\\r\\rimport urllib3\\r\\rimport shutil\\r\\rimport re\\r\\rfrom translatepy import Translator\\r\\rfrom PyPDF2 import PdfReader\\r\\rfrom docx import Document\\r\\rfrom pptx import Presentation\\r\\rurllib3.disable_warnings()\\r\\rmodel = \\""whisper-m\\""\\r\\ros.environ['itgateway_token_url'] = 'https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\ros.environ['app_itgateway_client_id'] = '9090f1c5-d381-4ef6-b845-4bac98d02fbe'\\r\\ros.environ['app_itgateway_client_secret'] = 'CNl8Q~IA-EUpiyA5Kkh97-4uH3ajo2PqQOkpHbp~'\\r\\ros.environ['itgateway_grant_type'] = 'client_credentials'\\r\\ros.environ['app_itgateway_scope'] = 'b3490b10-6bd3-4f66-908d-fa1950e46598/.default'\\r\\ros.environ[model] = 'https://api-aicloud.ad.infosys.com/v1/speech/transcribe/models/whisper-m/versions/1/infer'\\r\\rdef extract_text_from_pdf(file_path):\\r    text = \\""\\""\\r    try:\\r        with open(file_path, 'rb') as f:\\r            pdf = PdfReader(f)\\r            text = \\"" \\"".join(page.extract_text() for page in pdf.pages)\\r    except Exception as e:\\r        print(f\\""Failed to extract text from PDF: {e}\\"")\\r    return text\\r\\r# Assuming file_path is the path to the PDF file\\r\\r\\rdef process_folder(folder_path):\\r\\r    targetlanguage_param=os.environ['targetLanguage']\\r\\r    print(targetlanguage_param)\\r\\r    print(\\""Starting process_folder function with folder_path:\\"", folder_path)\\r\\r    created_folders = []  # List to store the paths of the created .aip folders\\r\\r    queue = []\\r\\r    queue.append(folder_path)\\r\\r    print(\\""queue:\\"",queue)\\r\\r    translator = Translator()\\r\\r    while len(queue) > 0:\\r\\r        current_folder = queue[0]\\r\\r        print(\\""Processing folder:\\"", current_folder)\\r\\r        file_exist = False\\r\\r        for file_name in os.listdir(current_folder):\\r\\r            if file_name == \\""Transcribe\\"":  # Skip the transcribe folder\\r\\r                print(\\""Skipping transcribe folder\\"")\\r\\r                continue\\r\\r            file_path = os.path.join(current_folder, file_name)\\r\\r            print(\\""file_path:\\"",file_path)\\r\\r            if os.path.isfile(file_path):\\r\\r                file_exist = True\\r\\r                print(\\""Found file:\\"", file_path)\\r\\r            elif not os.path.isfile(file_path) and not file_name.startswith('.'):\\r\\r                queue.append(os.path.join(current_folder, file_name))\\r\\r                print(\\""Adding folder to queue:\\"", os.path.join(current_folder, file_name))\\r\\r        if file_exist:\\r\\r            print(\\""Files exist in current folder\\"")\\r\\r            print(\\""Current File - \\"",file_path)\\r\\r            translation_folder = os.path.join(current_folder, '.aip','Translation')\\r\\r            os.makedirs(translation_folder, exist_ok=True)\\r\\r            created_folders.append(os.path.dirname(translation_folder))# Add the created .aip folder path to the list\\r\\r            print(\\""Created translation folder:\\"", translation_folder)\\r\\r            for file_name in os.listdir(current_folder):\\r\\r                file_path = os.path.join(current_folder, file_name)\\r\\r                text_to_translate = ''\\r\\r                if os.path.isfile(file_path):\\r\\r                    print(\\""Processing file:\\"", file_path)\\r\\r                    extension = os.path.splitext(file_name)[1]\\r\\r                    mimetype = mimetypes.guess_type(file_path)[0]\\r\\r                    if mimetype and ('audio' in mimetype or 'video' in mimetype):\\r\\r                        transcript_folder = os.path.join(current_folder, '.aip','Transcribe')\\r\\r                        print(\\""transcript_folder path=\\"",transcript_folder)\\r\\r                        transcript_path = os.path.join(transcript_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                        # with open(transcript_path, 'r', encoding='utf-8') as f:\\r\\r                        #      transcript_content = f.read()\\r\\r                        #      print(\\""Transcript content:\\"", transcript_content)\\r\\r                        print(\\""transcript_path = \\"",transcript_path)\\r\\r                        if os.path.exists(transcript_path):\\r\\r                            with open(transcript_path, 'r', encoding='utf-8') as f:\\r\\r                                transcript = f.read()\\r\\r                            text_to_translate =transcript\\r\\r                            print(\\""Transcript contents:\\"", transcript)\\r\\r                            print(\\""Transcript found for file:\\"", file_name)\\r\\r                        else:\\r\\r                            print(\\""Transcript not found for file: \\"",file_name)\\r\\r                    elif extension in ['.txt', '.pdf', '.docx', '.pptx']:\\r\\r                        print(\\""Processing text, pdf, docx, or pptx file:\\"", file_name)\\r\\r                        if extension == \\"".txt\\"":\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_to_translate = f.read()\\r\\r                        elif extension == \\"".pdf\\"":\\r\\r                            with open(file_path, 'rb') as f:\\r\\r                                pdf = PdfReader(f)\\r\\r                                # print(\\""PdfReader\\"",pdf)\\r                                text_to_translate= extract_text_from_pdf(file_path)\\r\\r                                #text_to_translate = \\"" \\"".join(page.extract_text() for page in pdf.pages)\\r\\r                                \\r\\r                        elif extension == \\"".docx\\"":\\r\\r                            doc = Document(file_path)\\r\\r                            text_to_translate = \\"" \\"".join(paragraph.text for paragraph in doc.paragraphs)\\r\\r                        elif extension == \\"".pptx\\"":\\r\\r                            pres = Presentation(file_path)\\r\\r                            text_to_translate = \\"" \\"".join(\\r\\r                                \\"" \\"".join(shape.text for shape in slide.shapes if shape.has_text_frame) for slide in\\r\\r                                pres.slides)\\r\\r                        else:\\r\\r                            print(f\\""Skipping file {file_name} as it is not supported\\"")\\r\\r                            continue\\r\\r                    if text_to_translate !='':\\r\\r                        print(\\""Translating text for file:\\"", file_name)\\r\\r                        try:\\r\\r                            language = translator.language(text_to_translate[0:100])\\r\\r                            # base_language_info = f\\""The base language written in file: {language.result}  \\""\\r\\r                            if str(language.result) != targetlanguage_param:\\r                                \\r                                num_sentences = 10  # Number of sentences to send in each translation request                                        targetlanguage_param, translator)\\r                                translated_text = translate_text_in_sentence_batches(text_to_translate, num_sentences,\\r                                                                                     targetlanguage_param, translator)\\r                                # chunk_size = 500  # Define the chunk size based on your needs\\r\\r                                # translated_text = translate_text_in_chunks(text_to_translate, chunk_size,\\r                                #                                           targetlanguage_param, translator)\\r                                #translated_text = translator.translate(text_to_translate,targetlanguage_param ).result\\r\\r                                # print(\\""translated_text in if\\"",translated_text)\\r\\r                            else:\\r\\r                                translated_text = text_to_translate\\r\\r                                # print(\\""translated_text in else\\"",translated_text)\\r\\r                        except:\\r\\r                            print(\\""Translation failed\\"")\\r\\r                        #output_file_path = os.path.join(translation_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                        output_file_path = os.path.join(translation_folder, f\\""{os.path.splitext(file_name)[0]}_{targetlanguage_param}.txt\\"")\\r\\r                        with open(output_file_path, 'w', encoding='utf-8') as f:\\r\\r                            f.write(translated_text)\\r\\r                        print(f\\""Translated file {file_name} has been saved to {output_file_path}\\"")\\r\\r                        file_path = output_file_path\\r\\r        queue.pop(0)\\r\\r        print(\\""Finished processing folder:\\"", folder_path)\\r\\r    return created_folders\\r\\r# def chunk_text(text, chunk_size):\\r#     \\""\\""\\""Splits the text into chunks of specified size.\\""\\""\\""\\r#     for i in range(0, len(text), chunk_size):\\r#         yield text[i:i + chunk_size]\\r\\r\\r# def translate_text_in_chunks(text, chunk_size, targetlanguage_param, translator):\\r#     \\""\\""\\""Translates text in chunks and combines the results.\\""\\""\\""\\r#     translated_text = \\""\\""\\r\\r#     for chunk in chunk_text(text, chunk_size):\\r#         translated_chunk = translator.translate(chunk, targetlanguage_param).result\\r#         translated_text += translated_chunk\\r\\r#     return translated_text\\rdef split_text_by_sentences(text):\\r    \\""\\""\\""Splits the text into a list of sentences.\\""\\""\\""\\r    sentence_endings = re.compile(r'(?<=[.!?]) +')\\r    sentences = sentence_endings.split(text)\\r    return sentences\\r\\r\\rdef chunk_sentences(sentences, num_sentences):\\r    \\""\\""\\""Yields chunks of a specified number of sentences.\\""\\""\\""\\r    for i in range(0, len(sentences), num_sentences):\\r        yield \\"" \\"".join(sentences[i:i + num_sentences])\\r\\r\\rdef translate_text_in_sentence_batches(text, num_sentences, targetlanguage_param, translator):\\r    \\""\\""\\""Translates text in batches of sentences and combines the results.\\""\\""\\""\\r    sentences = split_text_by_sentences(text)\\r    translated_text = \\""\\""\\r\\r    for sentence_chunk in chunk_sentences(sentences, num_sentences):\\r        translated_chunk = translator.translate(sentence_chunk, targetlanguage_param).result\\r        translated_text += translated_chunk + \\"" \\""  # Adding a space to separate the translated chunks\\r\\r    return translated_text.strip()""]},""position_x"":""414"",""position_y"":""141"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""eoXeL"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""BHlaI"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":[],""script"":[""import os\\r\\rimport json\\r\\rimport requests\\r\\rimport shutil\\r\\rimport boto3\\r\\r\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100,api-aicloud.ad.infosys.com'\\r\\r\\r    '''\\r\\r\\r\\r    call ai-plat api to get dataset config\\r\\r\\r\\r    return {dataset_config}\\r\\r\\r\\r    '''\\r\\r\\r\\r   #url = f\\""https://infyaiplat.ad.infosys.com/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r    #url = f\\""{os.environ['AIPlatform_Referrer']}/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r\\r    headers = {\\r\\r\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r\\r\\r        'Project': '2',\\r\\r\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r\\r\\r    }\\r\\r\\r\\r    try:\\r\\r\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r\\r\\r        response.raise_for_status()\\r\\r\\r\\r        dataset_config = json.loads(response.text)\\r\\r\\r\\r        print('dataset_details', dataset_config)\\r\\r\\r\\r    except json.JSONDecodeError:\\r\\r\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r\\r\\r        dataset_config = None\\r\\r\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r\\r\\r        dataset_config = None\\r\\r\\r\\r    except Exception as e:\\r\\r\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r\\r\\r        dataset_config = None\\r\\r\\r\\r    return dataset_config\\r\\r\\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r\\r\\r    '''\\r\\r\\r\\r    download data from s3\\r\\r\\r\\r    return local file path\\r\\r\\r\\r    '''\\r\\r\\r\\r    print(\\""obj key\\"",obj_key)\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r\\r\\r                               endpoint_url=end_point_url,\\r\\r\\r\\r                               aws_access_key_id=access_key,\\r\\r\\r\\r                               aws_secret_access_key=secret_key,\\r\\r\\r\\r                               verify=False)\\r\\r\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r\\r\\r    print(\\""local path:\\"",local_path)\\r\\r\\r\\r    if os.path.exists(local_path):\\r\\r\\r\\r        shutil.rmtree(local_path)\\r\\r\\r\\r    os.makedirs(local_path)\\r\\r\\r\\r    model_path = os.path.join(local_path)\\r\\r\\r\\r    print(\\""model path:\\"",model_path)\\r\\r    print(\\""objects:\\"",bucket_object.objects)\\r\\r\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r\\r\\r        print(\\""obj key\\"",obj.key)\\r\\r\\r\\r        if obj.key.endswith('/'):\\r\\r\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r\\r\\r        else:\\r\\r\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r\\r\\r            print(f\\""Downloaded {obj.key} to {model_path}/{obj.key}\\"")\\r\\r\\r\\r            print(\\""res\\"",res)\\r\\r\\r\\r    return model_path\\r\\r\\r\\rdef DatasetExtractor():  # python-script Data\\r\\r\\r    # get dataset configuration\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""dstId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r\\r\\r    if dataset_type == 'S3':\\r\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r\\r\\r        print(connection_dict)\\r\\r\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r\\r\\r        bucket = attribute['bucket']\\r\\r\\r\\r        path = attribute['path']\\r\\r\\r\\r        obj_key = attribute['object']\\r\\r        \\r\\r        key = f'{path}/'\\r\\r\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r\\r\\r        print(file_path)\\r\\r\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r\\r\\r    return local_path""]}]},{""id"":""BHlaI"",""alias"":""UploadToNutanix"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""UploadToNutanix"",""requirements"":"""",""params"":[],""script"":[""def UploadToNutanix(localpaths):\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""dstId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetconfig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetconfig['datasource']['type']\\r\\r\\t\\r\\r    if dataset_type == 'S3':\\r\\r        viewtype = datasetconfig['views']\\r\\r        connection_dict = json.loads(datasetconfig['datasource']['connectionDetails'])\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetconfig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        for localpath in set(localpaths):  # Convert localpaths to a set to remove duplicates\\r\\r            for root, dirs, files in os.walk(localpath):\\r\\r                if 'Transcribe' in root:\\r\\r                    dirs[:] = []  # Skip subdirectories\\r\\r                else:\\r\\r                    transcribe_path = os.path.join(root,'.aip' 'Transcribe')\\r\\r                    print(\\""transcribe_path=\\"", transcribe_path)\\r\\r                    os.makedirs(transcribe_path, exist_ok=True)\\r\\r                for file in files:\\r\\r                    local_file = os.path.join(root, file)\\r\\r                    directories = local_file.split(os.sep)\\r                    print(\\""directories::::\\"",directories)\\r\\r                    #if viewtype == 'Folder View':\\r\\r                    if viewtype in ['Folder View', 'Audio View', 'Video View', 'Pdf View']:\\r                        new_path = gen_path(directories)\\r                        print(\\""nnewwpath::\\"",new_path)\\r\\r                        # new_path = '/'.join(directories[2:])\\r\\r                    else:\\r\\r                        new_path = '/'.join(directories[3:])\\r\\r                    print(\\""local files:\\"", local_file)\\r\\r                    print(\\""new_path:\\"", new_path)\\r\\r                    print(\\""attribute paths=\\"",attribute['path'])\\r\\r                    object_key = attribute['path']+'/'+new_path\\r\\r                    print(\\""object key: \\"", object_key)\\r\\r                    metadata = None\\r\\r                    s3 = boto3.resource('s3', endpoint_url=s3_end_point_url,\\r\\r                                        aws_access_key_id=s3_access_key,\\r\\r                                        aws_secret_access_key=s3_secret_key,\\r\\r                                        verify=False)\\r\\r                    extra_args = {'Metadata': metadata} if metadata else None\\r\\r                    s3.Bucket(bucket).upload_file(local_file, object_key, ExtraArgs=extra_args)\\r\\r                    print(f'File saved to S3: s3://{bucket}/' + object_key)\\rdef gen_path(path):\\r    index = path.index('.aip')\\r    newpath='/'.join(path[index:])\\r    return newpath\\r    ""]},""position_x"":""613"",""position_y"":""11"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""fgKiR"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""process_folder"",""requirements"":""translatepy,PyPDF2,docx,exceptions,python-docx,pptx,python-pptx,collections,re"",""params"":[],""script"":[""import requests\\r\\rimport json\\r\\rimport os\\r\\rimport mimetypes\\r\\rimport urllib3\\r\\rimport shutil\\r\\rimport re\\r\\rfrom translatepy import Translator\\r\\rfrom PyPDF2 import PdfReader\\r\\rfrom docx import Document\\r\\rfrom pptx import Presentation\\r\\rurllib3.disable_warnings()\\r\\rmodel = \\""whisper-m\\""\\r\\ros.environ['itgateway_token_url'] = 'https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\ros.environ['app_itgateway_client_id'] = '9090f1c5-d381-4ef6-b845-4bac98d02fbe'\\r\\ros.environ['app_itgateway_client_secret'] = 'CNl8Q~IA-EUpiyA5Kkh97-4uH3ajo2PqQOkpHbp~'\\r\\ros.environ['itgateway_grant_type'] = 'client_credentials'\\r\\ros.environ['app_itgateway_scope'] = 'b3490b10-6bd3-4f66-908d-fa1950e46598/.default'\\r\\ros.environ[model] = 'https://api-aicloud.ad.infosys.com/v1/speech/transcribe/models/whisper-m/versions/1/infer'\\r\\rdef extract_text_from_pdf(file_path):\\r    text = \\""\\""\\r    try:\\r        with open(file_path, 'rb') as f:\\r            pdf = PdfReader(f)\\r            text = \\"" \\"".join(page.extract_text() for page in pdf.pages)\\r    except Exception as e:\\r        print(f\\""Failed to extract text from PDF: {e}\\"")\\r    return text\\r\\r# Assuming file_path is the path to the PDF file\\r\\r\\rdef process_folder(folder_path):\\r\\r    targetlanguage_param=os.environ['targetLanguage']\\r\\r    print(targetlanguage_param)\\r\\r    print(\\""Starting process_folder function with folder_path:\\"", folder_path)\\r\\r    created_folders = []  # List to store the paths of the created .aip folders\\r\\r    queue = []\\r\\r    queue.append(folder_path)\\r\\r    print(\\""queue:\\"",queue)\\r\\r    translator = Translator()\\r\\r    while len(queue) > 0:\\r\\r        current_folder = queue[0]\\r\\r        print(\\""Processing folder:\\"", current_folder)\\r\\r        file_exist = False\\r\\r        for file_name in os.listdir(current_folder):\\r\\r            if file_name == \\""Transcribe\\"":  # Skip the transcribe folder\\r\\r                print(\\""Skipping transcribe folder\\"")\\r\\r                continue\\r\\r            file_path = os.path.join(current_folder, file_name)\\r\\r            print(\\""file_path:\\"",file_path)\\r\\r            if os.path.isfile(file_path):\\r\\r                file_exist = True\\r\\r                print(\\""Found file:\\"", file_path)\\r\\r            elif not os.path.isfile(file_path) and not file_name.startswith('.'):\\r\\r                queue.append(os.path.join(current_folder, file_name))\\r\\r                print(\\""Adding folder to queue:\\"", os.path.join(current_folder, file_name))\\r\\r        if file_exist:\\r\\r            print(\\""Files exist in current folder\\"")\\r\\r            print(\\""Current File - \\"",file_path)\\r\\r            translation_folder = os.path.join(current_folder, '.aip','Translation')\\r\\r            os.makedirs(translation_folder, exist_ok=True)\\r\\r            created_folders.append(os.path.dirname(translation_folder))# Add the created .aip folder path to the list\\r\\r            print(\\""Created translation folder:\\"", translation_folder)\\r\\r            for file_name in os.listdir(current_folder):\\r\\r                file_path = os.path.join(current_folder, file_name)\\r\\r                text_to_translate = ''\\r\\r                if os.path.isfile(file_path):\\r\\r                    print(\\""Processing file:\\"", file_path)\\r\\r                    extension = os.path.splitext(file_name)[1]\\r\\r                    mimetype = mimetypes.guess_type(file_path)[0]\\r\\r                    if mimetype and ('audio' in mimetype or 'video' in mimetype):\\r\\r                        transcript_folder = os.path.join(current_folder, '.aip','Transcribe')\\r\\r                        print(\\""transcript_folder path=\\"",transcript_folder)\\r\\r                        transcript_path = os.path.join(transcript_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                        # with open(transcript_path, 'r', encoding='utf-8') as f:\\r\\r                        #      transcript_content = f.read()\\r\\r                        #      print(\\""Transcript content:\\"", transcript_content)\\r\\r                        print(\\""transcript_path = \\"",transcript_path)\\r\\r                        if os.path.exists(transcript_path):\\r\\r                            with open(transcript_path, 'r', encoding='utf-8') as f:\\r\\r                                transcript = f.read()\\r\\r                            text_to_translate =transcript\\r\\r                            print(\\""Transcript contents:\\"", transcript)\\r\\r                            print(\\""Transcript found for file:\\"", file_name)\\r\\r                        else:\\r\\r                            print(\\""Transcript not found for file: \\"",file_name)\\r\\r                    elif extension in ['.txt', '.pdf', '.docx', '.pptx']:\\r\\r                        print(\\""Processing text, pdf, docx, or pptx file:\\"", file_name)\\r\\r                        if extension == \\"".txt\\"":\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_to_translate = f.read()\\r\\r                        elif extension == \\"".pdf\\"":\\r\\r                            with open(file_path, 'rb') as f:\\r\\r                                pdf = PdfReader(f)\\r\\r                                # print(\\""PdfReader\\"",pdf)\\r                                text_to_translate= extract_text_from_pdf(file_path)\\r\\r                                #text_to_translate = \\"" \\"".join(page.extract_text() for page in pdf.pages)\\r\\r                                \\r\\r                        elif extension == \\"".docx\\"":\\r\\r                            doc = Document(file_path)\\r\\r                            text_to_translate = \\"" \\"".join(paragraph.text for paragraph in doc.paragraphs)\\r\\r                        elif extension == \\"".pptx\\"":\\r\\r                            pres = Presentation(file_path)\\r\\r                            text_to_translate = \\"" \\"".join(\\r\\r                                \\"" \\"".join(shape.text for shape in slide.shapes if shape.has_text_frame) for slide in\\r\\r                                pres.slides)\\r\\r                        else:\\r\\r                            print(f\\""Skipping file {file_name} as it is not supported\\"")\\r\\r                            continue\\r\\r                    if text_to_translate !='':\\r\\r                        print(\\""Translating text for file:\\"", file_name)\\r\\r                        try:\\r\\r                            language = translator.language(text_to_translate[0:100])\\r\\r                            # base_language_info = f\\""The base language written in file: {language.result}  \\""\\r\\r                            if str(language.result) != targetlanguage_param:\\r                                \\r                                num_sentences = 10  # Number of sentences to send in each translation request                                        targetlanguage_param, translator)\\r                                translated_text = translate_text_in_sentence_batches(text_to_translate, num_sentences,\\r                                                                                     targetlanguage_param, translator)\\r                                # chunk_size = 500  # Define the chunk size based on your needs\\r\\r                                # translated_text = translate_text_in_chunks(text_to_translate, chunk_size,\\r                                #                                           targetlanguage_param, translator)\\r                                #translated_text = translator.translate(text_to_translate,targetlanguage_param ).result\\r\\r                                # print(\\""translated_text in if\\"",translated_text)\\r\\r                            else:\\r\\r                                translated_text = text_to_translate\\r\\r                                # print(\\""translated_text in else\\"",translated_text)\\r\\r                        except:\\r\\r                            print(\\""Translation failed\\"")\\r\\r                        #output_file_path = os.path.join(translation_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                        output_file_path = os.path.join(translation_folder, f\\""{os.path.splitext(file_name)[0]}_{targetlanguage_param}.txt\\"")\\r\\r                        with open(output_file_path, 'w', encoding='utf-8') as f:\\r\\r                            f.write(translated_text)\\r\\r                        print(f\\""Translated file {file_name} has been saved to {output_file_path}\\"")\\r\\r                        file_path = output_file_path\\r\\r        queue.pop(0)\\r\\r        print(\\""Finished processing folder:\\"", folder_path)\\r\\r    return created_folders\\r\\r# def chunk_text(text, chunk_size):\\r#     \\""\\""\\""Splits the text into chunks of specified size.\\""\\""\\""\\r#     for i in range(0, len(text), chunk_size):\\r#         yield text[i:i + chunk_size]\\r\\r\\r# def translate_text_in_chunks(text, chunk_size, targetlanguage_param, translator):\\r#     \\""\\""\\""Translates text in chunks and combines the results.\\""\\""\\""\\r#     translated_text = \\""\\""\\r\\r#     for chunk in chunk_text(text, chunk_size):\\r#         translated_chunk = translator.translate(chunk, targetlanguage_param).result\\r#         translated_text += translated_chunk\\r\\r#     return translated_text\\rdef split_text_by_sentences(text):\\r    \\""\\""\\""Splits the text into a list of sentences.\\""\\""\\""\\r    sentence_endings = re.compile(r'(?<=[.!?]) +')\\r    sentences = sentence_endings.split(text)\\r    return sentences\\r\\r\\rdef chunk_sentences(sentences, num_sentences):\\r    \\""\\""\\""Yields chunks of a specified number of sentences.\\""\\""\\""\\r    for i in range(0, len(sentences), num_sentences):\\r        yield \\"" \\"".join(sentences[i:i + num_sentences])\\r\\r\\rdef translate_text_in_sentence_batches(text, num_sentences, targetlanguage_param, translator):\\r    \\""\\""\\""Translates text in batches of sentences and combines the results.\\""\\""\\""\\r    sentences = split_text_by_sentences(text)\\r    translated_text = \\""\\""\\r\\r    for sentence_chunk in chunk_sentences(sentences, num_sentences):\\r        translated_chunk = translator.translate(sentence_chunk, targetlanguage_param).result\\r        translated_text += translated_chunk + \\"" \\""  # Adding a space to separate the translated chunks\\r\\r    return translated_text.strip()""]},{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":[],""script"":[""import os\\r\\rimport json\\r\\rimport requests\\r\\rimport shutil\\r\\rimport boto3\\r\\r\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100,api-aicloud.ad.infosys.com'\\r\\r\\r    '''\\r\\r\\r\\r    call ai-plat api to get dataset config\\r\\r\\r\\r    return {dataset_config}\\r\\r\\r\\r    '''\\r\\r\\r\\r   #url = f\\""https://infyaiplat.ad.infosys.com/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r    #url = f\\""{os.environ['AIPlatform_Referrer']}/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r\\r    headers = {\\r\\r\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r\\r\\r        'Project': '2',\\r\\r\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r\\r\\r    }\\r\\r\\r\\r    try:\\r\\r\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r\\r\\r        response.raise_for_status()\\r\\r\\r\\r        dataset_config = json.loads(response.text)\\r\\r\\r\\r        print('dataset_details', dataset_config)\\r\\r\\r\\r    except json.JSONDecodeError:\\r\\r\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r\\r\\r        dataset_config = None\\r\\r\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r\\r\\r        dataset_config = None\\r\\r\\r\\r    except Exception as e:\\r\\r\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r\\r\\r        dataset_config = None\\r\\r\\r\\r    return dataset_config\\r\\r\\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r\\r\\r    '''\\r\\r\\r\\r    download data from s3\\r\\r\\r\\r    return local file path\\r\\r\\r\\r    '''\\r\\r\\r\\r    print(\\""obj key\\"",obj_key)\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r\\r\\r                               endpoint_url=end_point_url,\\r\\r\\r\\r                               aws_access_key_id=access_key,\\r\\r\\r\\r                               aws_secret_access_key=secret_key,\\r\\r\\r\\r                               verify=False)\\r\\r\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r\\r\\r    print(\\""local path:\\"",local_path)\\r\\r\\r\\r    if os.path.exists(local_path):\\r\\r\\r\\r        shutil.rmtree(local_path)\\r\\r\\r\\r    os.makedirs(local_path)\\r\\r\\r\\r    model_path = os.path.join(local_path)\\r\\r\\r\\r    print(\\""model path:\\"",model_path)\\r\\r    print(\\""objects:\\"",bucket_object.objects)\\r\\r\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r\\r\\r        print(\\""obj key\\"",obj.key)\\r\\r\\r\\r        if obj.key.endswith('/'):\\r\\r\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r\\r\\r        else:\\r\\r\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r\\r\\r            print(f\\""Downloaded {obj.key} to {model_path}/{obj.key}\\"")\\r\\r\\r\\r            print(\\""res\\"",res)\\r\\r\\r\\r    return model_path\\r\\r\\r\\rdef DatasetExtractor():  # python-script Data\\r\\r\\r    # get dataset configuration\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""dstId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r\\r\\r    if dataset_type == 'S3':\\r\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r\\r\\r        print(connection_dict)\\r\\r\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r\\r\\r        bucket = attribute['bucket']\\r\\r\\r\\r        path = attribute['path']\\r\\r\\r\\r        obj_key = attribute['object']\\r\\r        \\r\\r        key = f'{path}/'\\r\\r\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r\\r\\r        print(file_path)\\r\\r\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r\\r\\r    return local_path""]}]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""}],""environment"":[{""name"":""no_proxy"",""value"":""victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap,leap2:7000""},{""name"":""AIPlatform_Referrer"",""value"":""https://leap2:7000""},{""name"":""proxy"",""value"":""http://blrproxy.ad.infosys.com:80""},{""name"":""InstallDeps"",""value"":""False""}],""default_runtime"":""{\\""dsAlias\\"":\\""LocalCluster\\"",\\""dsName\\"":\\""LEALCLCL12132\\"",\\""type\\"":\\""REMOTE\\""}""}","meghashree.m02@infosys.com","Translate","2024-10-29 11:28:42","LEOTST_T22967","leo1311","DragNDropLite","17","N","pipeline","{""17"":{""taskId"":""8f9f4259-cb13-4762-9f49-b1cf8bec3cba""}}","\0","0"
"admin","2024-07-09 08:58:02.835000","\0","",\N,"{""elements"":[{""id"":""eoXeL"",""alias"":""DatasetExtractor"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""DatasetExtractor"",""requirements"":""langchain_text_splitters,translatepy"",""params"":[],""script"":[""import os\\r\\rimport logging as logger\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100'\\r\\r\\r    '''\\r\\r    call ai-plat api to get dataset config\\r\\r    return {dataset_config}\\r\\r    '''\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r    #os.environ['AIPlatform_Referrer']='https://leap:4000'\\r\\r    #url = f\\""{os.environ['AIPlatform_Referrer']}/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r    headers = {\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r        'Project': '2',\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r    }\\r\\r    try:\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r        response.raise_for_status()\\r\\r        dataset_config = json.loads(response.text)\\r\\r        print('dataset_details', dataset_config)\\r\\r    except json.JSONDecodeError:\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r        dataset_config = None\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r        dataset_config = None\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r        dataset_config = None\\r\\r    return dataset_config\\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r    '''\\r\\r    download data from s3\\r\\r    return local file path\\r\\r    '''\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r                               endpoint_url=end_point_url,\\r\\r                               aws_access_key_id=access_key,\\r\\r                               aws_secret_access_key=secret_key,\\r\\r                               verify=False)\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r    if os.path.exists(local_path):\\r\\r        shutil.rmtree(local_path)\\r\\r    os.makedirs(local_path)\\r\\r    model_path = os.path.join(local_path)\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r        print((obj.key))\\r\\r        if obj.key.endswith('/'):\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r        else:\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r    return model_path\\r\\rdef DatasetExtractor():  # python-script Data\\r\\r    # get dataset configurations\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""datasetId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        print(connection_dict)\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        path = attribute['path']\\r\\r        #obj_key = attribute['object']\\r\\r        #key = f'{path}/{obj_key}'\\r\\r        key = f'{path}/'\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r        print(file_path)\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r    return local_path""]},""position_x"":""189"",""position_y"":""19"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""fgKiR"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""fgKiR"",""alias"":""process_folder"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""process_folder"",""requirements"":""translatepy,PyPDF2,docx,exceptions,python-docx,pptx,python-pptx,collections,sentencepiece,langchain==0.2.6,langchain_openai,AzureOpenAI,openai==1.31.0,langchain_text_splitters"",""params"":[],""script"":[""import base64\\r\\rimport requests\\r\\rimport json\\r\\rimport os\\r\\rimport mimetypes\\r\\rfrom pydub import AudioSegment\\r\\rimport urllib3\\r\\rimport pathlib\\r\\rimport shutil\\r\\rimport openai\\r\\rimport boto3\\r\\rfrom translatepy import Translator\\r\\rfrom PyPDF2 import PdfReader\\r\\rfrom docx import Document\\r\\rfrom pptx import Presentation\\r\\rfrom transformers import T5Tokenizer, T5ForConditionalGeneration\\r\\rurllib3.disable_warnings()\\r\\rmodel = \\""whisper-m\\""\\r\\ros.environ[\\r\\r    'itgateway_token_url'] = 'https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\ros.environ['app_itgateway_client_id'] = '9090f1c5-d381-4ef6-b845-4bac98d02fbe'\\r\\ros.environ['app_itgateway_client_secret'] = 'CNl8Q~IA-EUpiyA5Kkh97-4uH3ajo2PqQOkpHbp~'\\r\\ros.environ['itgateway_grant_type'] = 'client_credentials'\\r\\ros.environ['app_itgateway_scope'] = 'b3490b10-6bd3-4f66-908d-fa1950e46598/.default'\\r\\ros.environ[model] = 'https://itgateway.infosys.com/ai-platform/wh-aic/v1/speech/transcribe'\\r\\rdef summarize_text(text):\\r\\r    from langchain.chains.summarize import load_summarize_chain\\r\\r    from langchain_text_splitters  import RecursiveCharacterTextSplitter\\r\\r    from langchain.schema.document import Document\\r\\r    from langchain_openai import AzureOpenAI\\r\\r    # from langchain_text_splitters import SpacyTextSplitter\\r\\r    text_splitter = RecursiveCharacterTextSplitter()\\r\\r    # text_splitter = SpacyTextSplitter(chunk_size=5000)\\r\\r    texts = text_splitter.split_text(text)\\r\\r    docs = [Document(page_content=t) for t in texts]\\r\\r    # secrets\\r\\r    os.environ[\\""OPENAI_API_KEY\\""] = '85b968a4b5c84d849c99661788c2c1ed'\\r\\r    os.environ[\\""AZURE_OPENAI_ENDPOINT\\""] = 'https://azureft.openai.azure.com/'\\r\\r    # secrets\\r\\r    openai_api_version = '''2023-03-15-preview'''\\r\\r    deployment_name = '''gtp35turbo'''\\r\\r    llm = AzureOpenAI(deployment_name=deployment_name, openai_api_version=openai_api_version)\\r\\r    try:\\r\\r       chain  = load_summarize_chain(llm,chain_type=\\""map_reduce\\"")\\r\\r       summary = chain.invoke(docs)\\r\\r       return summary['output_text'],deployment_name\\r\\r    except Exception as e:\\r\\r        print(\\""Error in summarizing text: \\"", e)\\r\\r        return None,deployment_name\\r\\r    #return summary['output_text'].split('')[0], deployment_name\\r\\rdef process_folder(folder_path):\\r    print(f\\""Function called with folder_path: {folder_path}\\"")\\r    created_folders = []  # List to store the paths of the created .aip folders\\r    queue = []\\r    print(\\""Starting folder path:\\"", folder_path)\\r    queue.append(folder_path)\\r    print(\\""Initial queue:\\"", queue)\\r    translator = Translator()\\r    print(\\""Translator initialized.\\"")\\r    while len(queue) > 0:\\r        current_folder = queue[0]\\r        print(\\""Processing current folder:\\"", current_folder)\\r        file_exist = False\\r        for file_name in os.listdir(current_folder):\\r            print(f\\""Checking file: {file_name} in folder: {current_folder}\\"")\\r            if file_name in ['Translation', 'Transcribe']:  # Corrected condition to check individual strings\\r                print(\\""Skipping transcribe or translation folder\\"")\\r                continue\\r            file_path = os.path.join(current_folder, file_name)\\r            print('Checking file path:', file_path)\\r            if os.path.isfile(file_path):\\r                file_exist = True\\r                print(f\\""Found file: {file_path}\\"")\\r            elif not os.path.isfile(file_path) and not file_name.startswith('.'):\\r                queue.append(os.path.join(current_folder, file_name))\\r                print(f\\""Added folder to queue: {os.path.join(current_folder, file_name)}\\"")\\r        if file_exist:\\r            print(\\""File exists in current folder - Processing for summary:\\"", file_path)\\r            summary_folder = os.path.join(current_folder,'.aip', 'Summary')\\r            print(\\""Creating summary folder at:\\"", summary_folder)\\r            os.makedirs(summary_folder, exist_ok=True)\\r            created_folders.append(os.path.dirname(summary_folder))  # Add the created .aip folder path to the list\\r            print(f\\""Added created folder to list: {os.path.dirname(summary_folder)}\\"")\\r            for file_name in os.listdir(current_folder):\\r                file_path = os.path.join(current_folder, file_name)\\r                text_to_summarize = ''\\r                if os.path.isfile(file_path):\\r                    extension = os.path.splitext(file_name)[1]\\r                    mimetype = mimetypes.guess_type(file_path)[0]\\r                    print(f\\""Processing file: {file_name}, Extension: {extension}, Mimetype: {mimetype}\\"")\\r                    if mimetype and ('audio' in mimetype or 'video' in mimetype):\\r                        transcript_folder = os.path.join(current_folder,'.aip', 'Transcribe')\\r                        print(\\""Transcript folder path:\\"", transcript_folder)\\r                        transcript_path = os.path.join(transcript_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r                        print(\\""Transcript file path:\\"", transcript_path)\\r                        if os.path.exists(transcript_path):\\r                            with open(transcript_path, 'r', encoding='utf-8') as f:\\r                                transcript = f.read()\\r                            text_to_summarize = transcript\\r                            print(\\""Transcript read successfully.\\"")\\r                        else:\\r                            print(\\""Transcript not found for file:\\"", file_name)\\r                    elif extension in ['.txt', '.pdf', '.docx', '.pptx']:\\r                        print(f\\""Reading content from {extension} file.\\"")\\r                        if extension == \\"".txt\\"":\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r                                text_to_summarize = f.read()\\r                            print(\\""Text read from .txt file.\\"")\\r                        elif extension == \\"".pdf\\"":\\r                            with open(file_path, 'rb') as f:\\r                                pdf = PdfReader(f)\\r                                text_to_summarize = \\"" \\"".join(page.extract_text() for page in pdf.pages)\\r                            print(\\""Text read from .pdf file.\\"")\\r                        elif extension == \\"".docx\\"":\\r                            doc = Document(file_path)\\r                            text_to_summarize = \\"" \\"".join(paragraph.text for paragraph in doc.paragraphs)\\r                            print(\\""Text read from .docx file.\\"")\\r                        elif extension == \\"".pptx\\"":\\r                            pres = Presentation(file_path)\\r                            text_to_summarize = \\"" \\"".join(\\r                                \\"" \\"".join(shape.text for shape in slide.shapes if shape.has_text_frame) for slide in\\r                                pres.slides)\\r                            print(\\""Text read from .pptx file.\\"")\\r                        else:\\r                            print(f\\""Skipping file {file_name} as it is not supported\\"")\\r                            continue\\r                    if text_to_summarize != '':\\r                        try:\\r                            print(\\""Detecting language of the text.\\"")\\r                            language = translator.language(text_to_summarize[0:100])\\r                            print(f\\""Detected language: {language.result}\\"")\\r                            if str(language.result) != \\""eng\\"":\\r                                print(\\""Translating text to English.\\"")\\r                                text_to_summarize = translator.translate(text_to_summarize, \\""English\\"").result\\r                        except Exception as e:\\r                            print(f\\""Translation failed with error: {e}\\"")\\r                        print(\\""Summarizing text.\\"")\\r                        summary, model_name = summarize_text(text_to_summarize)\\r                        if summary is not None:\\r                            summary = summary[:-10]\\r                        else:\\r                            summary = \\""\\""\\r                        output_filename = os.path.splitext(file_name)[0] + \\"".txt\\""\\r                        output_file_path = os.path.join(summary_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r                        with open(output_file_path, 'w', encoding='utf-8') as f:\\r                            f.write(summary)\\r                            f.write(\\""Model name: \\"" + model_name)\\r                        print(f\\""Summarized file {file_name} has been saved to {output_file_path}\\"")\\r                        file_path = output_file_path\\r        else:\\r            print(\\""No files found in current folder, moving to next.\\"")\\r        queue.pop(0)\\r        print(\\""Moving to next folder in queue.\\"")\\r    print(\\""Processing complete.\\"")\\r    return created_folders\\r\\r""]},""position_x"":""414"",""position_y"":""141"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""eoXeL"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""BHlaI"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""DatasetExtractor"",""requirements"":""langchain_text_splitters,translatepy"",""params"":[],""script"":[""import os\\r\\rimport logging as logger\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100'\\r\\r\\r    '''\\r\\r    call ai-plat api to get dataset config\\r\\r    return {dataset_config}\\r\\r    '''\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r    #os.environ['AIPlatform_Referrer']='https://leap:4000'\\r\\r    #url = f\\""{os.environ['AIPlatform_Referrer']}/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r    headers = {\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r        'Project': '2',\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r    }\\r\\r    try:\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r        response.raise_for_status()\\r\\r        dataset_config = json.loads(response.text)\\r\\r        print('dataset_details', dataset_config)\\r\\r    except json.JSONDecodeError:\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r        dataset_config = None\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r        dataset_config = None\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r        dataset_config = None\\r\\r    return dataset_config\\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r    '''\\r\\r    download data from s3\\r\\r    return local file path\\r\\r    '''\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r                               endpoint_url=end_point_url,\\r\\r                               aws_access_key_id=access_key,\\r\\r                               aws_secret_access_key=secret_key,\\r\\r                               verify=False)\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r    if os.path.exists(local_path):\\r\\r        shutil.rmtree(local_path)\\r\\r    os.makedirs(local_path)\\r\\r    model_path = os.path.join(local_path)\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r        print((obj.key))\\r\\r        if obj.key.endswith('/'):\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r        else:\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r    return model_path\\r\\rdef DatasetExtractor():  # python-script Data\\r\\r    # get dataset configurations\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""datasetId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        print(connection_dict)\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        path = attribute['path']\\r\\r        #obj_key = attribute['object']\\r\\r        #key = f'{path}/{obj_key}'\\r\\r        key = f'{path}/'\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r        print(file_path)\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r    return local_path""]}]},{""id"":""BHlaI"",""alias"":""UploadToNutanix"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""UploadToNutanix"",""requirements"":"""",""params"":[],""script"":[""def UploadToNutanix(localpaths):\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""datasetId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetconfig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetconfig['datasource']['type']\\r\\r\\t\\r\\r    if dataset_type == 'S3':\\r\\r        viewtype = datasetconfig['views']\\r\\r        connection_dict = json.loads(datasetconfig['datasource']['connectionDetails'])\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetconfig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        for localpath in set(localpaths):  # Convert localpaths to a set to remove duplicates\\r\\r            for root, dirs, files in os.walk(localpath):\\r                if 'Transcribe' in root:\\r\\r                    dirs[:] = []  # Skip subdirectories\\r\\r                else:\\r\\r                    transcribe_path = os.path.join(root,'.aip' 'Transcribe')\\r\\r                    print(\\""transcribe_path=\\"", transcribe_path)\\r\\r                    os.makedirs(transcribe_path, exist_ok=True)\\r\\r                for file in files:\\r\\r                    local_file = os.path.join(root, file)\\r\\r                    directories = local_file.split(os.sep)\\r                    print(\\""directories::::\\"",directories)\\r\\r                    #if viewtype == 'Folder View':\\r\\r                    if viewtype in ['Folder View', 'Audio View', 'Video View', 'Pdf View']:\\r                        new_path = gen_path(directories)\\r\\r                        # new_path = '/'.join(directories[2:])\\r\\r                    else:\\r\\r                        new_path = '/'.join(directories[3:])\\r\\r                    print(\\""local files:\\"", local_file)\\r\\r                    print(\\""new_path:\\"", new_path)\\r\\r                    print(\\""attribute paths=\\"",attribute['path'])\\r\\r                    object_key = attribute['path']+'/'+new_path\\r\\r                    print(\\""object key: \\"", object_key)\\r\\r                    metadata = None\\r\\r                    s3 = boto3.resource('s3', endpoint_url=s3_end_point_url,\\r\\r                                        aws_access_key_id=s3_access_key,\\r\\r                                        aws_secret_access_key=s3_secret_key,\\r\\r                                        verify=False)\\r\\r                    extra_args = {'Metadata': metadata} if metadata else None\\r\\r                    s3.Bucket(bucket).upload_file(local_file, object_key, ExtraArgs=extra_args)\\r\\r                    print(f'File saved to S3: s3://{bucket}/' + object_key)\\rdef gen_path(path):\\r    index = path.index('.aip')\\r    newpath='/'.join(path[index:])\\r    return newpath\\r    ""]},""position_x"":""613"",""position_y"":""11"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""fgKiR"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""process_folder"",""requirements"":""translatepy,PyPDF2,docx,exceptions,python-docx,pptx,python-pptx,collections,sentencepiece,langchain==0.2.6,langchain_openai,AzureOpenAI,openai==1.31.0,langchain_text_splitters"",""params"":[],""script"":[""import base64\\r\\rimport requests\\r\\rimport json\\r\\rimport os\\r\\rimport mimetypes\\r\\rfrom pydub import AudioSegment\\r\\rimport urllib3\\r\\rimport pathlib\\r\\rimport shutil\\r\\rimport openai\\r\\rimport boto3\\r\\rfrom translatepy import Translator\\r\\rfrom PyPDF2 import PdfReader\\r\\rfrom docx import Document\\r\\rfrom pptx import Presentation\\r\\rfrom transformers import T5Tokenizer, T5ForConditionalGeneration\\r\\rurllib3.disable_warnings()\\r\\rmodel = \\""whisper-m\\""\\r\\ros.environ[\\r\\r    'itgateway_token_url'] = 'https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\ros.environ['app_itgateway_client_id'] = '9090f1c5-d381-4ef6-b845-4bac98d02fbe'\\r\\ros.environ['app_itgateway_client_secret'] = 'CNl8Q~IA-EUpiyA5Kkh97-4uH3ajo2PqQOkpHbp~'\\r\\ros.environ['itgateway_grant_type'] = 'client_credentials'\\r\\ros.environ['app_itgateway_scope'] = 'b3490b10-6bd3-4f66-908d-fa1950e46598/.default'\\r\\ros.environ[model] = 'https://itgateway.infosys.com/ai-platform/wh-aic/v1/speech/transcribe'\\r\\rdef summarize_text(text):\\r\\r    from langchain.chains.summarize import load_summarize_chain\\r\\r    from langchain_text_splitters  import RecursiveCharacterTextSplitter\\r\\r    from langchain.schema.document import Document\\r\\r    from langchain_openai import AzureOpenAI\\r\\r    # from langchain_text_splitters import SpacyTextSplitter\\r\\r    text_splitter = RecursiveCharacterTextSplitter()\\r\\r    # text_splitter = SpacyTextSplitter(chunk_size=5000)\\r\\r    texts = text_splitter.split_text(text)\\r\\r    docs = [Document(page_content=t) for t in texts]\\r\\r    # secrets\\r\\r    os.environ[\\""OPENAI_API_KEY\\""] = '85b968a4b5c84d849c99661788c2c1ed'\\r\\r    os.environ[\\""AZURE_OPENAI_ENDPOINT\\""] = 'https://azureft.openai.azure.com/'\\r\\r    # secrets\\r\\r    openai_api_version = '''2023-03-15-preview'''\\r\\r    deployment_name = '''gtp35turbo'''\\r\\r    llm = AzureOpenAI(deployment_name=deployment_name, openai_api_version=openai_api_version)\\r\\r    try:\\r\\r       chain  = load_summarize_chain(llm,chain_type=\\""map_reduce\\"")\\r\\r       summary = chain.invoke(docs)\\r\\r       return summary['output_text'],deployment_name\\r\\r    except Exception as e:\\r\\r        print(\\""Error in summarizing text: \\"", e)\\r\\r        return None,deployment_name\\r\\r    #return summary['output_text'].split('')[0], deployment_name\\r\\rdef process_folder(folder_path):\\r    print(f\\""Function called with folder_path: {folder_path}\\"")\\r    created_folders = []  # List to store the paths of the created .aip folders\\r    queue = []\\r    print(\\""Starting folder path:\\"", folder_path)\\r    queue.append(folder_path)\\r    print(\\""Initial queue:\\"", queue)\\r    translator = Translator()\\r    print(\\""Translator initialized.\\"")\\r    while len(queue) > 0:\\r        current_folder = queue[0]\\r        print(\\""Processing current folder:\\"", current_folder)\\r        file_exist = False\\r        for file_name in os.listdir(current_folder):\\r            print(f\\""Checking file: {file_name} in folder: {current_folder}\\"")\\r            if file_name in ['Translation', 'Transcribe']:  # Corrected condition to check individual strings\\r                print(\\""Skipping transcribe or translation folder\\"")\\r                continue\\r            file_path = os.path.join(current_folder, file_name)\\r            print('Checking file path:', file_path)\\r            if os.path.isfile(file_path):\\r                file_exist = True\\r                print(f\\""Found file: {file_path}\\"")\\r            elif not os.path.isfile(file_path) and not file_name.startswith('.'):\\r                queue.append(os.path.join(current_folder, file_name))\\r                print(f\\""Added folder to queue: {os.path.join(current_folder, file_name)}\\"")\\r        if file_exist:\\r            print(\\""File exists in current folder - Processing for summary:\\"", file_path)\\r            summary_folder = os.path.join(current_folder,'.aip', 'Summary')\\r            print(\\""Creating summary folder at:\\"", summary_folder)\\r            os.makedirs(summary_folder, exist_ok=True)\\r            created_folders.append(os.path.dirname(summary_folder))  # Add the created .aip folder path to the list\\r            print(f\\""Added created folder to list: {os.path.dirname(summary_folder)}\\"")\\r            for file_name in os.listdir(current_folder):\\r                file_path = os.path.join(current_folder, file_name)\\r                text_to_summarize = ''\\r                if os.path.isfile(file_path):\\r                    extension = os.path.splitext(file_name)[1]\\r                    mimetype = mimetypes.guess_type(file_path)[0]\\r                    print(f\\""Processing file: {file_name}, Extension: {extension}, Mimetype: {mimetype}\\"")\\r                    if mimetype and ('audio' in mimetype or 'video' in mimetype):\\r                        transcript_folder = os.path.join(current_folder,'.aip', 'Transcribe')\\r                        print(\\""Transcript folder path:\\"", transcript_folder)\\r                        transcript_path = os.path.join(transcript_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r                        print(\\""Transcript file path:\\"", transcript_path)\\r                        if os.path.exists(transcript_path):\\r                            with open(transcript_path, 'r', encoding='utf-8') as f:\\r                                transcript = f.read()\\r                            text_to_summarize = transcript\\r                            print(\\""Transcript read successfully.\\"")\\r                        else:\\r                            print(\\""Transcript not found for file:\\"", file_name)\\r                    elif extension in ['.txt', '.pdf', '.docx', '.pptx']:\\r                        print(f\\""Reading content from {extension} file.\\"")\\r                        if extension == \\"".txt\\"":\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r                                text_to_summarize = f.read()\\r                            print(\\""Text read from .txt file.\\"")\\r                        elif extension == \\"".pdf\\"":\\r                            with open(file_path, 'rb') as f:\\r                                pdf = PdfReader(f)\\r                                text_to_summarize = \\"" \\"".join(page.extract_text() for page in pdf.pages)\\r                            print(\\""Text read from .pdf file.\\"")\\r                        elif extension == \\"".docx\\"":\\r                            doc = Document(file_path)\\r                            text_to_summarize = \\"" \\"".join(paragraph.text for paragraph in doc.paragraphs)\\r                            print(\\""Text read from .docx file.\\"")\\r                        elif extension == \\"".pptx\\"":\\r                            pres = Presentation(file_path)\\r                            text_to_summarize = \\"" \\"".join(\\r                                \\"" \\"".join(shape.text for shape in slide.shapes if shape.has_text_frame) for slide in\\r                                pres.slides)\\r                            print(\\""Text read from .pptx file.\\"")\\r                        else:\\r                            print(f\\""Skipping file {file_name} as it is not supported\\"")\\r                            continue\\r                    if text_to_summarize != '':\\r                        try:\\r                            print(\\""Detecting language of the text.\\"")\\r                            language = translator.language(text_to_summarize[0:100])\\r                            print(f\\""Detected language: {language.result}\\"")\\r                            if str(language.result) != \\""eng\\"":\\r                                print(\\""Translating text to English.\\"")\\r                                text_to_summarize = translator.translate(text_to_summarize, \\""English\\"").result\\r                        except Exception as e:\\r                            print(f\\""Translation failed with error: {e}\\"")\\r                        print(\\""Summarizing text.\\"")\\r                        summary, model_name = summarize_text(text_to_summarize)\\r                        if summary is not None:\\r                            summary = summary[:-10]\\r                        else:\\r                            summary = \\""\\""\\r                        output_filename = os.path.splitext(file_name)[0] + \\"".txt\\""\\r                        output_file_path = os.path.join(summary_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r                        with open(output_file_path, 'w', encoding='utf-8') as f:\\r                            f.write(summary)\\r                            f.write(\\""Model name: \\"" + model_name)\\r                        print(f\\""Summarized file {file_name} has been saved to {output_file_path}\\"")\\r                        file_path = output_file_path\\r        else:\\r            print(\\""No files found in current folder, moving to next.\\"")\\r        queue.pop(0)\\r        print(\\""Moving to next folder in queue.\\"")\\r    print(\\""Processing complete.\\"")\\r    return created_folders\\r\\r""]},{""FunctionName"":""DatasetExtractor"",""requirements"":""langchain_text_splitters,translatepy"",""params"":[],""script"":[""import os\\r\\rimport logging as logger\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100'\\r\\r\\r    '''\\r\\r    call ai-plat api to get dataset config\\r\\r    return {dataset_config}\\r\\r    '''\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r    #os.environ['AIPlatform_Referrer']='https://leap:4000'\\r\\r    #url = f\\""{os.environ['AIPlatform_Referrer']}/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r    headers = {\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r        'Project': '2',\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r    }\\r\\r    try:\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r        response.raise_for_status()\\r\\r        dataset_config = json.loads(response.text)\\r\\r        print('dataset_details', dataset_config)\\r\\r    except json.JSONDecodeError:\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r        dataset_config = None\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r        dataset_config = None\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r        dataset_config = None\\r\\r    return dataset_config\\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r    '''\\r\\r    download data from s3\\r\\r    return local file path\\r\\r    '''\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r                               endpoint_url=end_point_url,\\r\\r                               aws_access_key_id=access_key,\\r\\r                               aws_secret_access_key=secret_key,\\r\\r                               verify=False)\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r    if os.path.exists(local_path):\\r\\r        shutil.rmtree(local_path)\\r\\r    os.makedirs(local_path)\\r\\r    model_path = os.path.join(local_path)\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r        print((obj.key))\\r\\r        if obj.key.endswith('/'):\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r        else:\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r    return model_path\\r\\rdef DatasetExtractor():  # python-script Data\\r\\r    # get dataset configurations\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""datasetId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        print(connection_dict)\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        path = attribute['path']\\r\\r        #obj_key = attribute['object']\\r\\r        #key = f'{path}/{obj_key}'\\r\\r        key = f'{path}/'\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r        print(file_path)\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r    return local_path""]}]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""}],""environment"":[{""name"":""no_proxy"",""value"":""victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap,leap2:3100,victlptst-55,victlptst-55.ad.infosys.com""},{""name"":""AIPlatform_Referrer"",""value"":""https://leap2:3100""},{""name"":""proxy"",""value"":""http://blrproxy.ad.infosys.com:80""},{""name"":""InstallDeps"",""value"":""False""}],""default_runtime"":""{\\""dsAlias\\"":\\""LocalCluster\\"",\\""dsName\\"":\\""LEALCLCL12132\\"",\\""type\\"":\\""REMOTE\\""}""}","meghashree.m02@infosys.com","Summary","2024-11-05 05:29:44","LEOSMRYJ63447","leo1311","DragNDropLite","13","N","pipeline","{""13"":{""taskId"":""76e0c7c5-df5a-426c-9c2c-f17a57cc7819""}}","\0","0"
"admin","2024-07-09 08:59:18.578000","\0","",NULL,"{""elements"":[{""id"":""eoXeL"",""alias"":""DatasetExtractor"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""DatasetExtractor"",""requirements"":""langchain_text_splitters,translatepy"",""params"":[],""script"":[""import os\\r\\rimport logging as logger\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r\\r    '''\\r\\r    call ai-plat api to get dataset config\\r\\r    return {dataset_config}\\r\\r    '''\\r\\r    #os.environ['AIPlatform_Referrer']='https://leap:4000'\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100'\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r\\r    #url = f\\""{os.environ['AIPlatform_Referrer']}/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r    headers = {\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r        'Project': '2',\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r    }\\r\\r    try:\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r        response.raise_for_status()\\r\\r        dataset_config = json.loads(response.text)\\r\\r        print('dataset_details', dataset_config)\\r\\r    except json.JSONDecodeError:\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r        dataset_config = None\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r        dataset_config = None\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r        dataset_config = None\\r\\r    return dataset_config\\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r    '''\\r\\r    download data from s3\\r\\r    return local file path\\r\\r    '''\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r                               endpoint_url=end_point_url,\\r\\r                               aws_access_key_id=access_key,\\r\\r                               aws_secret_access_key=secret_key,\\r\\r                               verify=False)\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r    if os.path.exists(local_path):\\r\\r        shutil.rmtree(local_path)\\r\\r    os.makedirs(local_path)\\r\\r    model_path = os.path.join(local_path)\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r        print((obj.key))\\r\\r        if obj.key.endswith('/'):\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r        else:\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r    return model_path\\r\\rdef DatasetExtractor():  # python-script Data\\r\\r    # get dataset configurations\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""datasetId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        print(connection_dict)\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        path = attribute['path']\\r\\r        #obj_key = attribute['object']\\r\\r        #key = f'{path}/{obj_key}'\\r\\r        key = f'{path}/'\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r        print(file_path)\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r    return local_path""]},""position_x"":""189"",""position_y"":""19"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""fgKiR"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""fgKiR"",""alias"":""process_folder"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""process_folder"",""requirements"":""translatepy,PyPDF2,docx,exceptions,python-docx,pptx,python-pptx,collections,sentencepiece,langchain==0.2.6,langchain_openai,AzureOpenAI,openai==1.31.0,langchain_text_splitters"",""params"":[],""script"":[""import base64\\r\\rimport requests\\r\\rimport json\\r\\rimport os\\r\\rimport mimetypes\\r\\rfrom pydub import AudioSegment\\r\\rimport urllib3\\r\\rimport pathlib\\r\\rimport openai\\r\\r\\rimport shutil\\rimport boto3\\r\\rfrom translatepy import Translator\\r\\rfrom PyPDF2 import PdfReader\\r\\rfrom docx import Document\\r\\rfrom pptx import Presentation\\r\\rfrom transformers import T5Tokenizer, T5ForConditionalGeneration\\r\\r#from langchain_openai import PromptTemplate\\r#from langchain_text_splitters import PromptTemplate\\rfrom langchain.chains.llm import LLMChain\\rfrom langchain.chains.question_answering import load_qa_chain\\rfrom langchain_openai import AzureOpenAI\\rfrom langchain_core.prompts import PromptTemplate\\r\\r\\r\\rurllib3.disable_warnings()\\r\\rmodel = \\""whisper-m\\""\\r\\ros.environ[\\r\\r    'itgateway_token_url'] = 'https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\ros.environ['app_itgateway_client_id'] = '9090f1c5-d381-4ef6-b845-4bac98d02fbe'\\r\\ros.environ['app_itgateway_client_secret'] = 'CNl8Q~IA-EUpiyA5Kkh97-4uH3ajo2PqQOkpHbp~'\\r\\ros.environ['itgateway_grant_type'] = 'client_credentials'\\r\\ros.environ['app_itgateway_scope'] = 'b3490b10-6bd3-4f66-908d-fa1950e46598/.default'\\r\\ros.environ[model] = 'https://itgateway.infosys.com/ai-platform/wh-aic/v1/speech/transcribe'\\r\\r# def QnA(text):\\r\\r#     from langchain_text_splitters  import RecursiveCharacterTextSplitter\\r\\r\\r#     text_splitter = RecursiveCharacterTextSplitter()\\r\\r#     texts = text_splitter.split_text(text)\\r\\r#     docs = [{\\""doc\\"":t} for t in texts]\\r\\r#     # secrets\\r\\r#     os.environ[\\""OPENAI_API_KEY\\""] = '85b968a4b5c84d849c99661788c2c1ed'\\r\\r#     os.environ[\\""AZURE_OPENAI_ENDPOINT\\""] = 'https://azureft.openai.azure.com/'\\r\\r#     # secrets\\r\\r#     openai_api_version = '''2023-03-15-preview'''\\r\\r#     deployment_name = '''gtp35turbo'''\\r    \\r#     OPENAI_API_KEY = os.environ[\\""OPENAI_API_KEY\\""]\\r#     AZURE_OPENAI_ENDPOINT = os.environ[\\""AZURE_OPENAI_ENDPOINT\\""]\\r\\r#     llm = AzureOpenAI(api_key=OPENAI_API_KEY, deployment_name=deployment_name, openai_api_version=openai_api_version, azure_endpoint=AZURE_OPENAI_ENDPOINT)\\r\\r#     #llm = AzureOpenAI(deployment_name=deployment_name, openai_api_version=openai_api_versiont)\\r#     #llm = AzureOpenAI(api_key=OPENAI_API_KEY, deployment_name=deployment_name, openai_api_version=openai_api_version,azure_endpoint=AZURE_OPENAI_ENDPOINT)\\r\\r\\r#     template = \\""\\""\\""\\r\\r# Given the following document, please generate one question and answer based on that document.\\r\\r# Example Format:\\r\\r# Q. question here \\r\\r# A. answer here\\r\\r# These questions should be detailed and be based explicitly on information in the document. Begin!\\r\\r# <Begin Document>\\r\\r# {doc}\\r\\r# <End Document>\\""\\""\\""\\r\\r#     PROMPT = PromptTemplate(\\r\\r#         input_variables=[\\""doc\\""],\\r\\r#         template=template,\\r\\r#     )\\r\\r#     qa_chain = LLMChain(llm=llm, prompt=PROMPT )\\r\\r#     questions = ''\\r\\r#     for i in texts[:20]:\\r\\r#         qna =qa_chain.invoke([{\\""doc\\"": i}])\\r\\r#         questions= questions + qna['text']\\r\\r#     print(questions)\\r\\r#     return questions\\r\\r\\rdef QnA(text):\\r    from langchain_text_splitters  import RecursiveCharacterTextSplitter\\r    from langchain_openai import AzureOpenAI\\r    text_splitter = RecursiveCharacterTextSplitter()\\r    texts = text_splitter.split_text(text)\\r    docs = [{\\""doc\\"":t} for t in texts]\\r    # secrets\\r    OPENAI_API_KEY = '85b968a4b5c84d849c99661788c2c1ed'\\r    AZURE_OPENAI_ENDPOINT= 'https://azureft.openai.azure.com/'\\r    # secrets\\r    openai_api_version = '''2023-03-15-preview'''\\r    deployment_name = '''gtp35turbo'''\\r    llm = AzureOpenAI(api_key=OPENAI_API_KEY, deployment_name=deployment_name, openai_api_version=openai_api_version,azure_endpoint=AZURE_OPENAI_ENDPOINT)\\r    template = \\""\\""\\""\\rGiven the following document, please generate one question and answer based on that document.\\rExample Format:\\rQ. question here \\rA. answer here\\rThese questions should be detailed and be based explicitly on information in the document. Begin!\\r<Begin Document>\\r{doc}\\r<End Document>\\""\\""\\""\\r    PROMPT = PromptTemplate(\\r        input_variables=[\\""doc\\""],\\r        template=template,\\r    )\\r    qa_chain = LLMChain(llm=llm, prompt=PROMPT )\\r    questions = ''\\r    for i in texts[:20]:\\r        qna =qa_chain.invoke([{\\""doc\\"": i}])\\r        questions= questions + qna['text']\\r        \\r    question_list = questions.split(\\""Question:\\"")\\r    if len(question_list) > 6:  # We check for 6 because the first element of the split result is an empty string\\r        question_list = question_list[:6]\\r        questions = \\""Question:\\"".join(question_list)\\r    return questions\\r\\rdef process_folder(folder_path):\\r\\r    created_folders = []  # List to store the paths of the created .aip folders\\r\\r    queue = []\\r\\r    queue.append(folder_path)\\r\\r    translator = Translator()\\r\\r    while len(queue) >0:\\r\\r        current_folder = queue[0]\\r\\r        file_exist = False\\r\\r        for file_name in os.listdir(current_folder):\\r            if file_name in ['Translation', 'Transcribe','Summary']:  # Corrected condition to check individual strings\\r                print(\\""Skipping transcribe or translation or Summary folder\\"")\\r                continue\\r\\r            file_path = os.path.join(current_folder, file_name)\\r\\r            if os.path.isfile(file_path):\\r\\r                file_exist = True\\r\\r            elif not os.path.isfile(file_path) and not file_name.startswith('.'):\\r\\r                queue.append(os.path.join(current_folder, file_name))\\r\\r        if file_exist:\\r\\r            print(\\""Current File - \\"",file_path)\\r\\r            summary_folder = os.path.join(current_folder,'.aip','FAQ')\\r\\r            os.makedirs(summary_folder, exist_ok=True)\\r\\r            created_folders.append(os.path.dirname(summary_folder))  # Add the created .aip folder path to the list\\r\\r            count=0\\r\\r            for file_name in os.listdir(current_folder):\\r\\r                count = count+1\\r\\r                if count>10:\\r\\r                    break\\r\\r                file_path = os.path.join(current_folder, file_name)\\r\\r                text_for_qna = ''\\r                \\r                print(\\""file_path::\\"",file_path)\\r\\r                if os.path.isfile(file_path):\\r\\r                    extension = os.path.splitext(file_name)[1]\\r\\r                    mimetype = mimetypes.guess_type(file_path)[0]\\r\\r                    if mimetype and ('audio' in mimetype or 'video' in mimetype):\\r                        transcript_folder = os.path.join(current_folder,'.aip', 'Transcribe')\\r                        print(\\""Transcript folder path:\\"", transcript_folder)\\r                        \\r                        transcript_path = os.path.join(transcript_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r                        print(\\""Transcript file path:\\"", transcript_path)\\r                        \\r                        if os.path.exists(transcript_path):\\r                            with open(transcript_path, 'r', encoding='utf-8') as f:\\r                                transcript = f.read()\\r                            text_to_summarize = transcript\\r                            text_for_qna= transcript\\r                            print(\\""Transcript read successfully.\\"")\\r                        else:\\r                            print(\\""Transcript not found for file:\\"", file_name)\\r\\r                    elif extension in ['.txt', '.pdf', '.docx', '.pptx']:\\r\\r                        if extension == \\"".txt\\"":\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_for_qna = f.read()\\r\\r                        elif extension == \\"".pdf\\"":\\r\\r                            with open(file_path, 'rb') as f:\\r\\r                                pdf = PdfReader(f)\\r\\r                                text_for_qna = \\"" \\"".join(page.extract_text() for page in pdf.pages)\\r\\r                        elif extension == \\"".docx\\"":\\r\\r                            doc = Document(file_path)\\r\\r                            text_for_qna = \\"" \\"".join(paragraph.text for paragraph in doc.paragraphs)\\r\\r                        elif extension == \\"".pptx\\"":\\r\\r                            pres = Presentation(file_path)\\r\\r                            text_for_qna = \\"" \\"".join(\\r\\r                                \\"" \\"".join(shape.text for shape in slide.shapes if shape.has_text_frame) for slide in\\r\\r                                pres.slides)\\r\\r                        else:\\r\\r                            print(f\\""Skipping file {file_name} as it is not supported\\"")\\r\\r                            continue\\r\\r                    if text_for_qna !='':\\r\\r                        try:\\r\\r                            language = translator.language(text_for_qna[0:100])\\r\\r                            # base_language_info = f\\""The base language written in file: {language.result}  \\""\\r\\r                            if str(language.result) != \\""eng\\"":\\r\\r                                text_for_qna = translator.translate(text_for_qna, \\""English\\"").result\\r\\r                        except:\\r\\r                            print(\\""Translation failed\\"")\\r\\r                        summary = QnA(text_for_qna)\\r\\r                        output_filename = os.path.splitext(file_name)[0] + \\"".txt\\""\\r\\r                        output_file_path = os.path.join(summary_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                        with open(output_file_path, 'w', encoding='utf-8') as f:\\r\\r                            f.write(summary)\\r\\r                        print(f\\""Summarized file {file_name} has been saved to {output_file_path}\\"")\\r\\r                        file_path = output_file_path\\r\\r        queue.pop(0)\\r\\r    return created_folders\\r\\r""]},""position_x"":""414"",""position_y"":""141"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""eoXeL"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""BHlaI"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""DatasetExtractor"",""requirements"":""langchain_text_splitters,translatepy"",""params"":[],""script"":[""import os\\r\\rimport logging as logger\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r\\r    '''\\r\\r    call ai-plat api to get dataset config\\r\\r    return {dataset_config}\\r\\r    '''\\r\\r    #os.environ['AIPlatform_Referrer']='https://leap:4000'\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100'\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r\\r    #url = f\\""{os.environ['AIPlatform_Referrer']}/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r    headers = {\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r        'Project': '2',\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r    }\\r\\r    try:\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r        response.raise_for_status()\\r\\r        dataset_config = json.loads(response.text)\\r\\r        print('dataset_details', dataset_config)\\r\\r    except json.JSONDecodeError:\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r        dataset_config = None\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r        dataset_config = None\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r        dataset_config = None\\r\\r    return dataset_config\\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r    '''\\r\\r    download data from s3\\r\\r    return local file path\\r\\r    '''\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r                               endpoint_url=end_point_url,\\r\\r                               aws_access_key_id=access_key,\\r\\r                               aws_secret_access_key=secret_key,\\r\\r                               verify=False)\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r    if os.path.exists(local_path):\\r\\r        shutil.rmtree(local_path)\\r\\r    os.makedirs(local_path)\\r\\r    model_path = os.path.join(local_path)\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r        print((obj.key))\\r\\r        if obj.key.endswith('/'):\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r        else:\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r    return model_path\\r\\rdef DatasetExtractor():  # python-script Data\\r\\r    # get dataset configurations\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""datasetId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        print(connection_dict)\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        path = attribute['path']\\r\\r        #obj_key = attribute['object']\\r\\r        #key = f'{path}/{obj_key}'\\r\\r        key = f'{path}/'\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r        print(file_path)\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r    return local_path""]}]},{""id"":""BHlaI"",""alias"":""UploadToNutanix"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""UploadToNutanix"",""requirements"":"""",""params"":[],""script"":[""def UploadToNutanix(localpaths):\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""datasetId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetconfig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetconfig['datasource']['type']\\r\\r\\t\\r\\r    if dataset_type == 'S3':\\r\\r        viewtype = datasetconfig['views']\\r\\r        connection_dict = json.loads(datasetconfig['datasource']['connectionDetails'])\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetconfig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        for localpath in set(localpaths):  # Convert localpaths to a set to remove duplicates\\r\\r            for root, dirs, files in os.walk(localpath):\\r\\r                if 'Transcribe' in root:\\r\\r                    dirs[:] = []  # Skip subdirectories\\r\\r                else:\\r\\r                    transcribe_path = os.path.join(root,'.aip' 'Transcribe')\\r\\r                    print(\\""transcribe_path=\\"", transcribe_path)\\r\\r                    os.makedirs(transcribe_path, exist_ok=True)\\r\\r                for file in files:\\r\\r                    local_file = os.path.join(root, file)\\r\\r                    directories = local_file.split(os.sep)\\r                    print(\\""directories::::\\"",directories)\\r\\r                    #if viewtype == 'Folder View':\\r\\r                    if viewtype in ['Folder View', 'Audio View', 'Video View', 'Pdf View']:\\r                        new_path = gen_path(directories)\\r                        # new_path = '/'.join(directories[2:])\\r\\r                    else:\\r\\r                        new_path = '/'.join(directories[3:])\\r\\r                    print(\\""local files:\\"", local_file)\\r\\r                    print(\\""new_path:\\"", new_path)\\r\\r                    print(\\""attribute paths=\\"",attribute['path'])\\r\\r                    object_key = attribute['path']+'/'+new_path\\r\\r                    print(\\""object key: \\"", object_key)\\r\\r                    metadata = None\\r\\r                    s3 = boto3.resource('s3', endpoint_url=s3_end_point_url,\\r\\r                                        aws_access_key_id=s3_access_key,\\r\\r                                        aws_secret_access_key=s3_secret_key,\\r\\r                                        verify=False)\\r\\r                    extra_args = {'Metadata': metadata} if metadata else None\\r\\r                    s3.Bucket(bucket).upload_file(local_file, object_key, ExtraArgs=extra_args)\\r\\r                    print(f'File saved to S3: s3://{bucket}/' + object_key)\\rdef gen_path(path):\\r    index = path.index('.aip')\\r    newpath='/'.join(path[index:])\\r    return newpath\\r    ""]},""position_x"":""613"",""position_y"":""11"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""fgKiR"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""process_folder"",""requirements"":""translatepy,PyPDF2,docx,exceptions,python-docx,pptx,python-pptx,collections,sentencepiece,langchain==0.2.6,langchain_openai,AzureOpenAI,openai==1.31.0,langchain_text_splitters"",""params"":[],""script"":[""import base64\\r\\rimport requests\\r\\rimport json\\r\\rimport os\\r\\rimport mimetypes\\r\\rfrom pydub import AudioSegment\\r\\rimport urllib3\\r\\rimport pathlib\\r\\rimport openai\\r\\r\\rimport shutil\\rimport boto3\\r\\rfrom translatepy import Translator\\r\\rfrom PyPDF2 import PdfReader\\r\\rfrom docx import Document\\r\\rfrom pptx import Presentation\\r\\rfrom transformers import T5Tokenizer, T5ForConditionalGeneration\\r\\r#from langchain_openai import PromptTemplate\\r#from langchain_text_splitters import PromptTemplate\\rfrom langchain.chains.llm import LLMChain\\rfrom langchain.chains.question_answering import load_qa_chain\\rfrom langchain_openai import AzureOpenAI\\rfrom langchain_core.prompts import PromptTemplate\\r\\r\\r\\rurllib3.disable_warnings()\\r\\rmodel = \\""whisper-m\\""\\r\\ros.environ[\\r\\r    'itgateway_token_url'] = 'https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\ros.environ['app_itgateway_client_id'] = '9090f1c5-d381-4ef6-b845-4bac98d02fbe'\\r\\ros.environ['app_itgateway_client_secret'] = 'CNl8Q~IA-EUpiyA5Kkh97-4uH3ajo2PqQOkpHbp~'\\r\\ros.environ['itgateway_grant_type'] = 'client_credentials'\\r\\ros.environ['app_itgateway_scope'] = 'b3490b10-6bd3-4f66-908d-fa1950e46598/.default'\\r\\ros.environ[model] = 'https://itgateway.infosys.com/ai-platform/wh-aic/v1/speech/transcribe'\\r\\r# def QnA(text):\\r\\r#     from langchain_text_splitters  import RecursiveCharacterTextSplitter\\r\\r\\r#     text_splitter = RecursiveCharacterTextSplitter()\\r\\r#     texts = text_splitter.split_text(text)\\r\\r#     docs = [{\\""doc\\"":t} for t in texts]\\r\\r#     # secrets\\r\\r#     os.environ[\\""OPENAI_API_KEY\\""] = '85b968a4b5c84d849c99661788c2c1ed'\\r\\r#     os.environ[\\""AZURE_OPENAI_ENDPOINT\\""] = 'https://azureft.openai.azure.com/'\\r\\r#     # secrets\\r\\r#     openai_api_version = '''2023-03-15-preview'''\\r\\r#     deployment_name = '''gtp35turbo'''\\r    \\r#     OPENAI_API_KEY = os.environ[\\""OPENAI_API_KEY\\""]\\r#     AZURE_OPENAI_ENDPOINT = os.environ[\\""AZURE_OPENAI_ENDPOINT\\""]\\r\\r#     llm = AzureOpenAI(api_key=OPENAI_API_KEY, deployment_name=deployment_name, openai_api_version=openai_api_version, azure_endpoint=AZURE_OPENAI_ENDPOINT)\\r\\r#     #llm = AzureOpenAI(deployment_name=deployment_name, openai_api_version=openai_api_versiont)\\r#     #llm = AzureOpenAI(api_key=OPENAI_API_KEY, deployment_name=deployment_name, openai_api_version=openai_api_version,azure_endpoint=AZURE_OPENAI_ENDPOINT)\\r\\r\\r#     template = \\""\\""\\""\\r\\r# Given the following document, please generate one question and answer based on that document.\\r\\r# Example Format:\\r\\r# Q. question here \\r\\r# A. answer here\\r\\r# These questions should be detailed and be based explicitly on information in the document. Begin!\\r\\r# <Begin Document>\\r\\r# {doc}\\r\\r# <End Document>\\""\\""\\""\\r\\r#     PROMPT = PromptTemplate(\\r\\r#         input_variables=[\\""doc\\""],\\r\\r#         template=template,\\r\\r#     )\\r\\r#     qa_chain = LLMChain(llm=llm, prompt=PROMPT )\\r\\r#     questions = ''\\r\\r#     for i in texts[:20]:\\r\\r#         qna =qa_chain.invoke([{\\""doc\\"": i}])\\r\\r#         questions= questions + qna['text']\\r\\r#     print(questions)\\r\\r#     return questions\\r\\r\\rdef QnA(text):\\r    from langchain_text_splitters  import RecursiveCharacterTextSplitter\\r    from langchain_openai import AzureOpenAI\\r    text_splitter = RecursiveCharacterTextSplitter()\\r    texts = text_splitter.split_text(text)\\r    docs = [{\\""doc\\"":t} for t in texts]\\r    # secrets\\r    OPENAI_API_KEY = '85b968a4b5c84d849c99661788c2c1ed'\\r    AZURE_OPENAI_ENDPOINT= 'https://azureft.openai.azure.com/'\\r    # secrets\\r    openai_api_version = '''2023-03-15-preview'''\\r    deployment_name = '''gtp35turbo'''\\r    llm = AzureOpenAI(api_key=OPENAI_API_KEY, deployment_name=deployment_name, openai_api_version=openai_api_version,azure_endpoint=AZURE_OPENAI_ENDPOINT)\\r    template = \\""\\""\\""\\rGiven the following document, please generate one question and answer based on that document.\\rExample Format:\\rQ. question here \\rA. answer here\\rThese questions should be detailed and be based explicitly on information in the document. Begin!\\r<Begin Document>\\r{doc}\\r<End Document>\\""\\""\\""\\r    PROMPT = PromptTemplate(\\r        input_variables=[\\""doc\\""],\\r        template=template,\\r    )\\r    qa_chain = LLMChain(llm=llm, prompt=PROMPT )\\r    questions = ''\\r    for i in texts[:20]:\\r        qna =qa_chain.invoke([{\\""doc\\"": i}])\\r        questions= questions + qna['text']\\r        \\r    question_list = questions.split(\\""Question:\\"")\\r    if len(question_list) > 6:  # We check for 6 because the first element of the split result is an empty string\\r        question_list = question_list[:6]\\r        questions = \\""Question:\\"".join(question_list)\\r    return questions\\r\\rdef process_folder(folder_path):\\r\\r    created_folders = []  # List to store the paths of the created .aip folders\\r\\r    queue = []\\r\\r    queue.append(folder_path)\\r\\r    translator = Translator()\\r\\r    while len(queue) >0:\\r\\r        current_folder = queue[0]\\r\\r        file_exist = False\\r\\r        for file_name in os.listdir(current_folder):\\r            if file_name in ['Translation', 'Transcribe','Summary']:  # Corrected condition to check individual strings\\r                print(\\""Skipping transcribe or translation or Summary folder\\"")\\r                continue\\r\\r            file_path = os.path.join(current_folder, file_name)\\r\\r            if os.path.isfile(file_path):\\r\\r                file_exist = True\\r\\r            elif not os.path.isfile(file_path) and not file_name.startswith('.'):\\r\\r                queue.append(os.path.join(current_folder, file_name))\\r\\r        if file_exist:\\r\\r            print(\\""Current File - \\"",file_path)\\r\\r            summary_folder = os.path.join(current_folder,'.aip','FAQ')\\r\\r            os.makedirs(summary_folder, exist_ok=True)\\r\\r            created_folders.append(os.path.dirname(summary_folder))  # Add the created .aip folder path to the list\\r\\r            count=0\\r\\r            for file_name in os.listdir(current_folder):\\r\\r                count = count+1\\r\\r                if count>10:\\r\\r                    break\\r\\r                file_path = os.path.join(current_folder, file_name)\\r\\r                text_for_qna = ''\\r                \\r                print(\\""file_path::\\"",file_path)\\r\\r                if os.path.isfile(file_path):\\r\\r                    extension = os.path.splitext(file_name)[1]\\r\\r                    mimetype = mimetypes.guess_type(file_path)[0]\\r\\r                    if mimetype and ('audio' in mimetype or 'video' in mimetype):\\r                        transcript_folder = os.path.join(current_folder,'.aip', 'Transcribe')\\r                        print(\\""Transcript folder path:\\"", transcript_folder)\\r                        \\r                        transcript_path = os.path.join(transcript_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r                        print(\\""Transcript file path:\\"", transcript_path)\\r                        \\r                        if os.path.exists(transcript_path):\\r                            with open(transcript_path, 'r', encoding='utf-8') as f:\\r                                transcript = f.read()\\r                            text_to_summarize = transcript\\r                            text_for_qna= transcript\\r                            print(\\""Transcript read successfully.\\"")\\r                        else:\\r                            print(\\""Transcript not found for file:\\"", file_name)\\r\\r                    elif extension in ['.txt', '.pdf', '.docx', '.pptx']:\\r\\r                        if extension == \\"".txt\\"":\\r\\r                            with open(file_path, 'r', encoding='utf-8') as f:\\r\\r                                text_for_qna = f.read()\\r\\r                        elif extension == \\"".pdf\\"":\\r\\r                            with open(file_path, 'rb') as f:\\r\\r                                pdf = PdfReader(f)\\r\\r                                text_for_qna = \\"" \\"".join(page.extract_text() for page in pdf.pages)\\r\\r                        elif extension == \\"".docx\\"":\\r\\r                            doc = Document(file_path)\\r\\r                            text_for_qna = \\"" \\"".join(paragraph.text for paragraph in doc.paragraphs)\\r\\r                        elif extension == \\"".pptx\\"":\\r\\r                            pres = Presentation(file_path)\\r\\r                            text_for_qna = \\"" \\"".join(\\r\\r                                \\"" \\"".join(shape.text for shape in slide.shapes if shape.has_text_frame) for slide in\\r\\r                                pres.slides)\\r\\r                        else:\\r\\r                            print(f\\""Skipping file {file_name} as it is not supported\\"")\\r\\r                            continue\\r\\r                    if text_for_qna !='':\\r\\r                        try:\\r\\r                            language = translator.language(text_for_qna[0:100])\\r\\r                            # base_language_info = f\\""The base language written in file: {language.result}  \\""\\r\\r                            if str(language.result) != \\""eng\\"":\\r\\r                                text_for_qna = translator.translate(text_for_qna, \\""English\\"").result\\r\\r                        except:\\r\\r                            print(\\""Translation failed\\"")\\r\\r                        summary = QnA(text_for_qna)\\r\\r                        output_filename = os.path.splitext(file_name)[0] + \\"".txt\\""\\r\\r                        output_file_path = os.path.join(summary_folder, f\\""{os.path.splitext(file_name)[0]}.txt\\"")\\r\\r                        with open(output_file_path, 'w', encoding='utf-8') as f:\\r\\r                            f.write(summary)\\r\\r                        print(f\\""Summarized file {file_name} has been saved to {output_file_path}\\"")\\r\\r                        file_path = output_file_path\\r\\r        queue.pop(0)\\r\\r    return created_folders\\r\\r""]},{""FunctionName"":""DatasetExtractor"",""requirements"":""langchain_text_splitters,translatepy"",""params"":[],""script"":[""import os\\r\\rimport logging as logger\\r\\rdef getdatasetconfig(dataset_id: str, organization: str):\\r\\r    '''\\r\\r    call ai-plat api to get dataset config\\r\\r    return {dataset_config}\\r\\r    '''\\r\\r    #os.environ['AIPlatform_Referrer']='https://leap:4000'\\r    os.environ['NO_PROXY']='victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap2:3100'\\r    url = f\\""https://leap2:3100/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r    print(\\""url was :\\"",url)\\r\\r\\r    #url = f\\""{os.environ['AIPlatform_Referrer']}/api/services/fetchDatasetDetails/{dataset_id}/{organization}\\""\\r\\r    headers = {\\r\\r        'access-token': 'aec127c2-c984-33f6-9a3a-355xd1dof097',\\r\\r        'Project': '2',\\r\\r        'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B'\\r\\r    }\\r\\r    try:\\r\\r        response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r        response.raise_for_status()\\r\\r        dataset_config = json.loads(response.text)\\r\\r        print('dataset_details', dataset_config)\\r\\r    except json.JSONDecodeError:\\r\\r        print(f\\""Error: Received invalid JSON response: {response.text}\\"")\\r\\r        dataset_config = None\\r\\r    except requests.exceptions.HTTPError as err:\\r\\r        print(f\\""HTTP error occurred: {err}\\"")\\r\\r        dataset_config = None\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {e}\\"")\\r\\r        dataset_config = None\\r\\r    return dataset_config\\r\\rdef s3_download_data(end_point_url: str = '', access_key: str = '', secret_key: str = '', bucket: str = '',\\r\\r                     obj_key: str = '', local_path: str = '/data'):\\r\\r    '''\\r\\r    download data from s3\\r\\r    return local file path\\r\\r    '''\\r\\r    s3_client = boto3.resource(service_name='s3',\\r\\r                               endpoint_url=end_point_url,\\r\\r                               aws_access_key_id=access_key,\\r\\r                               aws_secret_access_key=secret_key,\\r\\r                               verify=False)\\r\\r    bucket_object = s3_client.Bucket(bucket)\\r\\r    print(bucket_object.objects.filter(Prefix=obj_key))\\r\\r    if os.path.exists(local_path):\\r\\r        shutil.rmtree(local_path)\\r\\r    os.makedirs(local_path)\\r\\r    model_path = os.path.join(local_path)\\r\\r    for obj in bucket_object.objects.filter(Prefix=obj_key):\\r\\r        print((obj.key))\\r\\r        if obj.key.endswith('/'):\\r\\r            if not os.path.exists(f\\""{model_path}/{obj.key}\\""):\\r\\r                os.makedirs(f\\""{model_path}/{obj.key}\\"")\\r\\r        else:\\r\\r            os.makedirs(os.path.dirname(f\\""{model_path}/{obj.key}\\""), exist_ok=True)\\r\\r            res = bucket_object.download_file(obj.key, f\\""{model_path}/{obj.key}\\"")\\r\\r    return model_path\\r\\rdef DatasetExtractor():  # python-script Data\\r\\r    # get dataset configurations\\r    datasetid_param = os.environ['datasetId']\\r\\r    print(\\""datasetId###\\"",datasetid_param)\\r\\r    org_param = os.environ['org']\\r\\r    print(\\""organization###\\"",org_param)\\r\\r    datasetcofig = getdatasetconfig(dataset_id=datasetid_param, organization=org_param)\\r\\r    dataset_type = datasetcofig['datasource']['type']\\r\\r    if dataset_type == 'S3':\\r\\r        connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r        print(connection_dict)\\r\\r        print(\\""Fetched Connection Details\\"")\\r\\r        s3_access_key = connection_dict['accessKey']\\r\\r        s3_secret_key = connection_dict['secretKey']\\r\\r        s3_end_point_url = connection_dict['url']\\r\\r        attribute = json.loads(datasetcofig['attributes'])\\r\\r        bucket = attribute['bucket']\\r\\r        path = attribute['path']\\r\\r        #obj_key = attribute['object']\\r\\r        #key = f'{path}/{obj_key}'\\r\\r        key = f'{path}/'\\r\\r        local_path = 'dataset_file' + '_' + datasetid_param\\r\\r        file_path = s3_download_data(end_point_url=s3_end_point_url, access_key=s3_access_key, secret_key=s3_secret_key,\\r\\r                                     bucket=bucket, obj_key=key, local_path=local_path)\\r\\r        print(file_path)\\r\\r        print(\\""LOCALPATH\\"", local_path)\\r\\r    print(\\""Dataset DatasetExtractor Local path: \\"", local_path)\\r\\r    return local_path""]}]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""}],""environment"":[{""name"":""no_proxy"",""value"":""victlpth5-04,10.82.53.110,infyaiplat.ad.infosys.com,leap,leap2:7000""},{""name"":""AIPlatform_Referrer"",""value"":""https://leap2:7000""},{""name"":""proxy"",""value"":""http://blrproxy.ad.infosys.com:80""},{""name"":""InstallDeps"",""value"":""False""},{""name"":""datasetId"",""value"":""LEOSPCMN96274""},{""name"":""org"",""value"":""leo1311""}],""default_runtime"":""{\\""dsAlias\\"":\\""LocalCluster\\"",\\""dsName\\"":\\""LEALCLCL12132\\"",\\""type\\"":\\""REMOTE\\""}""}","meghashree.m02@infosys.com","QuestionAnswerGeneration","2024-10-30 02:55:48","LEOQSTNS74133","leo1311","DragNDropLite","5","N","pipeline","{""5"":{""taskId"":""c08dca42-bf87-4119-8c3a-801e71aaeb4e""}}","\0","0"
"Admin","2024-06-03 10:24:19.361000","\0","Semantic-Search-Bedrock",\N,"{""elements"":[{""id"":""zaVZC"",""alias"":""Dataset Extractor"",""name"":""Dataset Extractor"",""classname"":""DatasetExtractor"",""category"":""DatasetExtractor"",""attributes"":{},""position_x"":""36"",""position_y"":""71"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""YSLOw"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import boto3\\r\\nfrom typing import List, Optional\\r\\nimport logging as logger \\r\\nimport pathlib\\r\\nimport os\\r\\nimport json\\r\\nimport shutil\\r\\nimport requests\\r\\nimport boto3\\r\\nimport json\\r\\nfrom typing import List, Optional, Union, Dict, Sequence, Any\\r\\nfrom urllib.parse import quote_plus\\r\\n#from leaputils import Security\\r\\nimport sqlite3\\r\\n# !pip install unstructured\\r\\n# !pip install \\""unstructured[pdf]\\""\\r\\n\\r\\nclass DatasetExtractorConfig:\\r\\n    \\""\\""\\""\\r\\n    DatasetExtractorConfig class to get dataset config.\\r\\n    Args:\\r\\n        config (dict): Dataset config\\r\\n    \\""\\""\\""\\r\\n    def __init__(self, config: Optional[Any]={}) -> None:   \\r\\n        self.local_path: str = config.get('local_path','RAG_data')            \\r\\n        self.query: str = config.get('query',None)   \\r\\n        self.index_search: str = config.get('index_search', 'Default_Index')              \\r\\nclass DatasetExtractor:                            \\r\\n    \\""\\""\\""\\r\\n    Extract dataset. Currently We support S3 datastore.        \\r\\n    Args:\\r\\n        dataset_id (str): Dataset id to get dataset config  \\r\\n        local_path (str): Local file path to store file downloaded from data store,   \\r\\n        index_search (str): To store embedding at particular index          \\r\\n    Returns:\\r\\n        if dataset_type is S3: file_path (str): Local file path\\r\\n        if dataset_type is MYSQL, POSTGRESQL, MSSQL: metadata (dict): metadata\\r\\n    \\""\\""\\""\\r\\n    def __init__(self, dataset_id:str, organization:str) -> None:\\r\\n        self.organization = organization\\r\\n        self.dataset_id = dataset_id        \\r\\n    def get_data(self, config) -> str:         \\r\\n        try:\\r\\n            # get dataset config dict\\r\\n            datasetcofig = self.getdatasetconfig(dataset_id=self.dataset_id, organization=self.organization)              \\r\\n            view = datasetcofig['views']      \\r\\n            dataset_type = datasetcofig['datasource']['type']        \\r\\n            metadata = {\\r\\n                'dataset_id': self.dataset_id,\\r\\n                'organization': self.organization,\\r\\n                'dataset_type': dataset_type,                   \\r\\n            }\\r\\n            connection_details = dict()\\r\\n            if dataset_type == 'S3':  \\r\\n                if view == 'Folder View':\\r\\n                    connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\n                    s3_access_key = connection_dict['accessKey']\\r\\n                    s3_secret_key = connection_dict['secretKey']\\r\\n                    s3_end_point_url = connection_dict['url']\\r\\n                    attribute = json.loads(datasetcofig['attributes'])\\r\\n                    bucket = attribute['bucket']    \\r\\n                    path = attribute['path'] \\r\\n                    local_path = '/temp/'+config.local_path+'_'+self.dataset_id\\r\\n                    count = 0\\r\\n                    flag = False\\r\\n                    for i in os.listdir(\\""/temp/\\""):\\r\\n                        if i.find(local_path[1:])==0:\\r\\n                            flag = True\\r\\n                            count += 1\\r\\n                    if flag:\\r\\n                        local_path = local_path+(count*'_')\\r\\n                    file_path = self.s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = path, local_path = local_path)\\r\\n                    metadata['source'] = file_path \\r\\n                    return metadata\\r\\n                else:                \\r\\n                    connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\n                    s3_access_key = connection_dict['accessKey']\\r\\n                    s3_secret_key = connection_dict['secretKey']\\r\\n                    s3_end_point_url = connection_dict['url'] \\r\\n                    attribute = json.loads(datasetcofig['attributes'])\\r\\n                    bucket = attribute['bucket']               \\r\\n                    path = attribute['path']   \\r\\n                    obj_key = attribute['object']  \\r\\n                    key = f'{path}/{obj_key}'                \\r\\n                    local_path = '/temp/'+config.local_path+'_'+self.dataset_id                           \\r\\n                    count = 0\\r\\n                    flag = False\\r\\n                    for i in os.listdir(\\""/temp/\\""):\\r\\n                        if i.find(local_path[1:])==0:\\r\\n                            flag = True\\r\\n                            count += 1\\r\\n                    if flag:\\r\\n                        local_path = local_path+(count*'_')                                 \\r\\n                    file_path = self.s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = key, local_path = local_path)\\r\\n                    metadata['source'] = file_path                \\r\\n                    return metadata\\r\\n            elif dataset_type == 'MYSQL':   \\r\\n                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\n                attributes = json.loads(datasetcofig['attributes'])            \\r\\n                db_user_name = connection_dict['userName']           \\r\\n                db_url = connection_dict['url']\\r\\n                db_password = connection_dict['password']   \\r\\n                salt = datasetcofig['datasource']['salt']\\r\\n                sql_query = attributes['Query'] \\r\\n                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query,prefix='jdbc:mysql://')            \\r\\n                self.store_connection_details(connection_details, connection_string, config.index_search, metadata)\\r\\n                return metadata            \\r\\n            elif dataset_type == 'POSTGRESQL':\\r\\n                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\n                attributes = json.loads(datasetcofig['attributes'])            \\r\\n                db_user_name = connection_dict['userName']           \\r\\n                db_url = connection_dict['url']\\r\\n                db_password = connection_dict['password']   \\r\\n                salt = datasetcofig['datasource']['salt']\\r\\n                sql_query = attributes['Query'] \\r\\n                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query, prefix='jdbc:postgresql://')            \\r\\n                self.store_connection_details(connection_details, connection_string, config.index_search)\\r\\n                return metadata         \\r\\n            elif dataset_type == 'MSSQL':\\r\\n                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\n                attributes = json.loads(datasetcofig['attributes'])            \\r\\n                db_user_name = connection_dict['userName']           \\r\\n                db_url = connection_dict['url']\\r\\n                db_password = connection_dict['password']   \\r\\n                salt = datasetcofig['datasource']['salt']\\r\\n                sql_query = attributes['Query'] \\r\\n                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query,prefix='jdbc:sqlserver://')            \\r\\n                self.store_connection_details(connection_details, connection_string, config.index_search)\\r\\n                return metadata \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in DatasetExtractor as: ',e)\\r\\n            return e\\r\\n    #helper functions\\r\\n    def getdatasetconfig(self, dataset_id:str, organization:str):\\r\\n        '''\\r\\n        call ai-plat api to get dataset config\\r\\n        return {dataset_config}\\r\\n        '''  \\r\\n        try:                  \\r\\n                      \\r\\n            api_referer = os.environ.get(\\""API_URL\\"")\\r\\n            url = f'{api_referer}/api/aip/services/fetchDatasetDetails/{dataset_id}/{organization}'\\r\\n            logger.info(url)\\r\\n            headers = {\\r\\n            'access-token': os.environ.get('app_access_token'),\\r\\n            'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B',\\r\\n            'Project':'2'\\r\\n            }\\r\\n            response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\n            dataset_config = json.loads(response.text)\\r\\n            return dataset_config\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in getdatasetconfig as: ', e)\\r\\n            raise e\\r\\n    def s3_download_data(self, end_point_url:str = '', access_key:str = '', secret_key:str = '', bucket:str = '', obj_key:str = '', local_path:str='/data'):\\r\\n        '''\\r\\n        download data from s3         \\r\\n        return local file path       \\r\\n        '''     \\r\\n        try:\\r\\n            s3_client = boto3.resource(service_name='s3',\\r\\n                        endpoint_url=end_point_url,\\r\\n                        aws_access_key_id=access_key,\\r\\n                        aws_secret_access_key=secret_key,\\r\\n                        verify=False)\\r\\n            bucket_object = s3_client.Bucket(bucket)\\r\\n            object_save_path = ''\\r\\n            logger.info(bucket_object.objects.filter(Prefix=obj_key))        \\r\\n            if os.path.exists(local_path):\\r\\n                shutil.rmtree(local_path)\\r\\n            os.makedirs(local_path)\\r\\n            model_path = os.path.join(local_path)\\r\\n            for my_bucket_object in bucket_object.objects.filter(Prefix=obj_key):   \\r\\n                if my_bucket_object.key.endswith('/'):\\r\\n                    pass\\r\\n                elif my_bucket_object.key.find('.aip')>=0:\\r\\n                    pass\\r\\n                else:                 \\r\\n                    object_save_path = (f\\""{model_path}/{pathlib.Path(my_bucket_object.key).name}\\"")\\r\\n                    bucket_object.download_file(my_bucket_object.key, object_save_path)\\r\\n            return local_path \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in s3_download_data as: ', e)\\r\\n            raise e\\r\\n    def get_connection_details(self, db_user_name:str, db_password:str, db_url:str, salt:str, sql_query:str, prefix:str):\\r\\n        '''\\r\\n        Get connection string for the database.\\r\\n        Args:\\r\\n            db_user_name (str): Database user name.\\r\\n            db_password (str): Database password.\\r\\n            db_url (str): Database URL.\\r\\n            salt (str): Salt used to encrypt the password.\\r\\n            prefix (str): Protocol prefix.\\r\\n        Returns:\\r\\n            connection_details (dict): Dictionary containing connection string, user name, password, host, port, and database.           \\r\\n        '''\\r\\n        try:\\r\\n            connection_details = {}\\r\\n            # decrypt password\\r\\n            db_password = Security.decrypt(db_password,salt)\\r\\n            # Remove protocol prefix and leading slash\\r\\n            stripped_url = db_url[len(prefix):]\\r\\n            # Split by components, assuming username and password are not present\\r\\n            host, port_database = stripped_url.split(\\""/\\"", 1)\\r\\n            # Extract host and port\\r\\n            host, port = host.split(\\"":\\"")\\r\\n            # Extract database\\r\\n            database = port_database.strip(\\""/\\"")\\r\\n            # Form connection string\\r\\n            connection_string = f'mysql://{db_user_name}:{quote_plus(db_password)}@{host}:{port}/{database}'\\r\\n            connection_details['db_user_name'] = db_user_name\\r\\n            connection_details['db_password'] = db_password\\r\\n            connection_details['db_host'] = host\\r\\n            connection_details['db_port'] = port\\r\\n            connection_details['database'] = database\\r\\n            connection_details['query'] = sql_query\\r\\n            return connection_string, connection_details\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_connection_details as: ', e)\\r\\n            raise e\\r\\n    def store_connection_details(self, connection_details:dict, connection_string:str, index_search:str, metadata:dict):         \\r\\n        try:\\r\\n            # Connect to the database or create it if it doesn't exist\\r\\n            root_dir = \\""/RAG_DB\\""\\r\\n            os.makedirs(root_dir, exist_ok=True)  # Create only if needed\\r\\n            root_path = os.path.abspath(root_dir)\\r\\n            path = os.path.join(root_path,'rag_database.db')\\r\\n            # path = os.path.join('../database','rag_database.db')\\r\\n            conn = sqlite3.connect(path) \\r\\n            # Create a cursor object to execute SQL commands\\r\\n            cursor = conn.cursor()\\r\\n            # Create a table (replace with your desired table name and columns)\\r\\n            cursor.execute('''\\r\\n            CREATE TABLE IF NOT EXISTS dataset_details (\\r\\n                id INTEGER PRIMARY KEY AUTOINCREMENT,\\r\\n                dataset_id TEXT NOT NULL,\\r\\n                organization TEXT NOT NULL,\\r\\n                connection_string TEXT NOT NULL,\\r\\n                connection_details JSON NOT NULL,\\r\\n                metadata JSON,\\r\\n                index_search TEXT NOT NULL\\r\\n            )\\r\\n            ''')\\r\\n            connection_details_json = json.dumps(connection_details)\\r\\n            metadata_json = json.dumps(metadata)\\r\\n            # Prepare SQL query with placeholders for values\\r\\n            sql = \\""INSERT INTO dataset_details (dataset_id, ORGANIZATION, connection_string, connection_details, metadata, index_search) VALUES (?, ?, ?, ?, ?, ?)\\""\\r\\n            # Data to be inserted (replace with your actual values)\\r\\n            values = (self.dataset_id, self.organization, connection_string, connection_details_json, metadata_json, index_search)\\r\\n            # Execute the query with prepared values\\r\\n            cursor.execute(sql, values)\\r\\n            # Commit the changes to the database\\r\\n            conn.commit()\\r\\n            logger.info(\\""data inserted successfully!....\\"")                   \\r\\n        except sqlite3.connector.Error as e:\\r\\n            logger.info('Thre is some error whiling storing data as:',e)\\r\\n            raise e\\r\\n        finally:\\r\\n            # Close database connection properly\\r\\n            cursor.close()\\r\\n            conn.close()\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[]},{""id"":""YSLOw"",""alias"":""Data Chunker"",""name"":""Data Chunker"",""classname"":""DataChunker"",""category"":""DataChunker"",""attributes"":{},""position_x"":""251"",""position_y"":""71"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""zaVZC"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""alnmZ"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import os\\r\\nfrom langchain_core.documents import Document\\r\\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\\r\\nimport base64\\r\\nimport requests\\r\\nimport moviepy.editor as mp  \\r\\nfrom pydub import AudioSegment\\r\\nimport json\\r\\nfrom typing import List, Optional, Union, Dict, Sequence, Any, Type\\r\\nfrom langchain_community.document_loaders.text import TextLoader\\r\\nfrom langchain_community.document_loaders.csv_loader import CSVLoader\\r\\nfrom langchain_community.document_loaders.unstructured import UnstructuredFileLoader\\r\\nfrom langchain_community.document_loaders.html_bs import BSHTMLLoader\\r\\nfrom pypdf import PdfReader\\r\\nimport base64\\r\\nimport boto3\\r\\nfrom langchain_community.chat_models.bedrock import BedrockChat\\r\\nimport json\\r\\nfrom langchain.schema.document import Document\\r\\nimport uuid\\r\\nimport logging \\r\\nlogger = logging.getLogger(__name__)\\r\\nlogger.setLevel(logging.DEBUG)\\r\\nhandler = logging.StreamHandler()\\r\\nformatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')\\r\\nhandler.setFormatter(formatter)\\r\\nlogger.addHandler(handler)\\r\\nFILE_LOADER_TYPE = Union[Type[UnstructuredFileLoader], Type[TextLoader], Type[CSVLoader],Type[BSHTMLLoader]\\r\\n                            ]\\r\\nclass DatasetChunkerConfig:\\r\\n    def __init__(self, config: Optional[Any]={}) -> None:        \\r\\n        self.encoding: Optional[str] = config.get('encoding','utf8')\\r\\n        self.autodetect_encoding: bool = config.get('autodetect_encoding',False)\\r\\n        self.password: Optional[Union[str, bytes]] = config.get('password',None)\\r\\n        self.headers: Optional[Dict] = config.get('headers',None)\\r\\n        self.extract_images: bool = config.get('extract_images',False)\\r\\n        self.source_column: str = config.get('source_column',None)\\r\\n        self.metadata_columns: Sequence[str] = config.get('metadata_columns',())\\r\\n        self.csv_args: Dict | None = config.get('csv_args',None)\\r\\n        self.mode: str = config.get('mode','single')\\r\\n        self.strategy: str = config.get('strategy','fast')\\r\\n        self.chunk_size: int = config.get('chunk_size',500)\\r\\n        self.chunk_overlap: int = config.get('chunk_overlap',50)\\r\\n        self.separators: List[str] = config.get('separators',None)\\r\\n        self.keep_separator: bool = config.get('keep_separator',True)\\r\\n        self.audio_chunk_size: int = config.get('audio_chunk_size', 60)\\r\\nclass DatasetChunker:   \\r\\n    \\""\\""\\""Chunk and split the data.    \\r\\n    Args:\\r\\n        file_path (str): Path of the file to load, \\r\\n        textloader:              \\r\\n            encoding (Optional,str): File encoding to use. If `None`, the file will be loaded with the default system encoding \\r\\n            autodetect_encoding (Optional,bool): Whether to try to autodetect the file encoding if the specified encoding fails\\r\\n        pdfloader:\\r\\n            password (Optional,[Union[str, bytes]]): Password for PyPDFLoader\\r\\n            headers (Optional,[Dict]): Header for PyPDFLoader\\r\\n            extract_images (Optional,bool): Extract image from pdf\\r\\n        csvloader:\\r\\n            source_column (Optional, str): The name of the column in the CSV file to use as the source\\r\\n            metadata_columns  (Optional,Sequence[str]): A sequence of column names to use as metadata\\r\\n            csv_args (Optonal, Dict): A dictionary of arguments to pass to the csv.DictReader              \\r\\n            encoding (Optional,str): File encoding to use. If `None`, the file will be loaded with the default system encoding \\r\\n            autodetect_encoding (Optional,bool): Whether to try to autodetect the file encoding if the specified encoding fails\\r\\n        markdown:\\r\\n            mode (Optional,str):  You can run the loader in one of two modes: \\""single\\"" and \\""elements\\"". If you use \\""single\\"" mode, the document will be returned as a single langchain Document object. If you use \\""elements\\"" mode, the unstructured library will split the document into elements such as Title and NarrativeText\\r\\n            strategy (Optional,str): strategy to chunk, default is\\""fast\\""        \\r\\n        splitdocs:\\r\\n            chunk_size (Optiona,int): Define chunk size for RecursiveCharacterTextSplitter\\r\\n            chunk_overlap (Optiona,int): Define chunk overlape for RecursiveCharacterTextSplitter\\r\\n            separators (Optional,List[str]): Define separators for RecursiveCharacterTextSplitter,\\r\\n            keep_separator (Optional,bool): Define keep_separator for RecursiveCharacterTextSplitter\\r\\n    Returns:        \\r\\n        List of splitted documents to be stored in vector dbs \\r\\n        documents: List[Document]\\r\\n    \\""\\""\\""\\r\\n    def __init__(self, metadata: dict) -> None:\\r\\n        self.file_path = metadata['source']\\r\\n        self.metadata = metadata\\r\\n    # Main function    \\r\\n    def chunk_data(self, config) -> List[Document]:\\r\\n        import os\\r\\n        '''\\r\\n            this function will chunk the data based on the config provided\\r\\n            return: List[Document]\\r\\n        '''\\r\\n        try:\\r\\n            allsplit_doc_list = list()\\r\\n            if not config.extract_images:\\r\\n                loader = self.directory_loader(path=self.file_path,silent_errors=True,show_progress=True,loader_kwargs={'mode':'paged'})\\r\\n                documents = loader.load()\\r\\n                del self.metadata['source']\\r\\n                final_document = self.document_with_metadata(documents, self.metadata)\\r\\n                allsplit_doc_list.extend(final_document)\\r\\n                for root, dirs, files in os.walk(self.file_path):\\r\\n                    for file in files:\\r\\n                        file_type = os.path.splitext(file)[1].lower()\\r\\n                        filename = os.path.join(root, file)\\r\\n                        if file_type == '.mp4'.strip().lower() :\\r\\n                            audio_file = self.audio_extractor(filename)\\r\\n                            chunker_folder = self.audio_chunker(audio_file, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe,file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()  \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)\\r\\n                        elif file_type.strip().lower() == '.mp3'.strip().lower():\\r\\n                            audio_file = self.mp3_converter(filename)\\r\\n                            chunker_folder = self.audio_chunker(audio_file, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe, file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()  \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)\\r\\n                        elif file_type.strip().lower() == '.wav'.strip().lower():                     \\r\\n                            chunker_folder = self.audio_chunker(filename, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe, file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()\\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)\\r\\n            else:\\r\\n\\r\\n                for subdir, dirs, files in os.walk(self.file_path):\\r\\n                    for file in files:\\r\\n                        filename = os.path.join(subdir, file)                \\r\\n                        file_type = self.checkfiletype(file_path=filename)  \\r\\n                        if file_type.strip().lower() == '.txt'.strip().lower():                                        \\r\\n                            loader = self.text_loader(file_path=filename, encoding=config.encoding, autodetect_encoding=config.autodetect_encoding)                \\r\\n                            documents = loader.load()\\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/')                     \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata)\\r\\n                            allsplit_doc_list.extend(final_document) \\r\\n                        elif file_type.strip().lower()  == '.pdf'.strip().lower() or file_type.strip().lower()  == '.ppt'.strip().lower()  or file_type.strip().lower() =='.pptx'.strip().lower()  or file_type.strip().lower() =='docx'.strip().lower() :\\r\\n                            if file_type=='.ppt'or file_type=='.pptx':\\r\\n                                import comtypes.client \\r\\n                                import pythoncom\\r\\n                                pythoncom.CoInitialize()\\r\\n                                powerpoint = comtypes.client.CreateObject(\\""Powerpoint.Application\\"")\\r\\n                                deck = powerpoint.Presentations.Open(filename)\\r\\n                                output_pdf_file = os.path.splitext(filename)[0] + \\"".pdf\\""\\r\\n                                deck.SaveAs(output_pdf_file, 32)\\r\\n                                deck.Close()\\r\\n                                powerpoint.Quit()\\r\\n                                os.remove(filename)\\r\\n                                base_name, _ = os.path.splitext(filename)\\r\\n                                filename=base_name +'.pdf'\\r\\n                            if file_type=='.docx':\\r\\n                                from docx2pdf import convert\\r\\n                                import os\\r\\n                                convert(filename)\\r\\n                                os.remove(filename)\\r\\n                                base_name, _ = os.path.splitext(filename)\\r\\n                                filename=base_name +'.pdf'\\r\\n                            loader = self.pdf_loader(file_path=filename, password=config.password, headers=config.headers, extract_images=config.extract_images)\\r\\n                            documents = loader.load()  \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata)\\r\\n                            if config.extract_images:\\r\\n                                image_summary_document= self.get_images_summary(filename)\\r\\n                                image_summary_document_with_metadata= self.document_with_metadata(image_summary_document, self.metadata)\\r\\n                                final_document.extend(image_summary_document_with_metadata) \\r\\n                                \\r\\n                            allsplit_doc_list.extend(final_document)    \\r\\n                        elif file_type.strip().lower()  == '.csv'.strip().lower() :\\r\\n                            loader = self.csv_loader(file_path=filename, source_column=config.source_column, metadata_columns=config.metadata_columns, csv_args=config.csv_args, encoding=config.encoding, autodetect_encoding=config.autodetect_encoding)\\r\\n                            documents = loader.load() \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/')              \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata)               \\r\\n                            allsplit_doc_list.extend(final_document) \\r\\n                        elif file_type.strip().lower()  == '.md'.strip().lower() :\\r\\n                            loader = self.markdown_loader(file_path=filename, mode=config.mode, strategy=config.strategy)\\r\\n                            documents = loader.load()\\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/')               \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document) \\r\\n                        elif file_type.strip().lower() == '.mp4'.strip().lower():                \\r\\n                            audio_file = self.audio_extractor(filename)\\r\\n                            chunker_folder = self.audio_chunker(audio_file, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe,file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()  \\r\\n                            \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)\\r\\n                        elif file_type.strip().lower() == '.mp3'.strip().lower():\\r\\n                            audio_file = self.mp3_converter(filename)\\r\\n                            chunker_folder = self.audio_chunker(audio_file, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe, file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()  \\r\\n                            \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)  \\r\\n                        elif file_type.strip().lower() == '.wav'.strip().lower():                     \\r\\n                            chunker_folder = self.audio_chunker(filename, chunk_size_param=config.audio_chunk_size)\\r\\n                            overall_transcribe = self.audio_transcriber(chunker_folder)\\r\\n                            df = self.GetTranscribeWithMetaData(overall_transcribe, file_type)\\r\\n                            loader = self.dataframe_loader(df, page_content_column=\\""Transcribe\\"")\\r\\n                            documents = loader.load()  \\r\\n                            \\r\\n                            self.metadata['source'] = filename.replace('\\\\\\\\', '/') \\r\\n                            final_document = self.document_with_metadata(documents, self.metadata) \\r\\n                            allsplit_doc_list.extend(final_document)\\r\\n                            \\r\\n                        else:\\r\\n                            err=f'Currently {file_type} file type is not supported'\\r\\n                            raise err\\r\\n            if allsplit_doc_list != None:\\r\\n                final_splitted_document = self.splitdocs(allsplit_doc_list, chunk_size=config.chunk_size, chunk_overlap=config.chunk_overlap, separators=config.separators, keep_separator=config.keep_separator)\\r\\n                return final_splitted_document        \\r\\n            # if final_document != None:\\r\\n            #     final_splitted_document = self.splitdocs(final_document, chunk_size=config.chunk_size, chunk_overlap=config.chunk_overlap, separators=config.separators, keep_separator=config.keep_separator)\\r\\n            #     return final_splitted_document        \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in chunk_data as',e)\\r\\n            raise e\\r\\n    # Helper functions\\r\\n    def get_imageSummary(self,base64_image):\\r\\n        from langchain_community.chat_models.bedrock import BedrockChat\\r\\n        ACCESS_ID=os.environ.get('app_aws_secret_access_id')\\r\\n        ACCESS_KEY=os.environ.get('app_aws_secret_access_key')\\r\\n        bedrock = boto3.client(service_name='bedrock-runtime',aws_access_key_id=ACCESS_ID,aws_secret_access_key=ACCESS_KEY,region_name='us-east-1',endpoint_url='https://bedrock-runtime.us-east-1.amazonaws.com')\\r\\n        modelId = 'anthropic.claude-3-sonnet-20240229-v1:0' # change this to use a different version from the model provider\\r\\n        chat = BedrockChat(model_id=modelId,\\r\\n                        client=bedrock,\\r\\n                        model_kwargs={\\r\\n                            'temperature': 0.1,\\r\\n                            'top_p': 0.1\\r\\n                        }\\r\\n                        )\\r\\n        prompt = \\""\\""\\""\\r\\n            Extract all the details in the image, focus on the each component and statistics provided in the image such as bar charts, flow charts, tables and graphs. \\r\\n            Make sure to include the time period in the summary, if available. For example, the images shows line graph showing data from 1993 to 2022.\\r\\n            \\""\\""\\""\\r\\n        content = [\\r\\n            {\\""type\\"": \\""text\\"", \\""text\\"": prompt},\\r\\n            {\\""type\\"": \\""image\\"", \\""source\\"": {\\""type\\"": \\""base64\\"", \\""media_type\\"": \\""image/png\\"", \\""data\\"": base64_image}}\\r\\n        ]\\r\\n        message_list = [\\r\\n            {\\r\\n                \\""role\\"": 'user',\\r\\n                \\""content\\"": content\\r\\n            }\\r\\n        ]\\r\\n        try:\\r\\n            msg = chat.invoke(message_list)\\r\\n            return msg.content  \\r\\n        except Exception as e:\\r\\n            logger.info(\\""got error in generating image summary from bedrock model\\"")\\r\\n            return 'Empty'\\r\\n    def get_images_summary(self,pdf_path):\\r\\n        from pypdf import PdfReader\\r\\n        import uuid\\r\\n        images_summary={}\\r\\n        image_summary_list=[]\\r\\n        summary_img=[]\\r\\n        reader = PdfReader(pdf_path)\\r\\n        c=1\\r\\n        for page in reader.pages:\\r\\n            for image in page.images:\\r\\n                base64_image= base64.b64encode(image.data).decode('utf-8')\\r\\n                image_summary= self.get_imageSummary(base64_image)\\r\\n                images_summary[image.name]=image_summary\\r\\n                image_summary_list.append(image_summary)\\r\\n                summary_img.append(Document(page_content=image_summary, metadata={'image_id': str(uuid.uuid4()),'page':c,'source':pdf_path}))\\r\\n  \\r\\n            c+=1\\r\\n        return summary_img\\r\\n    def audio_transcriber(self, chunker_folder:str): \\r\\n        import whisper\\r\\n        import os\\r\\n        from whisper.utils import get_writer \\r\\n        flag = True\\r\\n        try:\\r\\n            input_directory = chunker_folder            \\r\\n            model = whisper.load_model('base')\\r\\n            for dirs, subdirs, files in os.walk(input_directory):  \\r\\n                output_directory = ''\\r\\n                for i, file_ in enumerate(files):\\r\\n                    if file_.endswith(('.wav', '.WAV')):\\r\\n                        file = os.path.join(dirs, file_)\\r\\n                        inputfile = file\\r\\n                        subdirs = dirs.split('\\\\\\\\')[-1]\\r\\n                        output_directory = os.path.join(input_directory,subdirs,'output')                    \\r\\n                        if not os.path.isdir(output_directory):\\r\\n                            os.makedirs(output_directory)\\r\\n                        filename = inputfile                        \\r\\n                        result = model.transcribe(filename)\\r\\n                        # Set some initial options values\\r\\n                        options = {\\r\\n                            'max_line_width': None,\\r\\n                            'max_line_count': None,\\r\\n                            'highlight_words': False\\r\\n                        }                    \\r\\n                        file_ = os.path.splitext(file_)[0]\\r\\n                        output_filename = os.path.join(output_directory, file_)                                    \\r\\n                        # Save as a JSON file\\r\\n                        json_writer = get_writer('json', output_directory)\\r\\n                        json_writer(result, output_filename, options)\\r\\n                return output_directory\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Transcriber as: ',e)\\r\\n            raise e\\r\\n    def mp3_converter(self, root_audio_file_path: str):\\r\\n        '''\\r\\n        This function will extract the audio from the video file\\r\\n        Args:\\r\\n            root_video_file_path: str\\r\\n        return: str\\r\\n        '''        \\r\\n        try:                \\r\\n            video_folder = os.path.dirname(root_audio_file_path)\\r\\n            audio_folder = video_folder+'/data/audios'\\r\\n            if not os.path.isdir(audio_folder):\\r\\n                os.makedirs(audio_folder)\\r\\n            # Load the video \\r\\n            sound = AudioSegment.from_mp3(root_audio_file_path)\\r\\n            filename = os.path.basename(root_audio_file_path)          \\r\\n            audio_file_name = audio_folder+'/'+os.path.splitext(filename)[0]+'.wav'   \\r\\n            sound.export(audio_file_name, format=\\""wav\\"")            \\r\\n            logger.info('Converted .mp3 Audio to .wav Audio : ',filename) \\r\\n            logger.info('mp3_converter executed successfully!')\\r\\n            return audio_file_name\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in mp3_converter as: ',e)\\r\\n            raise e\\r\\n    def GetTranscribeWithMetaData(self, output_directory, extension):\\r\\n        import pandas as pd        \\r\\n        videotranscripts_df = pd.DataFrame(columns=['Transcribe', 'start_time','end_time'])     \\r\\n        video_audio_name = output_directory.split(\\""\\\\\\\\\\"")[0].split('/')[-1]+extension\\r\\n        for dirs, subdirs, files in os.walk(output_directory):  \\r\\n            for file in files:\\r\\n                file_key = file\\r\\n                logger.info(\\""file_key===\\"",file_key)\\r\\n                if file_key.endswith('.json'):                     \\r\\n                    file_name = file_key\\r\\n                    with open(dirs+'/'+file_key) as f:\\r\\n                        file_content = f.read()                        \\r\\n                        json_content = json.loads(file_content)\\r\\n                    Transcribe = json_content['text'] \\r\\n                    if videotranscripts_df.empty:                                \\r\\n                        start_time = json_content['segments'][0]['start']\\r\\n                        end_time = json_content['segments'][-1]['end']                \\r\\n                        pre_end_time = end_time\\r\\n                    else:\\r\\n                        start_time = pre_end_time        \\r\\n                        end_time = pre_end_time + json_content['segments'][-1]['end']\\r\\n                        pre_end_time =  end_time               \\r\\n                    if video_audio_name.endswith(('.mp4','.MP4')):\\r\\n                        tempdf = pd.DataFrame({'Transcribe':Transcribe, 'start_time':start_time, 'end_time':end_time, 'file_name': file_name, 'video_name': video_audio_name}, index=[0])                        \\r\\n                    else:\\r\\n                        tempdf = pd.DataFrame({'Transcribe':Transcribe, 'start_time':start_time, 'end_time':end_time, 'file_name': file_name, 'audio_name': video_audio_name}, index=[0])    \\r\\n                    videotranscripts_df = pd.concat([videotranscripts_df, tempdf], ignore_index=True)\\r\\n        logger.info(\\""videotranscripts_df==\\"",videotranscripts_df)              \\r\\n        return videotranscripts_df\\r\\n    def checkfiletype(self, file_path: str) -> str:\\r\\n        '''\\r\\n        This function will check the file type and return the file type\\r\\n        Args:\\r\\n            file_path: str\\r\\n        return: str        \\r\\n        '''    \\r\\n        try:\\r\\n            extension = os.path.splitext(file_path)[1].lower()\\r\\n            self.type = extension\\r\\n            return self.type\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in checkfiletype as', e)\\r\\n            raise e\\r\\n    def document_with_metadata(self, documents: List[Document], metadata) -> List[Document]:\\r\\n        '''\\r\\n        This function will add the metadata to the document\\r\\n        Args:\\r\\n            documents: List[Document]\\r\\n            metadata: dict\\r\\n        return: List[Document]\\r\\n        '''   \\r\\n        try:     \\r\\n            for index, doc in enumerate(documents):\\r\\n                doc.metadata.update(metadata)  # Inject metadata directly into the document object\\r\\n            return documents\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in document_with_metadata as', e)\\r\\n            raise e\\r\\n    def text_loader(self, file_path : str ='', encoding : str = None, autodetect_encoding : bool = False) -> object:    \\r\\n        \\""\\""\\""\\r\\n        Args:\\r\\n            file_path: Path of the file to load.\\r\\n            encoding: File encoding to use. If `None`, the file will be loaded\\r\\n            with the default system encoding.\\r\\n            autodetect_encoding: Whether to try to autodetect the file encoding\\r\\n                if the specified encoding fails.\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain.document_loaders import TextLoader\\r\\n            loader = TextLoader(file_path=file_path, encoding=encoding, autodetect_encoding=autodetect_encoding)\\r\\n            return loader \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in text_loader as', e)\\r\\n            raise e\\r\\n    def pdf_loader(self, file_path : str ='', password: Optional[Union[str, bytes]] = None, headers: Optional[Dict] = None, extract_images: bool = False) -> object:\\r\\n        \\""\\""\\""\\r\\n        Load PDF using pypdf into list of documents.\\r\\n        Loader chunks by page and stores page numbers in metadata.\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.document_loaders import PyPDFLoader       \\r\\n            loader = PyPDFLoader(file_path=file_path, password=password, headers=headers, extract_images=extract_images)        \\r\\n            return loader        \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in pdf_loader as', e)\\r\\n            raise e\\r\\n    def csv_loader(self, file_path: str, source_column: Optional[str] = None, metadata_columns: Sequence[str] = (), csv_args: Optional[Dict] = None, encoding: Optional[str] = None, autodetect_encoding: bool = False):\\r\\n        \\""\\""\\""\\r\\n        Load a `CSV` file into a list of Documents.\\r\\n        Each document represents one row of the CSV file. Every row is converted into a\\r\\n        key/value pair and outputted to a new line in the document's page_content.\\r\\n        The source for each document loaded from csv is set to the value of the\\r\\n        `file_path` argument for all documents by default.\\r\\n        You can override this by setting the `source_column` argument to the\\r\\n        name of a column in the CSV file.\\r\\n        The source of each document will then be set to the value of the column\\r\\n        with the name specified in `source_column`.\\r\\n        Output Example:\\r\\n            .. code-block:: txt\\r\\n                column1: value1\\r\\n                column2: value2\\r\\n                column3: value3\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.document_loaders.csv_loader import CSVLoader\\r\\n            loader = CSVLoader(file_path=file_path, source_column=source_column, metadata_columns=metadata_columns, csv_args=csv_args,encoding=encoding, autodetect_encoding=autodetect_encoding)\\r\\n            return loader\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in csv_loader as', e)\\r\\n            raise e\\r\\n    def dataframe_loader(self, df, page_content_column: str = ''):\\r\\n        \\""\\""\\""Initialize with dataframe object.\\r\\n        Args:\\r\\n            data_frame: Pandas DataFrame object.\\r\\n            page_content_column: Name of the column containing the page content.\\r\\n              Defaults to \\""text\\"".\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.document_loaders.dataframe import DataFrameLoader\\r\\n            loader = DataFrameLoader(df, page_content_column=page_content_column)\\r\\n            return loader\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in dataframe_loader as', e)\\r\\n            raise e\\r\\n    def markdown_loader(self, file_path: str = '', mode: str = \\""single\\"", strategy: str=\\""fast\\""):\\r\\n        \\""\\""\\""Load `Markdown` files using `Unstructured`.\\r\\n        You can run the loader in one of two modes: \\""single\\"" and \\""elements\\"".\\r\\n        If you use \\""single\\"" mode, the document will be returned as a single\\r\\n        langchain Document object. If you use \\""elements\\"" mode, the unstructured\\r\\n        library will split the document into elements such as Title and NarrativeText.\\r\\n        You can pass in additional unstructured kwargs after mode to apply\\r\\n        different unstructured settings.\\r\\n        Examples\\r\\n        --------\\r\\n        from langchain_community.document_loaders import UnstructuredMarkdownLoader\\r\\n        loader = UnstructuredMarkdownLoader(\\r\\n            \\""example.md\\"", mode=\\""elements\\"", strategy=\\""fast\\"",\\r\\n        )\\r\\n        docs = loader.load()\\r\\n        References\\r\\n        ----------\\r\\n        https://unstructured-io.github.io/unstructured/core/partition.html#partition-md\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.document_loaders import UnstructuredMarkdownLoader\\r\\n            loader = UnstructuredMarkdownLoader(file_path=file_path, mode=mode, strategy=strategy)\\r\\n            return loader\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in markdown_loader as', e)\\r\\n            raise e\\r\\n    def string_loader(self, text_content: str, metadata: dict = {}):\\r\\n        '''\\r\\n        This function will convert the string into list of document object\\r\\n        Args:\\r\\n            text_content: str\\r\\n            metadata: dict\\r\\n        return: List[Document]         \\r\\n        '''\\r\\n        try:\\r\\n            from langchain.schema.document import Document\\r\\n            docs = [Document(page_content=text_content,metadata=metadata)]                \\r\\n            return docs\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in string_loader as', e)\\r\\n            raise e\\r\\n    def directory_loader(self, \\r\\n                         path: str,\\r\\n                         glob: str = \\""**/[!.]*\\"",\\r\\n                         silent_errors: bool = False,\\r\\n                         load_hidden: bool = False,\\r\\n                         loader_cls: FILE_LOADER_TYPE = UnstructuredFileLoader,\\r\\n                         loader_kwargs: Union[dict, None] = None,\\r\\n                         recursive: bool = False,\\r\\n                         show_progress: bool = False,\\r\\n                         use_multithreading: bool = False,\\r\\n                         max_concurrency: int = 4,                         \\r\\n                         sample_size: int = 0,\\r\\n                         randomize_sample: bool = False,\\r\\n                         sample_seed: Union[int, None] = None):\\r\\n        '''\\r\\n        This function will load the directory and return the list of document object\\r\\n        Args:\\r\\n            path: Path to directory.\\r\\n            glob: Glob pattern to use to find files. Defaults to \\""**/[!.]*\\""\\r\\n               (all files except hidden).\\r\\n            silent_errors: Whether to silently ignore errors. Defaults to False.\\r\\n            load_hidden: Whether to load hidden files. Defaults to False.\\r\\n            loader_cls: Loader class to use for loading files.\\r\\n              Defaults to UnstructuredFileLoader.\\r\\n            loader_kwargs: Keyword arguments to pass to loader_cls. Defaults to None.\\r\\n            recursive: Whether to recursively search for files. Defaults to False.\\r\\n            show_progress: Whether to show a progress bar. Defaults to False.\\r\\n            use_multithreading: Whether to use multithreading. Defaults to False.\\r\\n            max_concurrency: The maximum number of threads to use. Defaults to 4.\\r\\n            sample_size: The maximum number of files you would like to load from the\\r\\n                directory.\\r\\n            randomize_sample: Shuffle the files to get a random sample.\\r\\n            sample_seed: set the seed of the random shuffle for reproducibility.                \\r\\n        '''\\r\\n        try:\\r\\n            from langchain_community.document_loaders import DirectoryLoader\\r\\n            loader = DirectoryLoader(path = path,\\r\\n                                        glob = glob,\\r\\n                                        silent_errors = silent_errors,\\r\\n                                        load_hidden = load_hidden,\\r\\n                                        loader_cls = loader_cls,\\r\\n                                        loader_kwargs = loader_kwargs,\\r\\n                                        recursive = recursive,\\r\\n                                        show_progress = show_progress,\\r\\n                                        use_multithreading = use_multithreading,\\r\\n                                        max_concurrency = max_concurrency,                                    \\r\\n                                        sample_size = sample_size,\\r\\n                                        randomize_sample = randomize_sample,\\r\\n                                        sample_seed = sample_seed)        \\r\\n            return loader\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in directory_loader as', e)\\r\\n            raise e\\r\\n    def splitdocs(self, docs, chunk_size:int=50, chunk_overlap:int=10, separators:List[str]=None, keep_separator:bool=True):\\r\\n        '''\\r\\n        This function will split the document in to chunk size with overlap\\r\\n        Args:\\r\\n            docs: List[Document]\\r\\n            chunk_size: int\\r\\n            chunk_overlap: int\\r\\n            separators: List[str]\\r\\n            keep_separator: bool\\r\\n        return: List[Document]\\r\\n        '''\\r\\n        try:\\r\\n            text_splitter  = RecursiveCharacterTextSplitter(chunk_size=chunk_size,chunk_overlap=chunk_overlap,separators = separators,keep_separator=keep_separator)\\r\\n            splitted_doc = text_splitter.split_documents(docs)\\r\\n            return splitted_doc\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in splitdocs as', e)\\r\\n            raise e\\r\\n    def audio_extractor(self, root_video_file_path: str):\\r\\n        '''\\r\\n        This function will extract the audio from the video file\\r\\n        Args:\\r\\n            root_video_file_path: str\\r\\n        return: str\\r\\n        '''        \\r\\n        try:                \\r\\n            video_folder = os.path.dirname(root_video_file_path)\\r\\n            audio_folder = video_folder+'/data/audios'\\r\\n            if not os.path.isdir(audio_folder):\\r\\n                os.makedirs(audio_folder)\\r\\n            if root_video_file_path.endswith(('.mp4', '.MP4')):            \\r\\n                # Load the video \\r\\n                video = mp.VideoFileClip(root_video_file_path) \\r\\n                # Extract the audio from the video \\r\\n                audio_file = video.audio \\r\\n                filename = os.path.basename(root_video_file_path)          \\r\\n                audio_file_name = audio_folder+'/'+os.path.splitext(filename)[0]+'.wav'                  \\r\\n                audio_file.write_audiofile(audio_file_name) \\r\\n                logger.info('Extracted Audio from video : ',filename) \\r\\n            logger.info('AudioExtractor executed successfully!')\\r\\n            return audio_file_name\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in AudioExtractor as: ',e)\\r\\n            raise e\\r\\n    def audio_chunker(self, audio_file_name: str, chunk_size_param: int = 300):  \\r\\n        '''\\r\\n        This function will divide the audio into chunks of chunk_size_param\\r\\n        Args:\\r\\n            audio_file_name: str\\r\\n            chunk_size_param: int\\r\\n        return: str        \\r\\n        '''\\r\\n        try:\\r\\n            chunk_size = chunk_size_param      \\r\\n            '''Divide the audio file into chunk_size samples'''\\r\\n            f = AudioSegment.from_wav(audio_file_name)\\r\\n            j = 0\\r\\n            chunker_folder = os.path.splitext(audio_file_name)[0].replace('audios','chunks')\\r\\n            if not os.path.exists(chunker_folder):\\r\\n                os.makedirs(chunker_folder)\\r\\n            os.chdir(chunker_folder)\\r\\n            chunked_audio_file_name = os.path.basename(audio_file_name)\\r\\n            while len(f[:]) >= chunk_size * 1000:\\r\\n                chunk = f[:chunk_size * 1000]\\r\\n                chunk.export(chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j), format='wav')\\r\\n                logger.info('Padded file stored as ' + chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j))\\r\\n                f = f[chunk_size * 1000:]\\r\\n                j += 1\\r\\n            if 0 < len(f[:]) and len(f[:]) < chunk_size * 1000:\\r\\n                silent = AudioSegment.silent(duration=chunk_size * 1000)\\r\\n                paddedData = silent.overlay(f, position=0, times=1)\\r\\n                paddedData.export(chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j), format='wav')\\r\\n                logger.info('Padded file stored as ' + chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j))\\r\\n            os.chdir('../../')\\r\\n            logger.info('Chunker executed successfully!')\\r\\n            return chunker_folder\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Chunker as: ',e)\\r\\n            raise e\\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[{}]},{""id"":""alnmZ"",""alias"":""Embedding Models"",""name"":""Embedding Models"",""classname"":""EmbeddingModels"",""category"":""EmbeddingModels"",""attributes"":{},""position_x"":""479"",""position_y"":""71"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""YSLOw"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""OATtZ"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""from typing import Optional,Any\\r\\nimport os\\r\\nimport logging as logger\\r\\nclass EmbeddingConfig:\\r\\n    def __init__(self,config_json:Optional[Any] = {}):\\r\\n        self.embedding_type:Optional[str]=config_json.get('embedding_type',\\""HuggingFace\\"")\\r\\n        self.model_name:Optional[str]=config_json.get('model_name',\\""sentence-transformers/all-MiniLM-L6-v2\\"")\\r\\n        self.azure_openai_api_key:Optional[str]=config_json.get('azure_openai_api_key',os.environ.get('app_openai_api_key'))\\r\\n        self.azure_openai_endpoint:Optional[str]=config_json.get('azure_openai_endpoint','https://azureft.openai.azure.com/')\\r\\n        self.azure_api_version:Optional[str]=config_json.get('azure_api_version','2023-03-15-preview')\\r\\n        self.azure_deployment:Optional[str]=config_json.get('azure_deployment','openaiada2')\\r\\n        self.openai_model:Optional[str]=config_json.get('openai_model','text-embedding-ada-002')\\r\\n        self.openai_api_base:Optional[str]=config_json.get('openai_api_base','https://azureft.openai.azure.com/')\\r\\n        self.openai_api_type:Optional[str]=config_json.get('openai_api_type','azure')\\r\\n        self.bedrock_access_id:Optional[str]=config_json.get('bedrock_access_id',os.environ.get('app_aws_secret_access_id'))\\r\\n        self.bedrock_access_key:Optional[str]=config_json.get('bedrock_access_key',os.environ.get('app_aws_secret_access_key'))\\r\\n        self.bedrock_region_name:Optional[str]=config_json.get('bedrock_region_name','us-east-1')\\r\\n        self.bedrock_endpoint_url:Optional[str]=config_json.get('bedrock_endpoint_url','https://bedrock-runtime.us-east-1.amazonaws.com')\\r\\n        self.bedrock_model_id:Optional[str]=config_json.get('bedrock_model_id','amazon.titan-embed-g1-text-02')\\r\\n        self.elastic_search_model_id:Optional[str]=config_json.get('elastic_search_model_id',None)\\r\\n        self.elastic_search_cloud_id:Optional[str]=config_json.get('elastic_search_cloud_id',None)\\r\\n        self.elastic_search_user_id:Optional[str]=config_json.get('elastic_search_user_id',None)\\r\\n        self.elastic_search_password:Optional[str]=config_json.get('elastic_search_password',None)\\r\\nclass EmbeddingModels:\\r\\n    def __init__(self) -> None:\\r\\n        pass\\r\\n    def get_embedding_function(self,config):\\r\\n        \\""\\""\\""Embedding Model Defination for vector db. We support FaissDB,chromadb,ElasticsearchDB, it's not required if you prepared your own vector db.\\r\\n        Args:\\r\\n            embedding_type(str): Type of Embedding to be used, We support HuggingFace, AzureOpenAI, Bedrock, ElasticSearch, Default is HuggingFace.\\r\\n            model_name(str): Model Name to generate the embedding according to your embedding type, Default is \\""sentence-transformers/all-MiniLM-L6-v2\\"".\\r\\n            AzureOpenAI_Params(str):azure_openai_api_key,\\r\\n                                    azure_openai_endpoint,\\r\\n                                    azure_api_version,\\r\\n                                    azure_deployment,\\r\\n                                    model_name= Open AI Embedding Model Name ,\\r\\n                                    openai_api_base,\\r\\n                                    openai_api_type\\r\\n            Bedrock_Params(str):bedrock_access_id,\\r\\n                                bedrock_access_key,\\r\\n                                bedrock_region_name,\\r\\n                                bedrock_endpoint_url,\\r\\n                                bedrock_model_id\\r\\n            ElasticSearch_Params(str):  elastic_search_model_id,\\r\\n                                        elastic_search_cloud_id,\\r\\n                                        elastic_search_user,\\r\\n                                        elastic_search_password\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            logger.info(config.azure_openai_api_key)\\r\\n            if config.embedding_type.strip().lower() == \\""huggingface\\"":\\r\\n                return self.HuggingFace(model_name=config.model_name)\\r\\n            elif config.embedding_type.strip().lower() == \\""azureopenai\\"":\\r\\n                return self.AzureOpenAI(azure_openai_api_key_param=config.azure_openai_api_key,azure_api_version_param=config.azure_api_version,azure_deployment_param=config.azure_deployment,model_param=config.openai_model,openai_api_base_param=config.openai_api_base,openai_api_type_param=config.openai_api_type)\\r\\n            elif config.embedding_type.strip().lower() == \\""bedrock\\"":\\r\\n                return self.Bedrock(access_id_param=config.bedrock_access_id,access_key_param=config.bedrock_access_key,region_name_param=config.bedrock_region_name,endpoint_url_param=config.bedrock_endpoint_url,model_id_param=config.bedrock_model_id)\\r\\n            elif config.embedding_type.strip().lower() == \\""elasticsearch\\"":\\r\\n                return self.ElasticSearch(elastic_model_id_param=config.elastic_search_model_id,es_cloud_id_param=config.elastic_search_cloud_id,es_user_param=config.elastic_search_user,es_password_param=config.elastic_search_password)\\r\\n            else:\\r\\n                raise Exception(\\""Unknown embedding type, we support only ElasticSearch, Bedrock, AzureOpenAI, and HuggingFace\\"")\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_embedding_function',e)\\r\\n            raise e\\r\\n        \\r\\n    def HuggingFace(self,model_name:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings import HuggingFaceEmbeddings\\r\\n            embeddings = HuggingFaceEmbeddings(\\r\\n                    model_name=model_name\\r\\n            )\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in HuggingFace', e)\\r\\n            raise e\\r\\n        \\r\\n    def AzureOpenAI(self,azure_openai_api_key_param:str='',azure_api_version_param:str='',azure_deployment_param:str='',model_param:str='',openai_api_base_param:str='',openai_api_type_param:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings import AzureOpenAIEmbeddings\\r\\n            embeddings = AzureOpenAIEmbeddings(api_key=azure_openai_api_key_param,api_version=azure_api_version_param,azure_deployment=azure_deployment_param,model=model_param,openai_api_type=openai_api_type_param,base_url=openai_api_base_param)\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in AzureOpenAI', e)\\r\\n            raise e\\r\\n        \\r\\n    def Bedrock(self,access_id_param:str='',access_key_param:str='',region_name_param:str='',endpoint_url_param:str='',model_id_param:str=''):\\r\\n        try:\\r\\n            import boto3\\r\\n            from langchain.embeddings import BedrockEmbeddings\\r\\n            bedrock = boto3.client('bedrock-runtime',aws_access_key_id=access_id_param,aws_secret_access_key=access_key_param,region_name=region_name_param,endpoint_url=endpoint_url_param)\\r\\n            embeddings = BedrockEmbeddings(\\r\\n                model_id=model_id_param, \\r\\n                client=bedrock\\r\\n            )\\r\\n            embeddings\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Bedrock', e)\\r\\n            raise e\\r\\n        \\r\\n    def Elastic_search(self,model_id_param:str='',es_cloud_id_param:str='',es_user_param:str='',es_password_param:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings.elasticsearch import ElasticsearchEmbeddings\\r\\n            embeddings = ElasticsearchEmbeddings.from_credentials(\\r\\n                model_id=model_id_param,\\r\\n                es_cloud_id=es_cloud_id_param,\\r\\n                es_user=es_user_param,\\r\\n                es_password=es_password_param,\\r\\n            )\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Elastic_search', e)\\r\\n            raise e\\r\\n\\r\\n\\n""},""context"":[{},{}]},{""id"":""OATtZ"",""alias"":""Vector Store"",""name"":""Vector Store"",""classname"":""VectorStore"",""category"":""VectorStore"",""attributes"":{},""position_x"":""738"",""position_y"":""71"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""alnmZ"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import os\\r\\nfrom typing import List,Optional,Any\\r\\nimport logging as logger\\r\\nclass VectorConfig:\\r\\n    def __init__(self,config_json:Optional[Any]={}) :\\r\\n        self.DB_Type : Optional[str] = config_json.get('DB_Type',\\""Faiss\\"")\\r\\n        self.elastic_search_url : str = config_json.get('elastic_search_url',os.environ.get('app_elastic_search_url'))\\r\\n        self.index_name : Optional[str] = config_json.get('index_name',\\""Vector_Store\\"")\\r\\n        self.qdrant_url : Optional[str] = config_json.get('qdrant_url',os.environ.get('app_qdrant_url'))\\r\\n        self.force_recreate : Optional[bool] = config_json.get('force_recreate',False)\\r\\nclass VectorStore:      \\r\\n    def __init__(self,embedding,docs) -> None:\\r\\n        self.embedding_function = embedding\\r\\n        self.docs = docs\\r\\n    def SaveEmbedding(self,config:dict):\\r\\n        \\""\\""\\""Store Embeddings In vector db. We support FaissDB,chromadb,ElasticsearchDB, it's not required if you prepared your own vector db.\\r\\n        Args:\\r\\n            DB_Type (str): The type of vector store to be used available options are Elasticsearch,Faiss,Chroma .\\r\\n            embedding_function (Callable): the embedding function to use.\\r\\n            docs(list[Document]): List of splitted text that has to be stored in vector DB.        \\r\\n            elastic_search_url(str): Elastic Search hosted URL \\r\\n            index_name(str): The Index Name Default is \\""Vector_Store\\"".\\r\\n            qdrant_url(str): qdrant URL \\r\\n            force_recreate(bool): Create new index, If it exists it will delete and create new index while it is True, If False, It will append the existing Index and if index is not present will create new Index.\\r\\n                                    Default is False.\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            # logger.info(config.persist_directory)\\r\\n            if config.DB_Type.strip().lower() == 'faiss':\\r\\n                return self.FaissDB(embedding_function=self.embedding_function,docs=self.docs,persist_directory=\\""/temp/faiss_db/\\""+config.index_name)\\r\\n            elif config.DB_Type.strip().lower() == 'chroma':\\r\\n                return self.ChromaDB(embedding_function=self.embedding_function,docs=self.docs,persist_directory=\\""/temp/chroma_db/\\""+config.index_name)\\r\\n            elif config.DB_Type.strip().lower() == 'elasticsearch':\\r\\n                return self.ElasticsearchDB(embedding=self.embedding_function, docs=self.docs, es_url=config.elastic_search_url, index_name=config.index_name)\\r\\n            elif config.DB_Type.strip().lower() == 'qdrant':\\r\\n                return self.Qdrant(embeddings=self.embedding_function,texts=self.docs,url=config.qdrant_url,collection_name=config.index_name,force_recreate=config.force_recreate)\\r\\n            else:\\r\\n                logger.info('Unsupported VectorStore type)')\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in SaveEmbedding',e)\\r\\n            raise e\\r\\n        \\r\\n    def FaissDB(self,embedding_function:Any=None,docs:Any=None,persist_directory:str=''):\\r\\n        try:\\r\\n            from langchain.vectorstores import FAISS\\r\\n            faiss_db = FAISS.from_documents(docs, embedding_function)                    \\r\\n            if os.path.exists(persist_directory):\\r\\n                local_db = FAISS.load_local(persist_directory, embedding_function,allow_dangerous_deserialization=True)\\r\\n                local_db.merge_from(faiss_db)\\r\\n                local_db.save_local(persist_directory)\\r\\n            else:\\r\\n                faiss_db.save_local(persist_directory)\\r\\n            return \\""Completed\\""\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in FaissDB', e)\\r\\n            raise e\\r\\n        \\r\\n    def ChromaDB(self,embedding_function:Any=None,docs:Any=None, persist_directory:str=None):\\r\\n        try:\\r\\n            from langchain.vectorstores import Chroma\\r\\n            db = Chroma.from_documents(documents=docs, embedding=embedding_function, persist_directory=persist_directory)\\r\\n            return \\""Completed\\""\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in ChromaDB', e)\\r\\n            raise e\\r\\n        \\r\\n    def ElasticsearchDB(self, embedding:Any=None, docs:Any=None, es_url:str='', index_name:str=\\""Vector_Store\\""):   \\r\\n        try:     \\r\\n            from langchain.vectorstores import ElasticVectorSearch       \\r\\n            db = ElasticVectorSearch(elasticsearch_url=es_url, index_name=index_name, embedding=embedding)        \\r\\n            db.add_documents(docs)        \\r\\n            return \\""Completed\\""\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in ElasticsearchDB', e)\\r\\n            raise e\\r\\n        \\r\\n    def Qdrant(self,embeddings:Any=None,texts:str='',url:str='',collection_name:str='',force_recreate:bool=False):\\r\\n        try:\\r\\n            from langchain.vectorstores import Qdrant\\r\\n            qdrant = Qdrant.from_documents(\\r\\n            texts,\\r\\n            embeddings,\\r\\n            url= url,\\r\\n            collection_name=collection_name,\\r\\n            force_recreate=force_recreate,\\r\\n            )\\r\\n            return \\""Completed\\""\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Qdrant', e)\\r\\n            raise e \\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[{},{},{}]},{""id"":""FsrZi"",""alias"":""Query VectorDB"",""name"":""Query VectorDB"",""classname"":""QueryVectorDB"",""category"":""QueryVectorDB"",""attributes"":{},""position_x"":""303"",""position_y"":""356"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""AwSRT"",""elementPosition"":""LeftMiddle""},{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""uinAn"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import os\\r\\nfrom typing import List,Optional,Dict,Union,Sequence,Any\\r\\nimport logging as logger\\r\\nclass VectordbConfig:\\r\\n    def __init__(self,config_json:Optional[Any]={}) :\\r\\n        self.DB_Type : Optional[str] = config_json.get('DB_Type',\\""Faiss\\"")\\r\\n        self.elastic_search_url : str = config_json.get('elastic_search_url',os.environ.get('app_elastic_search_url'))\\r\\n        self.index_name : Optional[str] = config_json.get('index_name',\\""Vector_Store\\"")\\r\\n        self.qdrant_url : Optional[str] = config_json.get('qdrant_url',os.environ.get('app_qdrant_url'))\\r\\n        self.force_recreate : Optional[bool] = config_json.get('force_recreate',False)\\r\\n        self.query : Optional[str] = config_json.get('query',\\""Hi, How are you?\\"")\\r\\n        self.k : Optional[int] = config_json.get('k',4)\\r\\n        \\r\\nclass QueryVectorDB:\\r\\n    def __init__(self,embedding) -> None:\\r\\n        self.embeddings = embedding\\r\\n    \\r\\n    def get_similar_docs(self,config):\\r\\n        \\""\\""\\""`Meta Faiss` vector store.\\r\\n        To use, you must have the ``faiss`` python package installed.\\r\\n        Example:\\r\\n            .. code-block:: python\\r\\n                from langchain_community.embeddings.openai import OpenAIEmbeddings\\r\\n                from langchain_community.vectorstores import FAISS\\r\\n                embeddings = OpenAIEmbeddings()\\r\\n                texts = [\\""FAISS is an important library\\"", \\""LangChain supports FAISS\\""]\\r\\n                faiss = FAISS.from_texts(texts, embeddings)\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            if config.DB_Type.lower() == 'faiss':\\r\\n                return self.get_similar_docs_faiss_db(embeddings=self.embeddings,persist_directory='/temp/faiss_db/'+config.index_name,query=config.query,k=config.k)                \\r\\n            elif config.DB_Type.lower() == 'chroma':  \\r\\n                return self.get_similar_docs_chroma_db(embeddings=self.embeddings,persist_directory='/temp/chroma_db/'+config.index_name,query=config.query,k=config.k)        \\r\\n            elif config.DB_Type.lower() == 'elasticsearch':                   \\r\\n                return self.get_similar_docs_elastic_db(embeddings=self.embeddings,docs=self.docs,es_url=config.elastic_search_url,index_name=config.index_name,query=config.query,k=config.k)\\t\\t    \\r\\n            elif config.DB_Type.lower() == 'qdrant':      \\r\\n                return self.get_similar_docs_qdrant_db(embeddings=self.embeddings,qdrant_url=config.qdrant_url,collection_name=config.index_name,query=config.query,k=config.k)\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_similar_docs', e)\\r\\n            raise e\\r\\n        \\r\\n    def get_similar_docs_chroma_db(self,embeddings:Any=None,persist_directory:str=\\""\\"",query:str='',k:int=None):\\r\\n        \\""\\""\\""`ChromaDB` vector store.\\r\\n        To use, you should have the ``chromadb`` python package installed.\\r\\n        Example:\\r\\n        .. code-block:: python\\r\\n        from langchain_community.vectorstores import Chroma\\r\\n        from langchain_community.embeddings.openai import OpenAIEmbeddings\\r\\n        embeddings = OpenAIEmbeddings()\\r\\n        vectorstore = Chroma(\\""langchain_store\\"", embeddings)\\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.vectorstores import Chroma\\r\\n            db3 = Chroma(persist_directory=persist_directory, embeddings=embeddings)\\r\\n            docs = db3.similarity_search(query,k=k)\\r\\n            \\r\\n            return docs\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_similar_docs_chroma_db', e)\\r\\n            raise e\\r\\n    def get_similar_docs_faiss_db(self,embeddings:Any=None,persist_directory:str=\\""\\"",query:str='',k:int=None):   \\r\\n        try:     \\r\\n            from langchain.vectorstores import FAISS\\r\\n            db = FAISS.load_local(persist_directory, embeddings,allow_dangerous_deserialization=True)\\r\\n            docs = db.similarity_search(query,k=k)\\r\\n            \\r\\n            return docs\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_similar_docs_faiss_db', e)\\r\\n            raise e\\r\\n    def get_similar_docs_qdrant_db(self,qdrant_url:str='',embeddings:Any='',query:str='',collection_name:str='',k:int=None):\\r\\n        \\""\\""\\""\\r\\n        QdrantvectorDb\\r\\n        Args:[]\\r\\n            embeddings=self.embeddings, # Vector embeddings to use for similarity search\\r\\n            qdrant_url=config.qdrant_url, # URL of Qdrant search server \\r\\n            collection_name=config.index_name, # Name of indexed document collection in Qdrant \\r\\n            query=config.query # Search query text to find similar documents for\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from qdrant_client import QdrantClient\\r\\n            \\r\\n            client = QdrantClient(url=qdrant_url)\\r\\n            if 'HuggingFaceEmbeddings' in str(type(embeddings)):\\r\\n                from sentence_transformers import SentenceTransformer\\r\\n                model=embeddings.model_name\\r\\n                name=model.split('/')\\r\\n                encoder = SentenceTransformer(name[1])\\r\\n                query_vector=encoder.encode(query).tolist()\\r\\n            elif 'AzureOpenAIEmbeddings' in str(type(embeddings)):\\r\\n                \\r\\n                import openai\\r\\n                model=embeddings.deployment\\r\\n                openai.api_key = embeddings.openai_api_key\\r\\n                openai.api_version = embeddings.openai_api_version\\r\\n                openai.api_type = embeddings.openai_api_type\\r\\n                openai.api_base = embeddings.openai_api_base\\r\\n                query_vector = openai.Embedding.create(\\r\\n                engine = model,\\r\\n                input=query,\\r\\n                model=embeddings.model,\\r\\n        )['data'][0]['embedding']\\r\\n            elif 'BedrockEmbeddings' in str(type(embeddings)):\\r\\n                import json\\r\\n                model_id = embeddings.model_id\\r\\n                bedrock = embeddings.client\\r\\n                input_text = query\\r\\n                body = json.dumps({\\r\\n                    \\""inputText\\"": input_text\\r\\n                    })\\r\\n                accept = \\""application/json\\""\\r\\n                content_type = \\""application/json\\""\\r\\n                query_vector = bedrock.invoke_model(\\r\\n                    body=body, modelId=model_id, accept=accept, contentType=content_type\\r\\n                )\\r\\n                query_vector = json.loads(query_vector.get('body').read())['embedding']\\r\\n            hits = client.search(collection_name=collection_name,query_vector=query_vector,limit=k)\\r\\n            l=[]\\r\\n            for hit in hits:\\r\\n                l.append(hit.payload)        \\r\\n            \\r\\n            return l\\r\\n        except Exception as e:  \\r\\n            logger.info('Exception in get_similar_docs_qdrant_db', e)\\r\\n            raise e\\r\\n        \\r\\n    def get_similar_docs_elastic_db(self,embeddings:Any=None,docs:Any=None,query:str='',es_url=\\""\\"",index_name=\\""\\"",k:int=None):\\r\\n        \\""\\""\\""`Elasticsearch` vector store.\\r\\n        Args:\\r\\n            index_name: Name of the Elasticsearch index to create.\\r\\n            es_url: URL of the Elasticsearch instance to connect to.\\r\\n            cloud_id: Cloud ID of the Elasticsearch instance to connect to.\\r\\n            es_user: Username to use when connecting to Elasticsearch.\\r\\n            es_password: Password to use when connecting to Elasticsearch.\\r\\n            es_api_key: API key to use when connecting to Elasticsearch.\\r\\n            es_connection: Optional pre-existing Elasticsearch connection.\\r\\n            vector_query_field: Optional. Name of the field to store\\r\\n                                the embedding vectors in.\\r\\n            query_field: Optional. Name of the field to store the texts in.\\r\\n            strategy: Optional. Retrieval strategy to use when searching the index.\\r\\n                        Defaults to ApproxRetrievalStrategy. Can be one of\\r\\n                        ExactRetrievalStrategy, ApproxRetrievalStrategy,\\r\\n                        or SparseRetrievalStrategy.\\r\\n            distance_strategy: Optional. Distance strategy to use when\\r\\n                                searching the index.\\r\\n                                Defaults to COSINE. Can be one of COSINE,\\r\\n                                    EUCLIDEAN_DISTANCE, or DOT_PRODUCT. \\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            from langchain_community.vectorstores import ElasticsearchStore\\r\\n            db = ElasticsearchStore.from_documents(\\r\\n            docs,\\r\\n            embeddings,\\r\\n            es_url=es_url,\\r\\n            index_name=index_name,\\r\\n            )\\r\\n            db.client.indices.refresh(index=index_name)\\r\\n            results = db.similarity_search(query,k=k)            \\r\\n            return results\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_similar_docs_elastic_db', e)\\r\\n            raise e\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[{}]},{""id"":""AwSRT"",""alias"":""LLM Infer"",""name"":""LLM Infer"",""classname"":""LLM Infer"",""category"":""LLMInfer"",""attributes"":{},""position_x"":""567"",""position_y"":""356"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""FsrZi"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import os\\r\\nfrom typing import List,Optional,Dict,Union,Sequence,Any\\r\\nimport json\\r\\nimport requests\\r\\nimport logging as logger\\r\\nclass LLMInferenceConfig:\\r\\n    def __init__(self,config_json:Optional[Any]={}):\\r\\n        self.LLM_Type : Optional[str] = config_json.get('LLM_Type',\\""OnPrem\\"")\\r\\n        self.prompt_template : Optional[str] = config_json.get('prompt_template','Answer the query asked by user based on the given Context below.')\\r\\n        self.model_url : Optional[str] = config_json.get('url',\\""https://itgateway.infosys.com/ai-platform/mxtral-aic/v1/language/generate\\"")\\r\\n        self.falcon_url : Optional[str] = config_json.get('falcon_url',\\""http://10.82.210.68:9079/falcon40b\\"")\\r\\n        self.max_tokens : Optional[int] = config_json.get('max_tokens',2000)\\r\\n        self.top_k :  Optional[int] = config_json.get('top_k',5)\\r\\n        self.top_p :  Optional[float] = config_json.get('top_p',0.25)\\r\\n        self.typical_p : Optional[float] = config_json.get('typical_p',0.25)\\r\\n        self.temperature : Optional[float] = config_json.get('temperature',0)\\r\\n        self.repetition_penalty : Optional[float] = config_json.get('repetition_penalty',None)\\r\\n        self.api_type : Optional[str] = config_json.get('api_type',\\""azure\\"")\\r\\n        self.api_base : Optional[str] = config_json.get('api_base',\\""https://azureft.openai.azure.com/\\"") \\r\\n        self.api_version : Optional[str] = config_json.get('api_version',\\""2023-03-15-preview\\"")\\r\\n        self.api_key : Optional[str] = config_json.get('api_key',os.environ.get('app_openai_api_key'))\\r\\n        self.stop : Optional[str] = config_json.get('stop',\\""\\"")\\r\\n        self.service_name : Optional[str] = config_json.get('service_name','bedrock-runtime')\\r\\n        self.aws_access_key_id : Optional[str] = config_json.get('aws_access_key_id',os.environ.get('app_aws_secret_access_id'))\\r\\n        self.aws_secret_access_key : Optional[str] = config_json.get('aws_secret_access_key',os.environ.get('app_aws_secret_access_key'))\\r\\n        self.region_name : Optional[str] = config_json.get('region_name','us-east-1')\\r\\n        self.endpoint_url : Optional[str] = config_json.get('endpoint_url','https://bedrock-runtime.us-east-1.amazonaws.com')\\r\\n        self.model_id : Optional[str] = config_json.get('model_id','anthropic.claude-v2')\\r\\n        self.query : Optional[str] = config_json.get('query',\\""Hi\\"")\\r\\n        self.engine : Optional[str] = config_json.get('engine','gtp35turbo')\\r\\n        self.client_id : Optional[str] = config_json.get('client_id',os.environ.get('app_client_id'))\\r\\n        self.client_secret : Optional[str] = config_json.get('client_secret',os.environ.get('app_client_secret'))\\r\\n        \\r\\n\\r\\nclass LLMInference:\\r\\n    def __init__(self, context):\\r\\n        self.context = context\\r\\n    \\r\\n    def Query_LLM(self,config):\\r\\n        ''' \\r\\n        Falcon40b model\\r\\n        args[]\\r\\n            prompt_template:  # Prompt template string to prepend before the input context, question and parameters\\r\\n            falcon_40b_model_url:  # URL of the Falcon 4.0b model to use\\r\\n            context:  # Context string to provide background for answering the question\\r\\n            question:  # Question string to get an answer for\\r\\n            max_tokens:  # Maximum number of tokens to generate in the answer\\r\\n            top_k:  # Sample from the top k tokens, overrides typical_p if set\\r\\n            top_p:  # Sample from the smallest possible set of tokens whose cumulative probability exceeds the probability top_p, overrides top_k if set\\r\\n            typical_p:  # Typical sampling probability, overrides top_p if set\\r\\n            temperature:  # Randomness of the sampling, higher values means more random, overrides typical_p if set\\r\\n            repetition_penalty:  # Penalty for repetitive phrases, higher values mean more diversity \\r\\n        '''\\r\\n        try:\\r\\n            if config.LLM_Type.strip().lower() == 'falcon':\\r\\n                return self.OnPrem(context=self.context,prompt_template=config.prompt_template,falcon_40b_model_url = config.falcon_url,question=config.query,max_tokens=config.max_tokens,top_k=config.top_k,top_p=config.top_p,typical_p=config.typical_p,temperature=config.temperature,repetition_penalty=config.repetition_penalty)\\r\\n            elif config.LLM_Type.strip().lower() == 'onprem':\\r\\n                return self.Mixtral(prompt_template=config.prompt_template,context=self.context,Mixtral_model_url = config.model_url,question=config.query,max_tokens=config.max_tokens,top_k=config.top_k,top_p=config.top_p,typical_p=config.typical_p,temperature=config.temperature,repetition_penalty=config.repetition_penalty,client_id=config.client_id,client_secret=config.client_secret)\\r\\n\\r\\n            elif config.LLM_Type.strip().lower() == 'azureopenai':\\r\\n                '''\\r\\n                Openaimodel\\r\\n                args[]\\r\\n                engine: # Specify the AI engine/model to use for text generation\\r\\n                prompt_template:  # Prompt template string to prepend before the input context and question\\r\\n                context:  # Context string providing background information to inform the answer\\r\\n                question:  # Question string specifying the actual question to get an answer for\\r\\n                api_type:  # The type of API if using an API-based text generation engine, e.g. 'OpenAI'  \\r\\n                api_base:  # Base URL endpoint if using an API-based text generation engine \\r\\n                api_version:   # API version, e.g. 'v1'\\r\\n                api_key:  # API key for authentication if using an API-based text generation engine\\r\\n                temperature:  # Float value controlling randomness/creativity of text generation\\r\\n                max_tokens:  # Maximum number of tokens to generate in the answer\\r\\n                stop: s # String sequence to stop further text generation\\r\\n                '''        \\r\\n                return self.AzureOpenai(engine=config.engine,prompt_template=config.prompt_template,context=self.context,question=config.query,api_type=config.api_type,api_base=config.api_base,api_version=config.api_version,api_key=config.api_key,temperature=config.temperature, max_tokens=config.max_tokens, stop=config.stop, top_p=config.top_p)\\r\\n            elif config.LLM_Type.lower() == 'bedrock':\\r\\n                return self.Bedrock(service_name=config.service_name,prompt_template=config.prompt_template,question=config.query,context=self.context,aws_access_key_id=config.aws_access_key_id,aws_secret_access_key=config.aws_secret_access_key,region_name=config.region_name,endpoint_url=config.endpoint_url,temperature=config.temperature, max_tokens=config.max_tokens, top_p=config.top_p,modelId=config.model_id)\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Query_LLM as',e)\\r\\n            raise e\\r\\n    def Mixtral(self, prompt_template:str='',Mixtral_model_url:str='',context:str='', question:str='',max_tokens:float=None, top_k:float=None, top_p:float=None, typical_p:float=None, temperature:float=None, repetition_penalty: float=None,client_id:str='',client_secret:str=''):\\r\\n        def generate_token():\\r\\n            url='https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\n            headers={\\r\\n                \\""Content-Type\\"": \\""application/x-www-form-urlencoded\\"",\\r\\n                \\""Cookie\\"":\\""fpc=Akan455tw-pPuiXfSA1sz_fwGWPkAQAAAO7xkNwOAAAA; stsservicecookie=estsfd; x-ms-gateway-slice=estsfd; fpc=Akan455tw-pPuiXfSA1sz_eqfEQzAQAAAF04ktwOAAAAEWQ-MAEAAADuOJLcDgAAAExTSTMBAAAADzmS3A4AAAA; x-ms-gateway-slice=estsfd; fpc=AjRjfSpYATNGtUVf3IhQhQ71dL7bAQAAANrZid0OAAAA\\""\\r\\n            }\\r\\n            data={\\r\\n                \\""client_id\\"":client_id,\\r\\n                \\""client_secret\\"":client_secret,\\r\\n                \\""grant_type\\"":\\""client_credentials\\"",\\r\\n                \\""scope\\"":\\""b3490b10-6bd3-4f66-908d-fa1950e46598/.default\\""\\r\\n            }\\r\\n            response = requests.request('POST', url, headers=headers, data=data, verify=False)\\r\\n            \\r\\n            return json.loads(response.text)[\\""access_token\\""]\\r\\n        token=generate_token()\\r\\n        auth=f'Bearer {token}'\\r\\n        generated_answer = ''\\r\\n        input_prompt = f'''{prompt_template} \\\\\\\\n\\\\\\\\nContext: '{context}'. \\\\\\\\n\\\\\\\\nQuestion: {question}. \\\\\\\\n\\\\\\\\nAnswer:'''\\r\\n        payload = json.dumps({\\r\\n        'inputs': [input_prompt],\\r\\n        'parameters': {\\r\\n                'max_new_tokens': max_tokens\\r\\n            }\\r\\n        })\\r\\n        \\r\\n        headers = {\\r\\n            'Content-Type':'application/json', \\r\\n            'Authorization' : auth\\r\\n\\r\\n        }\\r\\n        \\r\\n        response = requests.request('POST', Mixtral_model_url, headers=headers, data=payload, verify=False)\\r\\n        \\r\\n        generated_answer = json.loads(response.text)\\r\\n        generated_answer=generated_answer['generated_text']\\r\\n        return generated_answer   \\r\\n    def OnPrem(self, prompt_template:str='',falcon_40b_model_url:str='',context:str='', question:str='',max_tokens:float=None, top_k:float=None, top_p:float=None, typical_p:float=None, temperature:float=None, repetition_penalty: float=None):\\r\\n        try:\\r\\n            generated_answer = ''\\r\\n            input_prompt = f'''{prompt_template} \\\\\\\\n\\\\\\\\nContext: '{context}'. \\\\\\\\n\\\\\\\\nQuestion: {question}. \\\\\\\\n\\\\\\\\nAnswer:'''\\r\\n            payload = json.dumps({\\r\\n            'inputs': input_prompt,\\r\\n            'parameters': {\\r\\n                    'max_new_tokens': max_tokens,\\r\\n                    'top_k': top_k,\\r\\n                    'top_p': top_p,\\r\\n                    'typical_p': typical_p,\\r\\n                    'temperature': temperature,\\r\\n                    'repetition_penalty': repetition_penalty\\r\\n                }\\r\\n            })\\r\\n            \\r\\n            headers = {\\r\\n                'Content-Type': 'application/json' \\r\\n            }\\r\\n            \\r\\n            response = requests.request('POST', falcon_40b_model_url, headers=headers, data=payload, verify=False)\\r\\n            \\r\\n            generated_answer = json.loads(response.text)[0]['generated_text']\\r\\n\\r\\n            return generated_answer\\r\\n        \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in OnPrem as', e)\\r\\n            raise e\\r\\n    \\r\\n    def AzureOpenai(self,engine:str='',prompt_template:str='',context:str='',question:str='',api_type:str='',api_base:str='',api_version:str='',api_key:str='',temperature:float='', max_tokens:float='', stop:str='', top_p:float=''):\\r\\n        try:\\r\\n            import openai\\r\\n            openai.proxy = {'http' : os.environ.get('http_proxy'),'https' : os.environ.get('https_proxy')}\\r\\n            openai.api_type = api_type\\r\\n            openai.api_base = api_base\\r\\n            openai.api_version = api_version\\r\\n            openai.api_key = api_key\\r\\n            prompt = f'''{prompt_template} \\\\n\\\\nContext: '{context}'. \\\\n\\\\nQuestion: {question}. \\\\n\\\\nAnswer:'''\\r\\n            response = openai.ChatCompletion.create(engine=engine,\\r\\n                    messages = [{\\""role\\"":\\""user\\"",\\""content\\"":prompt}],\\r\\n                    temperature=temperature,\\r\\n                    max_tokens=max_tokens,\\r\\n                    top_p=top_p,\\r\\n                    stop=stop)\\r\\n            out = response[\\""choices\\""][0][\\""message\\""][\\""content\\""]\\r\\n            return out\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in AzureOpenai as', e)\\r\\n            raise e\\r\\n                \\r\\n    def Bedrock(self,service_name:str='',prompt_template:str='',question:str='',context:str='',aws_access_key_id:str='',aws_secret_access_key:str='',region_name:str='',endpoint_url:str='',max_tokens:float=None,temperature:float=None,top_p:float=None,modelId:str=''):\\r\\n        try:            \\r\\n            import boto3\\r\\n            bedrock = boto3.client(service_name=service_name,aws_access_key_id=aws_access_key_id,aws_secret_access_key=aws_secret_access_key,region_name=region_name,endpoint_url=endpoint_url)\\r\\n    \\r\\n            prompt_data = f\\""\\""\\""Human: {prompt_template} \\\\n\\\\nContext: '{context}'. \\\\n\\\\nQuestion: {question}\\r\\n            Assistant:\\""\\""\\""\\r\\n            body = json.dumps({\\r\\n                \\""prompt\\"": prompt_data,\\r\\n                \\""max_tokens_to_sample\\"":max_tokens,\\r\\n                \\""temperature\\"":temperature,\\r\\n                \\""top_p\\"":top_p\\r\\n            })\\r\\n            modelId = modelId\\r\\n            logger.info(body)\\r\\n            response = bedrock.invoke_model(body=body, modelId=modelId)\\r\\n            response_body = json.loads(response.get('body').read())\\r\\n            outputText = response_body.get('completion')\\r\\n            return outputText\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Bedrock as', e)\\r\\n            raise e \\n""},""context"":[{},{}]},{""id"":""uinAn"",""alias"":""Embedding Functions"",""name"":""Embedding Functions"",""classname"":""EmbeddingFunction"",""category"":""EmbeddingFunctions"",""attributes"":{},""position_x"":""30"",""position_y"":""356"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""FsrZi"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""from typing import Optional,Any\\r\\nimport os\\r\\nimport logging as logger\\r\\nclass EmbeddingConfig:\\r\\n    def __init__(self,config_json:Optional[Any] = {}):\\r\\n        self.embedding_type:Optional[str]=config_json.get('embedding_type',\\""HuggingFace\\"")\\r\\n        self.model_name:Optional[str]=config_json.get('model_name',\\""sentence-transformers/all-MiniLM-L6-v2\\"")\\r\\n        self.azure_openai_api_key:Optional[str]=config_json.get('azure_openai_api_key',os.environ.get('app_openai_api_key'))\\r\\n        self.azure_openai_endpoint:Optional[str]=config_json.get('azure_openai_endpoint','https://azureft.openai.azure.com/')\\r\\n        self.azure_api_version:Optional[str]=config_json.get('azure_api_version','2023-03-15-preview')\\r\\n        self.azure_deployment:Optional[str]=config_json.get('azure_deployment','openaiada2')\\r\\n        self.openai_model:Optional[str]=config_json.get('openai_model','text-embedding-ada-002')\\r\\n        self.openai_api_base:Optional[str]=config_json.get('openai_api_base','https://azureft.openai.azure.com/')\\r\\n        self.openai_api_type:Optional[str]=config_json.get('openai_api_type','azure')\\r\\n        self.bedrock_access_id:Optional[str]=config_json.get('bedrock_access_id',os.environ.get('app_aws_secret_access_id'))\\r\\n        self.bedrock_access_key:Optional[str]=config_json.get('bedrock_access_key',os.environ.get('app_aws_secret_access_key'))\\r\\n        self.bedrock_region_name:Optional[str]=config_json.get('bedrock_region_name','us-east-1')\\r\\n        self.bedrock_endpoint_url:Optional[str]=config_json.get('bedrock_endpoint_url','https://bedrock-runtime.us-east-1.amazonaws.com')\\r\\n        self.bedrock_model_id:Optional[str]=config_json.get('bedrock_model_id','amazon.titan-embed-g1-text-02')\\r\\n        self.elastic_search_model_id:Optional[str]=config_json.get('elastic_search_model_id',None)\\r\\n        self.elastic_search_cloud_id:Optional[str]=config_json.get('elastic_search_cloud_id',None)\\r\\n        self.elastic_search_user_id:Optional[str]=config_json.get('elastic_search_user_id',None)\\r\\n        self.elastic_search_password:Optional[str]=config_json.get('elastic_search_password',None)\\r\\nclass EmbeddingModels:\\r\\n    def __init__(self) -> None:\\r\\n        pass\\r\\n    def get_embedding_function(self,config):\\r\\n        \\""\\""\\""Embedding Model Defination for vector db. We support FaissDB,chromadb,ElasticsearchDB, it's not required if you prepared your own vector db.\\r\\n        Args:\\r\\n            embedding_type(str): Type of Embedding to be used, We support HuggingFace, AzureOpenAI, Bedrock, ElasticSearch, Default is HuggingFace.\\r\\n            model_name(str): Model Name to generate the embedding according to your embedding type, Default is \\""sentence-transformers/all-MiniLM-L6-v2\\"".\\r\\n            AzureOpenAI_Params(str):azure_openai_api_key,\\r\\n                                    azure_openai_endpoint,\\r\\n                                    azure_api_version,\\r\\n                                    azure_deployment,\\r\\n                                    model_name= Open AI Embedding Model Name ,\\r\\n                                    openai_api_base,\\r\\n                                    openai_api_type\\r\\n            Bedrock_Params(str):bedrock_access_id,\\r\\n                                bedrock_access_key,\\r\\n                                bedrock_region_name,\\r\\n                                bedrock_endpoint_url,\\r\\n                                bedrock_model_id\\r\\n            ElasticSearch_Params(str):  elastic_search_model_id,\\r\\n                                        elastic_search_cloud_id,\\r\\n                                        elastic_search_user,\\r\\n                                        elastic_search_password\\r\\n        \\""\\""\\""\\r\\n        try:\\r\\n            logger.info(config.azure_openai_api_key)\\r\\n            if config.embedding_type.strip().lower() == \\""huggingface\\"":\\r\\n                return self.HuggingFace(model_name=config.model_name)\\r\\n            elif config.embedding_type.strip().lower() == \\""azureopenai\\"":\\r\\n                return self.AzureOpenAI(azure_openai_api_key_param=config.azure_openai_api_key,azure_api_version_param=config.azure_api_version,azure_deployment_param=config.azure_deployment,model_param=config.openai_model,openai_api_base_param=config.openai_api_base,openai_api_type_param=config.openai_api_type)\\r\\n            elif config.embedding_type.strip().lower() == \\""bedrock\\"":\\r\\n                return self.Bedrock(access_id_param=config.bedrock_access_id,access_key_param=config.bedrock_access_key,region_name_param=config.bedrock_region_name,endpoint_url_param=config.bedrock_endpoint_url,model_id_param=config.bedrock_model_id)\\r\\n            elif config.embedding_type.strip().lower() == \\""elasticsearch\\"":\\r\\n                return self.ElasticSearch(elastic_model_id_param=config.elastic_search_model_id,es_cloud_id_param=config.elastic_search_cloud_id,es_user_param=config.elastic_search_user,es_password_param=config.elastic_search_password)\\r\\n            else:\\r\\n                raise Exception(\\""Unknown embedding type, we support only ElasticSearch, Bedrock, AzureOpenAI, and HuggingFace\\"")\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in get_embedding_function',e)\\r\\n            raise e\\r\\n        \\r\\n    def HuggingFace(self,model_name:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings import HuggingFaceEmbeddings\\r\\n            embeddings = HuggingFaceEmbeddings(\\r\\n                    model_name=model_name\\r\\n            )\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in HuggingFace', e)\\r\\n            raise e\\r\\n        \\r\\n    def AzureOpenAI(self,azure_openai_api_key_param:str='',azure_api_version_param:str='',azure_deployment_param:str='',model_param:str='',openai_api_base_param:str='',openai_api_type_param:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings import AzureOpenAIEmbeddings\\r\\n            embeddings = AzureOpenAIEmbeddings(api_key=azure_openai_api_key_param,api_version=azure_api_version_param,azure_deployment=azure_deployment_param,model=model_param,openai_api_type=openai_api_type_param,base_url=openai_api_base_param)\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in AzureOpenAI', e)\\r\\n            raise e\\r\\n        \\r\\n    def Bedrock(self,access_id_param:str='',access_key_param:str='',region_name_param:str='',endpoint_url_param:str='',model_id_param:str=''):\\r\\n        try:\\r\\n            import boto3\\r\\n            from langchain.embeddings import BedrockEmbeddings\\r\\n            bedrock = boto3.client('bedrock-runtime',aws_access_key_id=access_id_param,aws_secret_access_key=access_key_param,region_name=region_name_param,endpoint_url=endpoint_url_param)\\r\\n            embeddings = BedrockEmbeddings(\\r\\n                model_id=model_id_param, \\r\\n                client=bedrock\\r\\n            )\\r\\n            embeddings\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Bedrock', e)\\r\\n            raise e\\r\\n        \\r\\n    def Elastic_search(self,model_id_param:str='',es_cloud_id_param:str='',es_user_param:str='',es_password_param:str=''):\\r\\n        try:\\r\\n            from langchain.embeddings.elasticsearch import ElasticsearchEmbeddings\\r\\n            embeddings = ElasticsearchEmbeddings.from_credentials(\\r\\n                model_id=model_id_param,\\r\\n                es_cloud_id=es_cloud_id_param,\\r\\n                es_user=es_user_param,\\r\\n                es_password=es_password_param,\\r\\n            )\\r\\n            return embeddings\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in Elastic_search', e)\\r\\n            raise e\\r\\n\\r\\n\\n""},""context"":[]},{""id"":""xSkHJ"",""alias"":""SQL Engine"",""name"":""SQL Engine"",""classname"":""SQLEngine"",""category"":""SQLEngine"",""attributes"":{},""position_x"":""35"",""position_y"":""222"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""xlHqC"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import os\\r\\nimport json\\r\\nimport requests\\r\\nimport json\\r\\nfrom urllib.parse import quote_plus\\r\\nfrom leaputils import Security\\r\\nfrom langchain.sql_database import SQLDatabase\\r\\nfrom sql_metadata import Parser\\r\\nimport sqlite3\\r\\n\\r\\n#!pip install sql-metadata\\r\\n#!pip install leaputils-3.0.0-py3-none-any.whl\\r\\n           \\r\\nclass SQLEngine:                            \\r\\n    '''\\r\\n    Extract dataset. Currently We support S3 datastore.        \\r\\n \\r\\n    Args:\\r\\n        dataset_id (str): Dataset id to get dataset config  \\r\\n        local_path (str): Local file path to store file downloaded from data store,     \\r\\n        s3:\\r\\n            s3_end_point_url (str): s3 end point url\\r\\n            s3_access_key (str): s3 access key\\r\\n            s3_secret_key (str): s3 secret key \\r\\n            bucket (str): s3 bucket name\\r\\n            obj_key (str): s3 object(file, folder) name\\r\\n        mysql db:\\r\\n            db_host:str = None, \\r\\n            db_port:str = None, \\r\\n            db_user_name:str = None, \\r\\n            db_password:str = None, \\r\\n            query:str = None\\r\\n    Returns:\\r\\n        file_path (str): Local file path            \\r\\n    '''\\r\\n    def __init__(self, dataset_id:str, organization:str) -> None:\\r\\n        self.organization = organization\\r\\n        self.dataset_id = dataset_id        \\r\\n\\r\\n    def get_db(self) -> str: \\r\\n        '''\\r\\n        Get database connection and metadata from database.\\r\\n        Returns:\\r\\n            db (SQLDatabase): Database connection object\\r\\n            metadata (dict): Dataset metadata\\r\\n            connection_details (dict): Connection details for database connection        \\r\\n        '''\\r\\n        try: \\r\\n            # Connect to the database\\r\\n            root_dir = '/RAG_DB'\\r\\n            os.makedirs(root_dir, exist_ok=True)  # Create only if needed\\r\\n            root_path = os.path.abspath(root_dir)\\r\\n            path = os.path.join(root_path,'rag_database.db')\\r\\n            # path = os.path.join('../database','rag_database.db')\\r\\n            conn = sqlite3.connect(path)\\r\\n\\r\\n            # Create a cursor object\\r\\n            cursor = conn.cursor()\\r\\n\\r\\n            sql = 'SELECT * FROM dataset_details WHERE dataset_id=? AND organization=?'\\r\\n            values = (self.dataset_id, self.organization)\\r\\n            cursor.execute(sql, values)\\r\\n\\r\\n            data = cursor.fetchone()\\r\\n\\r\\n            connection_string = data[3]   \\r\\n            connection_details = json.loads(data[4]) \\r\\n            sql_query = connection_details['query']\\r\\n            metadata = json.loads(data[5])\\r\\n\\r\\n            tablesToInclude = Parser(sql_query).tables\\r\\n            db = SQLDatabase.from_uri(connection_string,include_tables=tablesToInclude)  \\r\\n            \\r\\n        except sqlite3.connector.Error as err:\\r\\n            print('Thre is some error whiling storing data as:',err)\\r\\n            raise err\\r\\n        finally:\\r\\n            # Close database connection properly\\r\\n            cursor.close()\\r\\n            conn.close()  \\r\\n\\r\\n        return db, metadata, connection_details  \\r\\n        \\n""},""context"":[]},{""id"":""xlHqC"",""alias"":""Define LLM"",""name"":""Define LLM"",""classname"":""Definellm"",""category"":""Definellm"",""attributes"":{},""position_x"":""249"",""position_y"":""222"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""xSkHJ"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""OtjdF"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""from typing import Optional,Any\\r\\nfrom langchain.chat_models import AzureChatOpenAI\\r\\nimport os\\r\\nimport logging as logger\\r\\n\\r\\nclass LLMDefineConfig:\\r\\n    '''\\r\\n    define llm model. currently we support Azureopenai\\r\\n    Args:\\r\\n        deployment_name (str): Name of the Azure OpenAI deployment to use for text generation\\r\\n        model_name (str): Name of the Azure OpenAI model to use for text generation\\r\\n        openai_api_key (str): API key for authentication if using an API-based text generation engine\\r\\n        openai_api_version (str): API version, e.g. 'v1'\\r\\n        openai_api_base (str): Base URL endpoint if using an API-based text generation engine\\r\\n        openai_api_type (str): The type of API if using an API-based text generation engine, e.g. 'OpenAI'\\r\\n        temperature (float): Float value controlling randomness/creativity of text generation\\r\\n    Returns:\\r\\n        llm: llm model's object.\\r\\n    '''    \\r\\n    def __init__(self,config_json:Optional[Any]={}):\\r\\n        self.deployment_name:Optional[str]=config_json.get('deployment_name','gtp35turbo')\\r\\n        self.model_name:Optional[str]=config_json.get('model_name','gpt-35-turbo')\\r\\n        self.openai_api_key:Optional[str]=config_json.get('openai_api_key',os.environ.get('app_openai_api_key','')) \\r\\n        self.openai_api_version:Optional[str]= config_json.get('openai_api_version','2023-03-15-preview') \\r\\n        self.openai_api_base:Optional[str]=config_json.get('openai_api_base','https://azureft.openai.azure.com/') \\r\\n        self.openai_api_type:Optional[str]=config_json.get('openai_api_type','azure')\\r\\n        self.temperature:Optional[float]=config_json.get('temperature',0)\\r\\n        self.LLM_Type : Optional[str] = config_json.get('LLM_Type','AzureOpenai')\\r\\n           \\r\\n\\r\\nclass LLMDefine:    \\r\\n    def getmodel(self,config): \\r\\n        '''\\r\\n        define llm model. currently we support Azureopenai\\r\\n        Args:\\r\\n            config (LLMDefineConfig): define llm model. currently we support Azureopenai\\r\\n        Returns:\\r\\n            llm: llm model's object.\\r\\n        '''        \\r\\n        try:                 \\r\\n            if config.LLM_Type.lower() == 'azureopenai':\\r\\n                '''\\r\\n                AzureOpenai\\r\\n                deployment_name: # Name of the Azure OpenAI deployment to use for text generation\\r\\n                model_name: # Name of the Azure OpenAI model to use for text generation\\r\\n                openai_api_key: # API key for authentication if using an API-based text generation engine\\r\\n                openai_api_version: # API version, e.g. 'v1'\\r\\n                openai_api_base: # Base URL endpoint if using an API-based text generation engine\\r\\n                openai_api_type: # The type of API if using an API-based text generation engine, e.g. 'OpenAI'\\r\\n                temperature: # Float value controlling randomness/creativity of text generation\\r\\n                '''           \\r\\n                llm = self.AzureOpenai(deployment_name=config.deployment_name, \\r\\n                                    model_name=config.model_name, \\r\\n                                    openai_api_key=config.openai_api_key, \\r\\n                                    openai_api_version=config.openai_api_version,\\r\\n                                    openai_api_base=config.openai_api_base,\\r\\n                                    openai_api_type=config.openai_api_type,\\r\\n                                    temperature=config.temperature\\r\\n                                    )\\r\\n                return llm\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in getmodel as',e)\\r\\n            raise e    \\r\\n    \\r\\n    def AzureOpenai(self,\\r\\n                    deployment_name:str='', \\r\\n                    model_name:str='', \\r\\n                    openai_api_key:str='', \\r\\n                    openai_api_version:str='',\\r\\n                    openai_api_base:str='',\\r\\n                    openai_api_type:str='',\\r\\n                    temperature:float=0        \\r\\n                    ):  \\r\\n        '''\\r\\n        define llm model. currently we support Azureopenai\\r\\n        Args:\\r\\n            deployment_name (str): Name of the Azure OpenAI deployment to use for text generation\\r\\n            model_name (str): Name of the Azure OpenAI model to use for text generation\\r\\n            openai_api_key (str): API key for authentication if using an API-based text generation engine\\r\\n            openai_api_version (str): API version, e.g. 'v1'\\r\\n            openai_api_base (str): Base URL endpoint if using an API-based text generation engine\\r\\n            openai_api_type (str): The type of API if using an API-based text generation engine, e.g. 'OpenAI'\\r\\n            temperature (float): Float value controlling randomness/creativity of text generation\\r\\n        Returns:\\r\\n            llm: llm model's object.                \\r\\n        '''\\r\\n        try:              \\r\\n            # openai.proxy = {'http' : 'http://blrproxy.ad.infosys.com:80','https' : 'http://blrproxy.ad.infosys.com:80'}\\r\\n            llm = AzureChatOpenAI(\\r\\n                                    deployment_name=deployment_name,\\r\\n                                    model_name=model_name,\\r\\n                                    openai_api_key=openai_api_key,\\r\\n                                    openai_api_version=openai_api_version,\\r\\n                                    openai_api_base=openai_api_base,\\r\\n                                    openai_api_type=openai_api_type, \\r\\n                                    temperature=temperature                               \\r\\n                                )\\r\\n            return llm\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in AzureOpenai as', e)\\r\\n            raise e\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\n""},""context"":[{}]},{""id"":""OtjdF"",""alias"":""Query Generator"",""name"":""Query Generator"",""classname"":""QueryGenerator"",""category"":""QueryGenerator"",""attributes"":{},""position_x"":""488"",""position_y"":""222"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""xlHqC"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""KzUDv"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""import boto3\\r\\nfrom typing import List, Optional\\r\\nimport pathlib\\r\\nimport os\\r\\nimport json\\r\\nimport shutil\\r\\nimport requests\\r\\nimport boto3\\r\\nimport json\\r\\nfrom typing import List, Optional, Union, Dict, Sequence, Any\\r\\nfrom langchain.chains import create_sql_query_chain\\r\\nimport logging as logger\\r\\nclass QueryGeneratorConfig:\\r\\n    '''\\r\\n    Config class for QueryGenerator.\\r\\n    Args:\\r\\n        user_query (str): The user's query.\\r\\n    '''\\r\\n    def __init__(self, config_json: Optional[Any]={}) -> None:\\r\\n        self.user_query: Optional[str] = config_json.get('user_query',None)        \\r\\n\\r\\nclass QueryGenerator:\\r\\n    '''\\r\\n    QueryGenerator class.\\r\\n    Args:\\r\\n        db (str): The database to query.\\r\\n        llm (str): The language model to use.\\r\\n    Returns:\\r\\n        sql_query (str): The generated SQL query.\\r\\n    '''                                \\r\\n    def __init__(self, db, llm) -> None:        \\r\\n        self.db = db\\r\\n        self.llm = llm\\r\\n\\r\\n    def get_sql_query(self, config) -> str: \\r\\n        '''\\r\\n        Get the SQL query.\\r\\n        Args:\\r\\n            config (QueryGeneratorConfig): The configuration for the query generator.\\r\\n        Returns:\\r\\n            sql_query (str): The generated SQL query.\\r\\n        '''    \\r\\n        try:    \\r\\n            # define chain                      \\r\\n            chain = create_sql_query_chain(self.llm, self.db)        \\r\\n            sql_query = chain.invoke({\\""question\\"": config.user_query})        \\r\\n            return sql_query\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in QueryGenerator as: ', e)\\r\\n            return e\\r\\n\\r\\n\\n""},""context"":[{},{}]},{""id"":""KzUDv"",""alias"":""Query Executor"",""name"":""Query Executor"",""classname"":""QueryExecutor"",""category"":""QueryExecutor"",""attributes"":{},""position_x"":""739"",""position_y"":""222"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""OtjdF"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{},""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""from typing import List, Optional, Union, Dict, Sequence, Any\\r\\nfrom langchain.chains import create_sql_query_chain\\r\\nfrom langchain.agents import create_sql_agent\\r\\nfrom langchain.agents.agent_types import AgentType\\r\\nfrom langchain.sql_database import SQLDatabase\\r\\nfrom langchain_community.agent_toolkits import SQLDatabaseToolkit\\r\\nfrom langchain_experimental.sql import SQLDatabaseChain\\r\\nimport mysql.connector\\r\\nimport pandas as pd\\r\\nimport logging as logger\\r\\nclass QueryExecutorConfig:\\r\\n    '''\\r\\n    Config class for QueryExecutor.\\r\\n    Args:\\r\\n        user_query (str): The user's query.\\r\\n    '''\\r\\n    def __init__(self, config_json: Optional[Any]={}) -> None:\\r\\n        self.user_query: Optional[str] = config_json.get('user_query',None)   \\r\\nclass QueryExecutor:  \\r\\n    '''\\r\\n    Execute sql query, chain and returns dataframe and summarize answer.\\r\\n    Args:\\r\\n        connection_details (dict): The connection details.\\r\\n        llm (str): The language model to use.\\r\\n        db (str): The database to query.\\r\\n        metadata (dict): The metadata.\\r\\n    Returns:\\r\\n        df (DataFrame): The dataframe.\\r\\n        ans (str): The summarize answer.                        \\r\\n    '''                              \\r\\n    def __init__(self, connection_details:dict, llm, db, sql_query, metadata) -> None:   \\r\\n        self.connection_string = connection_details.get('connection_string', None)        \\r\\n        self.db_user_name = connection_details.get('db_user_name', None)\\r\\n        self.db_password = connection_details.get('db_password', None)\\r\\n        self.db_host = connection_details.get('db_host', None)\\r\\n        self.db_port = connection_details.get('db_port', None)\\r\\n        self.database = connection_details.get('database', None)  \\r\\n        self.llm = llm\\r\\n        self.db = db\\r\\n        self.metadata = metadata  \\r\\n        self.sql_query = sql_query\\r\\n    def execute_query(self, config) -> str:\\r\\n        try:\\r\\n            '''\\r\\n            Execute query, chain and returns dataframe and summarize answer.\\r\\n            Args:\\r\\n                config (QueryExecutorConfig): The config.\\r\\n            Returns:\\r\\n                df (DataFrame): The dataframe.\\r\\n                ans (str): The summarize answer.\\r\\n            '''  \\r\\n            print('inside execute_query')         \\r\\n            df = self.get_df(host=self.db_host, user=self.db_user_name, password=self.db_password, database=self.database, sql_query=self.sql_query, port=self.db_port)       \\r\\n            df.to_dict('records')\\r\\n            print('df',df) \\r\\n            ans = self.get_ans_summary(self.llm, self.db, config.user_query) \\r\\n            print('ans', ans)\\r\\n            print(df,ans)              \\r\\n            return df, ans\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in QueryExecutor as: ',e)\\r\\n            return e\\r\\n                \\r\\n    def get_df(self, host:str='', user:str='', password:str='', database:str='', sql_query:str='', port:str=''):\\r\\n        '''\\r\\n        Get dataframe.\\r\\n        Args:\\r\\n            host (str): The host.\\r\\n            user (str): The user.\\r\\n            password (str): The password.\\r\\n            database (str): The database.\\r\\n            sql_query (str): The SQL query.\\r\\n        Returns:\\r\\n            data_df (DataFrame): The dataframe.\\r\\n        '''\\r\\n        try:\\r\\n            mydb = mysql.connector.connect(host=host,port=port,user=user,password=password,database=database)        \\r\\n            mycursor = mydb.cursor(dictionary=True)\\r\\n            mycursor.execute(sql_query)\\r\\n            data = mycursor.fetchall()\\r\\n            column_names = [desc[0] for desc in mycursor.description]\\r\\n            data_df = pd.DataFrame(data, columns=column_names)\\r\\n            print(data_df)\\r\\n            return data_df    \\r\\n        except Exception as e:\\r\\n            logger.info('Exception in QueryExecutor as: ', e)\\r\\n            return e        \\r\\n    def get_ans_summary(self, llm, db, user_query:str=''):\\r\\n        '''\\r\\n        Get summarize answer.\\r\\n        Args:\\r\\n            llm (str): The language model.\\r\\n            db (str): The database.\\r\\n            user_query (str): The user query.\\r\\n        Returns:\\r\\n            response (str): The summarize answer.\\r\\n        '''   \\r\\n        try:    \\r\\n            db_chain = SQLDatabaseChain.from_llm(llm, db, verbose=False, metadata=self.metadata)\\r\\n            response = db_chain.run(user_query)      \\r\\n            return response\\r\\n        except Exception as e:\\r\\n            logger.info('Exception in QueryExecutor as: ', e)\\r\\n            return e\\n""},""context"":[{},{},{}]},{""id"":""WuSgl"",""alias"":""FlaskAPP"",""name"":""FlaskAPP"",""classname"":""FlaskAPP"",""category"":""FlaskAPP"",""attributes"":{""port"":""9082"",""script"":[""from translatepy import Translator\\r\\rapp = Flask(__name__)\\r\\r@app.route('/Ingest', methods=['POST'])\\r\\rdef custom_request_post_ingest():\\r\\r    data = request.get_json()\\r\\r    dataset_id = data.get('dataset_id','')\\r\\r    organization = data.get('organization','')\\r    DB_Type = data.get('DB_Type','Faiss')\\r    index_name = data.get('index_name','Vector_Store')\\r\\r    # config=data.get('config','')\\r    config={\\""DatasetExtractorConfig\\"":{\\""local_path\\"":\\""RAG_data\\""},\\r\\""DatasetChunkerConfig\\"":{\\""chunk_size\\"":1000,\\""chunk_overlap\\"":50},\\r\\""EmbeddingFunctionsConfig\\"":{\\""embedding_type\\"":\\""bedrock\\""},\\r\\""VectorStoreConfig\\"":{\\""DB_Type\\"":DB_Type,\\""index_name\\"":index_name}}\\r    \\r\\r    \\r\\r    # print(data)\\r\\r    datasetextractorconfig_obj = DatasetExtractorConfig(config=config['DatasetExtractorConfig'])\\r\\r    dataextractor_obj = DatasetExtractor(dataset_id, organization)\\r\\r    metadata = dataextractor_obj.get_data(datasetextractorconfig_obj)\\r\\r    if metadata['dataset_type'] not in ['MYSQL','POSTGRESQL','MSSQL']:\\r\\r        # print(metadata)\\r\\r        datasetchunkerconfig_obj = DatasetChunkerConfig(config=config['DatasetChunkerConfig'])\\r\\r        datasetchunker_obj = DatasetChunker(metadata)\\r\\r        splitted_docs = datasetchunker_obj.chunk_data(datasetchunkerconfig_obj)\\r\\r        # print(splitted_docs)\\r\\r        embeddingmodels_obj = EmbeddingModels()\\r\\r        cfg = EmbeddingConfig(config[\\""EmbeddingFunctionsConfig\\""])\\r\\r        embedding = embeddingmodels_obj.get_embedding_function(cfg)\\r\\r        # print(embedding)\\r\\r        db = VectorStore(embedding,splitted_docs)\\r\\r        config = VectorConfig(config[\\""VectorStoreConfig\\""])\\r\\r        result = db.SaveEmbedding(config)\\r\\r        print(result)\\r\\r        \\r\\r        answer={'Status':result}\\r\\r        return jsonify(answer),200\\r\\r    else:\\r\\r        answer={'Status':'Connection string created sucessfully'}\\r\\r        return jsonify(answer),200\\r\\r    \\r\\r@app.route('/Infer', methods=['POST'])\\r\\rdef custom_request_post_infer():\\r\\r    data = request.get_json()\\r\\r    # config=data.get('config','')\\r\\r    # print('config==',config)  \\r    DB_Type = data.get('DB_Type','Faiss')\\r    query = data.get('query','Hi')\\r    \\r    translator = Translator()\\r    language = translator.language(query)\\r    detected_language =  str(language.result)\\r    if detected_language != \\""eng\\"":\\r        query = translator.translate(query, \\""English\\"").result\\r        \\r    index_name = data.get('index_name','default_bedrock')\\r\\r    dataset_id = data.get('dataset_id', None)\\r\\r    org = data.get('organization', None)\\r\\r    print('dataset_id==', dataset_id)\\r\\r    print('org==', org)\\r    config={\\""EmbeddingConfig\\"":{\\""embedding_type\\"":\\""bedrock\\""},\\r\\""VectorStoreConfig\\"":{\\""DB_Type\\"":DB_Type,\\""query\\"":query,\\""index_name\\"":index_name},\\r\\""LLMConfig\\"":{\\""LLM_Type\\"":\\""bedrock\\"",\\""temperature\\"":0.1,\\""query\\"":query,\\""prompt_template\\"":\\""Human: Use the following pieces of context to provide a concise answer to the question at the end. If you dont know the answer, just say that you dont know, dont try to make up an answer{context}.For the query, if it requires drawing a table give results as a table markdown format.Question: {question}Assistant: \\"",\\""max_tokens\\"":2000}}\\r\\r\\r\\r    if dataset_id!=None and org!=None: \\r\\r        SQLEngine_obj = SQLEngine(dataset_id=dataset_id, organization=org)\\r\\r        db,metadata, connection_details = SQLEngine_obj.get_db()      \\r\\r        \\r\\r        llmdefine_obj = LLMDefine()\\r        llmdefineconfig_config = LLMDefineConfig(config_json=config['LLMInferenceConfig'])\\r        llm = llmdefine_obj.getmodel(llmdefineconfig_config)\\r\\r\\r\\r        querygeneratorconfig_obj = QueryGeneratorConfig(config_json=config['QueryGeneratorConfig'])\\r\\r        querygenerator_obj = QueryGenerator(db,llm)\\r\\r        sql_query = querygenerator_obj.get_sql_query(querygeneratorconfig_obj)        \\r\\r\\r\\r        QueryExecutorConfig_config = QueryExecutorConfig(config_json=config['QueryExecutorConfig'])\\r\\r        QueryExecutor_obj = QueryExecutor(connection_details, llm, db, sql_query, metadata)\\r\\r        \\r\\r        df, res = QueryExecutor_obj.execute_query(QueryExecutorConfig_config)\\r\\r        df={'Datafram':df.to_json()}\\r\\r        answer = {'Answer':str(res.split(\\""\\"")[0])}\\r\\r        metadata = {'Metadata': metadata}\\r\\r        return jsonify(answer,df,metadata),200        \\r\\r    else:\\r\\r        embeddingmodels_infer_obj = EmbeddingModels()\\r\\r        embedding_config_obj  = EmbeddingConfig(config['EmbeddingConfig'])\\r\\r        embeddings_out = embeddingmodels_infer_obj.get_embedding_function(embedding_config_obj)\\r\\r        vector_config_obj = VectordbConfig(config[\\""VectorStoreConfig\\""])\\r\\r        query_vector_db_obj = QueryVectorDB(embeddings_out)\\r\\r        similar_docs= query_vector_db_obj.get_similar_docs(vector_config_obj)\\r\\r        print(similar_docs)\\r\\r        llm_config_obj = LLMInferenceConfig(config[\\""LLMConfig\\""])\\r\\r        llm_infer_obj = LLMInference(similar_docs)\\r\\r        output = llm_infer_obj.Query_LLM(llm_config_obj)\\r\\r        print(output)\\r        if str(type(similar_docs[0]))!='''<class 'dict'>''':\\r            context_list=[]\\r    \\r            \\r    \\r            for i in similar_docs:\\r    \\r                d={}\\r    \\r                d[\\""page_content\\""]=i.page_content\\r    \\r                d[\\""metadata\\""]=i.metadata\\r    \\r                context_list.append(d)\\r        else:\\r            context_list=[]\\r            for i in range(len(similar_docs)):\\r                d={}\\r    \\r                d[\\""page_content\\""]=similar_docs[i][\\""page_content\\""]\\r    \\r                d[\\""metadata\\""]=similar_docs[i]['metadata']\\r    \\r                context_list.append(d)\\r\\r        print(context_list)\\r        \\r        if detected_language != \\""eng\\"":\\r            output = translator.translate(output, detected_language).result\\r\\r        \\r\\r        answer={'Answer':output}\\r\\r        context = {'context':context_list}\\r\\r        return jsonify(answer,context),200\\r\\r    \\r\\r\\r\\r@app.route('/root', methods=['GET'])\\r\\rdef custom_request_root():\\r\\r    return jsonify({\\""Message\\"":\\""Success\\""})""]},""position_x"":""767"",""position_y"":""353"",""connectors"":[],""inputEndpoints"":[],""outputEndpoints"":[],""formats"":{""port"":""integer"",""script"":""textarea""},""codeGeneration"":{""imports"":[""from flask import Flask"",""from flask import request"",""from flask import jsonify""],""requirements"":[""flask""],""script"":""def FlaskAPP(port_param=5000,script_param=''):\\n    app.run(debug=False, host='0.0.0.0', port = port_param)\\n\\n\\n\\n\\n""},""context"":[]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""},{""name"":""usedSecrets"",""value"":""app_aws_secret_access_key""},{""name"":""usedSecrets"",""value"":""app_aws_secret_access_id""},{""name"":""usedSecrets"",""value"":""app_openai_api_key""},{""name"":""usedSecrets"",""value"":""app_qdrant_url""},{""name"":""usedSecrets"",""value"":""app_elastic_search_url""},{""name"":""usedSecrets"",""value"":""app_client_id""},{""name"":""usedSecrets"",""value"":""app_client_secret""},{""name"":""usedSecrets"",""value"":""app_access_token""}],""environment"":[{""name"":""API_URL"",""value"":""https://leap2:3000""},{""name"":""http_proxy"",""value"":""http://blrproxy.ad.infosys.com:80""},{""name"":""https_proxy"",""value"":""http://blrproxy.ad.infosys.com:80""},{""name"":""no_proxy"",""value"":""10.66.15.100,10.82.212.22,victlpth5-04,victlpast02,10.0.0.0,22,10.82.210.68,leap2,10.82.53.110,10.82.210.68""},{""name"":""PYTHONIOENCODING"",""value"":""utf8""},{""name"":""PYTHONLEGACYWINDOWSSTDIO"",""value"":""utf8""}],""default_runtime"":""{\\""dsAlias\\"":\\""VM-37\\"",\\""dsName\\"":\\""LEOVM-3719679\\"",\\""type\\"":\\""REMOTE\\""}"",""latest_jobid"":""c0447678-7b8c-4a26-a104-593ba0dfc9c7""}","admin","Semantic-Search-Bedrock","2024-11-04 05:09:52","LEOSMNTC24763","leo1311","SemanticSearch","8",\N,"chain",NULL,"\0","0"
"Admin","2024-10-29 07:48:11.487000","\0","",NULL,"{""elements"":[{""id"":""EFmZS"",""alias"":""Connection"",""name"":""Connection"",""classname"":""Connection"",""category"":""Connection"",""attributes"":{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-03 09:51:32"",""alias"":""Nutanix"",""id"":24,""name"":""AIPNTNXH56520"",""description"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-09-03 09:51:32"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false}},""position_x"":""33"",""position_y"":""0"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""akYDH"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""connections"":""""},""codeGeneration"":{""requirements"":[],""imports"":[],""script"":""def Connection_<id>(connections_param={}):\\n    \\n    return connections_param\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]},{""id"":""akYDH"",""alias"":""Dataset_download"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""FetchMultipleData"",""requirements"":"""",""params"":[],""script"":[""\\r\\rimport logging\\rimport boto3\\rimport os\\r\\r\\rdef get_s3_details(connections_param):\\r    connectiondetails = json.loads(connections_param['connectionDetails'])\\r    session = boto3.session.Session()\\r    try:\\r        s3 = session.client('s3',endpoint_url=connectiondetails['url'],\\r        \\r        aws_access_key_id=connectiondetails['accessKey'],\\r    \\r        aws_secret_access_key=connectiondetails['secretKey'],\\r    \\r        verify=False)\\r        \\r        return s3\\r    \\r    except Exception as e:\\r        print(e)\\r    \\r    \\r\\rdef FetchMultipleData(connections_param):\\r    # print(\\""inside FetchMultipleData\\"")\\r    # print(connections_param)\\r    s3 = get_s3_details(connections_param)\\r    # print('Before bucket_object')\\r    videopath=os.environ.get(\\""videoPath\\"")\\r    # print(os.environ)\\r    print(videopath,\\""video path from env variables\\"")\\r    \\r    # print(folder_path_param, \\""folder path param\\"")\\r    # print(bucket_name_param, \\""bucket param\\"")\\r    \\r    # print(folder_path_param, \\""folder path\\"")\\r    # videos = [os.path.basename(file_path) for file_path in videopath]\\r    videos = videopath.split(\\"",\\"")\\r    print(videos,\\""videos\\"")\\r   \\r    # videos = os.environ.get(\\""videoPath\\"").split(\\""/\\"")[-1]\\r    # print(videos,\\""videos\\"")\\r    # videos_list=[]\\r    # videos_list.append(videos)\\r    \\r    if videos:\\r        for video in videos:\\r            print(\\""video\\"", video)\\r            bucket_name_param_parts = video.split(\\""/\\"")\\r            bucket_name_param = bucket_name_param_parts[0]\\r            folder_path_param = \\""/\\"".join(bucket_name_param_parts[1:-1])\\r            file_name = bucket_name_param_parts[-1]\\r            print(file_name, \\""file_name\\"")\\r            key = folder_path_param + '/' + file_name if folder_path_param else file_name\\r            print(\\""key---\\"", key, \\""bucket_name_param---\\"", bucket_name_param)\\r    \\r            # Get the current working directory\\r            local_path = os.getcwd()\\r            # Define the directory name\\r            directory_name = 'video_download/'\\r            directory_path = os.path.join(local_path, directory_name)\\r    \\r            # Create the directory if it doesn't exist\\r            os.makedirs(directory_path, exist_ok=True)\\r    \\r            print(f\\""Directory '{directory_path}' is ready.\\"")\\r    \\r            file_path = os.path.join(directory_path, file_name)\\r            print(bucket_name_param, \\""key\\"", key)\\r            try:\\r                s3.download_file(bucket_name_param, key, file_path)\\r                print(f\\""Downloaded {key} to {file_path}\\"")\\r            except PermissionError as e:\\r                print(f\\""PermissionError: {e} - Skipping {key}\\"")\\r            except Exception as e:\\r                print(f\\""Error: {e} - Skipping {key}\\"")\\r    print(directory_path)\\r    print(os.listdir(directory_path))\\r    return directory_path\\r\\r\\r""]},""position_x"":""224"",""position_y"":""0"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""EFmZS"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out1"",""position"":""RightMiddle"",""elementId"":""ZBPcN"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-03 09:51:32"",""alias"":""Nutanix"",""id"":24,""name"":""AIPNTNXH56520"",""description"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-09-03 09:51:32"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false}}]},{""id"":""ZBPcN"",""alias"":""frames_extraction"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""process_video"",""requirements"":"""",""params"":[],""script"":[""import io\\rimport os\\rimport shutil\\rimport cv2\\rimport re\\rimport glob\\rimport base64\\rimport numpy as np\\rimport openai\\rimport json\\rimport base64\\rimport tempfile\\rfrom docx.oxml.ns import qn\\rfrom docx import Document\\rimport requests\\rfrom docx.shared import Inches\\rfrom langchain.chat_models import AzureChatOpenAI\\rfrom langchain_core.prompts.chat import ChatPromptTemplate\\rfrom skimage.metrics import structural_similarity as ssim\\rfrom pydub import AudioSegment\\rimport time\\rfrom moviepy.editor import VideoFileClip\\rfrom docx.oxml import OxmlElement\\rfrom docx.shared import Pt\\rfrom docx.oxml.ns import qn\\rfrom docx.shared import Inches\\rimport docx2python as docx2python\\rfrom docx2python.iterators import iter_paragraphs\\rfrom docx.shared import Pt\\rimport base64\\r\\rdef process_video(temp_file_paths_param, seconds_per_frame=2,similarity_threshold=0.95):\\r    '''\\r    This function will divide the Video into frames and extract audio from the video\\r    Args:\\r        uploaded_file: str\\r        folder_path: str\\r        seconds_per_frame : int\\r    return: str        \\r    '''\\r    try:\\r        print('inside process_video')\\r        temp_file_paths=temp_file_paths_param\\r        print(temp_file_paths,\\""temp_file_path\\"")\\r        files_list = [os.path.join(temp_file_paths, file) for file in os.listdir(temp_file_paths)]\\r        print(files_list)\\r        path = os.getcwd()\\r        folder_path=os.path.join(path,\\""Images\\"") \\r        if os.path.exists(folder_path):\\r            # Remove the entire directory and its contents\\r            shutil.rmtree(folder_path)\\r            print(f\\""Existing folder cleaned: {folder_path}\\"")\\r        # Create the folder (it's either new or has been removed)\\r        os.mkdir(folder_path)\\r        curr_frame = 0\\r        i = 0\\r        prev_frame = None\\r        for temp_file_path in files_list:\\r            video = cv2.VideoCapture(temp_file_path)\\r            total_frames = int(video.get(cv2.CAP_PROP_FRAME_COUNT))\\r            print(f\\""Total frames: {total_frames}\\"")\\r            fps = video.get(cv2.CAP_PROP_FPS)\\r            print(f\\""FPS: {fps}\\"")\\r            frames_to_skip = int(fps * seconds_per_frame)\\r            print(f\\""Frames to skip: {frames_to_skip}\\"")\\r            \\r            while curr_frame < total_frames - 1:\\r                video.set(cv2.CAP_PROP_POS_FRAMES, curr_frame)\\r                success, frame = video.read()\\r                if not success:\\r                    break\\r                # Convert frame to grayscale for comparison\\r                gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\\r                # Check if the frame is empty (all black or all white)\\r                if np.mean(gray_frame) < 5 or np.mean(gray_frame) > 250:\\r                    curr_frame += frames_to_skip\\r                    continue\\r                # Compare with previous frame if it exists\\r                if prev_frame is not None:\\r                    similarity = ssim(prev_frame, gray_frame)\\r                    if similarity > similarity_threshold:\\r                        curr_frame += frames_to_skip\\r                        continue\\r                # If we've made it here, the frame is unique enough to keep\\r                _, buffer = cv2.imencode(\\"".jpg\\"", frame)\\r                image_path = os.path.join(folder_path, f\\""image_{i}.jpg\\"")\\r                cv2.imwrite(image_path, frame)\\r                prev_frame = gray_frame\\r                i += 1\\r                curr_frame += frames_to_skip\\r            video.release()\\r            result=files_list,folder_path\\r        return result    \\r    except Exception as e:\\r        print(f\\""An error occurred: {str(e)}\\"")\\r        return e\\r    ""]},""position_x"":""405"",""position_y"":""0"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""akYDH"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out1"",""position"":""RightMiddle"",""elementId"":""CoRuQ"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""FetchMultipleData"",""requirements"":"""",""params"":[],""script"":[""\\r\\rimport logging\\rimport boto3\\rimport os\\r\\r\\rdef get_s3_details(connections_param):\\r    connectiondetails = json.loads(connections_param['connectionDetails'])\\r    session = boto3.session.Session()\\r    try:\\r        s3 = session.client('s3',endpoint_url=connectiondetails['url'],\\r        \\r        aws_access_key_id=connectiondetails['accessKey'],\\r    \\r        aws_secret_access_key=connectiondetails['secretKey'],\\r    \\r        verify=False)\\r        \\r        return s3\\r    \\r    except Exception as e:\\r        print(e)\\r    \\r    \\r\\rdef FetchMultipleData(connections_param):\\r    # print(\\""inside FetchMultipleData\\"")\\r    # print(connections_param)\\r    s3 = get_s3_details(connections_param)\\r    # print('Before bucket_object')\\r    videopath=os.environ.get(\\""videoPath\\"")\\r    # print(os.environ)\\r    print(videopath,\\""video path from env variables\\"")\\r    \\r    # print(folder_path_param, \\""folder path param\\"")\\r    # print(bucket_name_param, \\""bucket param\\"")\\r    \\r    # print(folder_path_param, \\""folder path\\"")\\r    # videos = [os.path.basename(file_path) for file_path in videopath]\\r    videos = videopath.split(\\"",\\"")\\r    print(videos,\\""videos\\"")\\r   \\r    # videos = os.environ.get(\\""videoPath\\"").split(\\""/\\"")[-1]\\r    # print(videos,\\""videos\\"")\\r    # videos_list=[]\\r    # videos_list.append(videos)\\r    \\r    if videos:\\r        for video in videos:\\r            print(\\""video\\"", video)\\r            bucket_name_param_parts = video.split(\\""/\\"")\\r            bucket_name_param = bucket_name_param_parts[0]\\r            folder_path_param = \\""/\\"".join(bucket_name_param_parts[1:-1])\\r            file_name = bucket_name_param_parts[-1]\\r            print(file_name, \\""file_name\\"")\\r            key = folder_path_param + '/' + file_name if folder_path_param else file_name\\r            print(\\""key---\\"", key, \\""bucket_name_param---\\"", bucket_name_param)\\r    \\r            # Get the current working directory\\r            local_path = os.getcwd()\\r            # Define the directory name\\r            directory_name = 'video_download/'\\r            directory_path = os.path.join(local_path, directory_name)\\r    \\r            # Create the directory if it doesn't exist\\r            os.makedirs(directory_path, exist_ok=True)\\r    \\r            print(f\\""Directory '{directory_path}' is ready.\\"")\\r    \\r            file_path = os.path.join(directory_path, file_name)\\r            print(bucket_name_param, \\""key\\"", key)\\r            try:\\r                s3.download_file(bucket_name_param, key, file_path)\\r                print(f\\""Downloaded {key} to {file_path}\\"")\\r            except PermissionError as e:\\r                print(f\\""PermissionError: {e} - Skipping {key}\\"")\\r            except Exception as e:\\r                print(f\\""Error: {e} - Skipping {key}\\"")\\r    print(directory_path)\\r    print(os.listdir(directory_path))\\r    return directory_path\\r\\r\\r""]},{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-03 09:51:32"",""alias"":""Nutanix"",""id"":24,""name"":""AIPNTNXH56520"",""description"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-09-03 09:51:32"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false}}]},{""id"":""CoRuQ"",""alias"":""transcript extraction"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""audio_chunker"",""requirements"":"""",""params"":[],""script"":[""def audio_transcriber(chunker_folder): \\r    '''\\r    This function will extract transcribe from the audio chunks\\r    Args:\\r        chunker_folder: str\\r    return: str        \\r    ''' \\r    try:\\r        overall_transcribe = []\\r        print('inside audio_transcriber')\\r        # url = os.environ.get('transcriber_url')\\r        url = \\""https://api-aicloud.ad.infosys.com/v1/speech/transcribe/models/whisper-m/versions/1/infer\\""\\r        for dirs, subdirs, files in os.walk(chunker_folder):\\r            print(chunker_folder, \\""chunker_folder\\"")\\r            for i, file_ in enumerate(files):\\r                if file_.endswith(('.wav', '.WAV')):\\r                    file = os.path.join(dirs, file_)\\r                    inputfile = file\\r                    with open(inputfile, \\""rb\\"") as f:\\r                        input_wav = f.read()\\r                        byteArray = base64.b64encode(input_wav)\\r                        payload = json.dumps({\\""audio_bytes\\"": str(byteArray)[2:-1]})\\r                        headers = {'Content-Type': 'application/json'}\\r                        response2 = requests.request(\\""POST\\"", url, headers=headers, data=payload, timeout=600, verify=False)\\r                        print('response2===', response2)\\r                        if response2.text:\\r                            try:\\r                                result = json.loads(response2.text).get('text', '')\\r                            except json.JSONDecodeError as e:\\r                                print(f\\""JSONDecodeError: {e}\\"")\\r                                result = ''\\r                        else:\\r                            print(\\""Empty response received\\"")\\r                            result = ''\\r                        overall_transcribe.append(result)\\r        print('Transcriber executed successfully!', overall_transcribe)\\r\\r        # Join the transcriptions into a single string\\r        overall_text = ' '.join(overall_transcribe[:300])\\r        print(overall_text,\\""over all text\\"")\\r        return overall_text  \\r\\r    except Exception as e:\\r        print('Exception in Transcriber as: ',e)\\r        raise False\\rdef audio_chunker( result_param, chunk_size_param: int = 1):  \\r\\r\\r\\r    '''\\r\\r    This function will divide the audio into chunks of chunk_size_param\\r\\r    Args:\\r\\r        audio_file_name: str\\r\\r        chunk_size_param: int\\r\\r    return: str        \\r\\r    '''\\r\\r\\r\\r    try:\\r\\r        print(result_param,\\""result_param\\"")\\r        files,folder_path=result_param\\r        print('inside audio_chunker')\\r        print(files,\\""files\\"",folder_path)\\r        chunk_size = chunk_size_param      \\r\\r\\r\\r        '''Divide the audio file into chunk_size samples'''\\r\\r        \\r        chunk_folder_path = os.path.join(folder_path, \\""chunks\\"")\\r\\r        if os.path.exists(chunk_folder_path):\\r\\r            shutil.rmtree(chunk_folder_path)\\r\\r            print(f\\""Existing chunks folder cleaned: {chunk_folder_path}\\"")\\r\\r        os.mkdir(chunk_folder_path)\\r\\r        print(f\\""Chunks folder created/recreated: {chunk_folder_path}\\"")\\r\\r        for file in files:\\r\\r            clip = VideoFileClip(file)\\r\\r            chunked_audio_file_name = os.path.join(folder_path, os.path.basename(file).replace(\\"".mp4\\"", \\"".wav\\""))\\r\\r            clip.audio.write_audiofile(chunked_audio_file_name, bitrate=\\""32k\\"")\\r\\r            clip.audio.close()\\r\\r            clip.close()\\r\\r\\r\\r            f = AudioSegment.from_wav(chunked_audio_file_name)\\r\\r            j = 0\\r\\r            print('Chunking file: ' + chunked_audio_file_name)\\r\\r            while len(f[:]) >= chunk_size * 1000:\\r\\r                chunk = f[:chunk_size * 1000]\\r\\r                chunk_file_path = os.path.join(chunk_folder_path, os.path.basename(chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j)))\\r\\r                chunk.export(chunk_file_path, format='wav')\\r\\r                print('Chunked file stored as ' + chunk_file_path)\\r\\r                f = f[chunk_size * 1000:]\\r\\r                j += 1\\r\\r\\r\\r            if 0 < len(f[:]) and len(f[:]) < chunk_size * 1000:\\r\\r                silent = AudioSegment.silent(duration=chunk_size * 1000)\\r\\r                paddedData = silent.overlay(f, position=0, times=1)\\r\\r                padded_file_path = os.path.join(chunk_folder_path, os.path.basename(chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j)))\\r\\r                paddedData.export(padded_file_path, format='wav')\\r\\r                print('Padded file stored as ' + padded_file_path)\\r\\r        print('Chunker executed successfully!')\\r        overall_transcribe=audio_transcriber(chunk_folder_path) \\r        result=folder_path,overall_transcribe\\r        return result\\r\\r\\r\\r    except Exception as e:\\r\\r        print('Exception in Chunker as: ',e)\\r\\r        raise e\\r\\r\\r\\r       \\r\\r\\r       ""]},""position_x"":""606"",""position_y"":""0"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""ZBPcN"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out1"",""position"":""RightMiddle"",""elementId"":""xKHgN"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""process_video"",""requirements"":"""",""params"":[],""script"":[""import io\\rimport os\\rimport shutil\\rimport cv2\\rimport re\\rimport glob\\rimport base64\\rimport numpy as np\\rimport openai\\rimport json\\rimport base64\\rimport tempfile\\rfrom docx.oxml.ns import qn\\rfrom docx import Document\\rimport requests\\rfrom docx.shared import Inches\\rfrom langchain.chat_models import AzureChatOpenAI\\rfrom langchain_core.prompts.chat import ChatPromptTemplate\\rfrom skimage.metrics import structural_similarity as ssim\\rfrom pydub import AudioSegment\\rimport time\\rfrom moviepy.editor import VideoFileClip\\rfrom docx.oxml import OxmlElement\\rfrom docx.shared import Pt\\rfrom docx.oxml.ns import qn\\rfrom docx.shared import Inches\\rimport docx2python as docx2python\\rfrom docx2python.iterators import iter_paragraphs\\rfrom docx.shared import Pt\\rimport base64\\r\\rdef process_video(temp_file_paths_param, seconds_per_frame=2,similarity_threshold=0.95):\\r    '''\\r    This function will divide the Video into frames and extract audio from the video\\r    Args:\\r        uploaded_file: str\\r        folder_path: str\\r        seconds_per_frame : int\\r    return: str        \\r    '''\\r    try:\\r        print('inside process_video')\\r        temp_file_paths=temp_file_paths_param\\r        print(temp_file_paths,\\""temp_file_path\\"")\\r        files_list = [os.path.join(temp_file_paths, file) for file in os.listdir(temp_file_paths)]\\r        print(files_list)\\r        path = os.getcwd()\\r        folder_path=os.path.join(path,\\""Images\\"") \\r        if os.path.exists(folder_path):\\r            # Remove the entire directory and its contents\\r            shutil.rmtree(folder_path)\\r            print(f\\""Existing folder cleaned: {folder_path}\\"")\\r        # Create the folder (it's either new or has been removed)\\r        os.mkdir(folder_path)\\r        curr_frame = 0\\r        i = 0\\r        prev_frame = None\\r        for temp_file_path in files_list:\\r            video = cv2.VideoCapture(temp_file_path)\\r            total_frames = int(video.get(cv2.CAP_PROP_FRAME_COUNT))\\r            print(f\\""Total frames: {total_frames}\\"")\\r            fps = video.get(cv2.CAP_PROP_FPS)\\r            print(f\\""FPS: {fps}\\"")\\r            frames_to_skip = int(fps * seconds_per_frame)\\r            print(f\\""Frames to skip: {frames_to_skip}\\"")\\r            \\r            while curr_frame < total_frames - 1:\\r                video.set(cv2.CAP_PROP_POS_FRAMES, curr_frame)\\r                success, frame = video.read()\\r                if not success:\\r                    break\\r                # Convert frame to grayscale for comparison\\r                gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\\r                # Check if the frame is empty (all black or all white)\\r                if np.mean(gray_frame) < 5 or np.mean(gray_frame) > 250:\\r                    curr_frame += frames_to_skip\\r                    continue\\r                # Compare with previous frame if it exists\\r                if prev_frame is not None:\\r                    similarity = ssim(prev_frame, gray_frame)\\r                    if similarity > similarity_threshold:\\r                        curr_frame += frames_to_skip\\r                        continue\\r                # If we've made it here, the frame is unique enough to keep\\r                _, buffer = cv2.imencode(\\"".jpg\\"", frame)\\r                image_path = os.path.join(folder_path, f\\""image_{i}.jpg\\"")\\r                cv2.imwrite(image_path, frame)\\r                prev_frame = gray_frame\\r                i += 1\\r                curr_frame += frames_to_skip\\r            video.release()\\r            result=files_list,folder_path\\r        return result    \\r    except Exception as e:\\r        print(f\\""An error occurred: {str(e)}\\"")\\r        return e\\r    ""]},{""FunctionName"":""FetchMultipleData"",""requirements"":"""",""params"":[],""script"":[""\\r\\rimport logging\\rimport boto3\\rimport os\\r\\r\\rdef get_s3_details(connections_param):\\r    connectiondetails = json.loads(connections_param['connectionDetails'])\\r    session = boto3.session.Session()\\r    try:\\r        s3 = session.client('s3',endpoint_url=connectiondetails['url'],\\r        \\r        aws_access_key_id=connectiondetails['accessKey'],\\r    \\r        aws_secret_access_key=connectiondetails['secretKey'],\\r    \\r        verify=False)\\r        \\r        return s3\\r    \\r    except Exception as e:\\r        print(e)\\r    \\r    \\r\\rdef FetchMultipleData(connections_param):\\r    # print(\\""inside FetchMultipleData\\"")\\r    # print(connections_param)\\r    s3 = get_s3_details(connections_param)\\r    # print('Before bucket_object')\\r    videopath=os.environ.get(\\""videoPath\\"")\\r    # print(os.environ)\\r    print(videopath,\\""video path from env variables\\"")\\r    \\r    # print(folder_path_param, \\""folder path param\\"")\\r    # print(bucket_name_param, \\""bucket param\\"")\\r    \\r    # print(folder_path_param, \\""folder path\\"")\\r    # videos = [os.path.basename(file_path) for file_path in videopath]\\r    videos = videopath.split(\\"",\\"")\\r    print(videos,\\""videos\\"")\\r   \\r    # videos = os.environ.get(\\""videoPath\\"").split(\\""/\\"")[-1]\\r    # print(videos,\\""videos\\"")\\r    # videos_list=[]\\r    # videos_list.append(videos)\\r    \\r    if videos:\\r        for video in videos:\\r            print(\\""video\\"", video)\\r            bucket_name_param_parts = video.split(\\""/\\"")\\r            bucket_name_param = bucket_name_param_parts[0]\\r            folder_path_param = \\""/\\"".join(bucket_name_param_parts[1:-1])\\r            file_name = bucket_name_param_parts[-1]\\r            print(file_name, \\""file_name\\"")\\r            key = folder_path_param + '/' + file_name if folder_path_param else file_name\\r            print(\\""key---\\"", key, \\""bucket_name_param---\\"", bucket_name_param)\\r    \\r            # Get the current working directory\\r            local_path = os.getcwd()\\r            # Define the directory name\\r            directory_name = 'video_download/'\\r            directory_path = os.path.join(local_path, directory_name)\\r    \\r            # Create the directory if it doesn't exist\\r            os.makedirs(directory_path, exist_ok=True)\\r    \\r            print(f\\""Directory '{directory_path}' is ready.\\"")\\r    \\r            file_path = os.path.join(directory_path, file_name)\\r            print(bucket_name_param, \\""key\\"", key)\\r            try:\\r                s3.download_file(bucket_name_param, key, file_path)\\r                print(f\\""Downloaded {key} to {file_path}\\"")\\r            except PermissionError as e:\\r                print(f\\""PermissionError: {e} - Skipping {key}\\"")\\r            except Exception as e:\\r                print(f\\""Error: {e} - Skipping {key}\\"")\\r    print(directory_path)\\r    print(os.listdir(directory_path))\\r    return directory_path\\r\\r\\r""]},{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-03 09:51:32"",""alias"":""Nutanix"",""id"":24,""name"":""AIPNTNXH56520"",""description"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-09-03 09:51:32"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false}}]},{""id"":""xKHgN"",""alias"":""Images text Extraction"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""extract_text_from_images"",""requirements"":"""",""params"":[],""script"":[""def process_image(image_path, transcribe,base64_string):\\r\\r    '''\\r\\r    This function uses the OpenAI API to generate a summary of the images based on the transcription and image frames.\\r\\r    Args:\\r\\r        audio_file_name: str\\r\\r        chunk_size_param: int\\r\\r    return: Dictionary containing image path and summary of the image.       \\r\\r    '''\\r\\r    try:\\r\\r        print(\\""inside process image\\"")\\r        openai.api_type = \\""azure\\""\\r        openai.azure_endpoint = \\""https://azureft.openai.azure.com/\\""\\r        openai.api_version = \\""2023-03-15-preview\\""\\r        openai.api_key = \\""85b968a4b5c84d849c99661788c2c1ed\\""\\r\\r        messages = [\\r\\r            {\\r\\r                \\""role\\"": \\""user\\"",\\r\\r                \\""content\\"": [\\r\\r                    {\\r\\r                        \\""type\\"": \\""text\\"",\\r\\r                        \\""text\\"": f\\""The audio transcription is: {transcribe}\\""\\r\\r                    },\\r\\r                    {\\r\\r                        \\""type\\"": \\""text\\"",\\r\\r                        \\""text\\"": f\\""Provide the response in the dictionary format: {image_path}: 'Use image and {transcribe} to provide detailed elaborative description of the image. Provide the more about the context in the image instead of the image itself.'\\"",\\r\\r                    },\\r\\r                    *map(lambda x: {\\""type\\"": \\""image_url\\"",                        \\r\\r                        \\""image_url\\"": {\\""url\\"": f'data:image/jpg;base64,{x}', \\""detail\\"": \\""low\\""}},\\r\\r                        base64_string)\\r\\r                ],\\r\\r            }\\r\\r        ]\\r\\r\\r\\r        response = openai.chat.completions.create(\\r\\r            model='gpt4o',\\r\\r            messages=messages,\\r\\r            temperature=0.1,\\r\\r            max_tokens=2000,\\r\\r            top_p=0.25,\\r\\r        )\\r\\r\\r\\r        for choice in response.choices:\\r\\r            result = choice.message.content\\r\\r        return result\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {str(e)}\\"")\\r\\r        return e\\r\\r    \\r\\rdef extract_text_from_images(result_param):\\r\\r    '''\\r\\r    This function is used to convert images to base64 and process the images to generate a summary.\\r\\r    Args:\\r\\r        folder_path: str\\r\\r\\r\\r        transcribe: str\\r\\r    return: dict      \\r\\r    '''\\r\\r    try:\\r\\r        print('inside extract_text_from_images')\\r        folder_path,transcribe=result_param\\r        base64_string = []\\r\\r        base64_string1 = []\\r\\r        image_paths1= []\\r\\r        results = \\""\\""\\r\\r        jpg_files = sorted(glob.glob(os.path.join(folder_path, '*.jpg')), key=lambda x: [int(c) if c.isdigit() else c.lower() for c in re.split(r'(\\\\d+)', x)])\\r\\r        for file in jpg_files:\\r\\r            with open(file, \\""rb\\"") as image_file:\\r\\r                base64_str = base64.b64encode(image_file.read()).decode(\\""utf-8\\"")\\r\\r                base64_string.append(base64_str)\\r\\r\\r\\r        n = 10\\r\\r        base64_string1 = [base64_string[i:i+n] for i in range(0, len(base64_string), n)]\\r\\r        image_paths1 = [jpg_files[i:i+n] for i in range(0, len(jpg_files), n)]\\r\\r        for image_path, transcribe, base64_string in zip(image_paths1, transcribe, base64_string1):\\r\\r            result = process_image(image_path, transcribe,base64_string)\\r\\r            results += result\\r\\r        return results\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {str(e)}\\"")\\r\\r        return e""]},""position_x"":""783"",""position_y"":""0"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""CoRuQ"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out2"",""position"":""BottomCenter"",""elementId"":""kYLPo"",""elementPosition"":""TopCenter""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""audio_chunker"",""requirements"":"""",""params"":[],""script"":[""def audio_transcriber(chunker_folder): \\r    '''\\r    This function will extract transcribe from the audio chunks\\r    Args:\\r        chunker_folder: str\\r    return: str        \\r    ''' \\r    try:\\r        overall_transcribe = []\\r        print('inside audio_transcriber')\\r        # url = os.environ.get('transcriber_url')\\r        url = \\""https://api-aicloud.ad.infosys.com/v1/speech/transcribe/models/whisper-m/versions/1/infer\\""\\r        for dirs, subdirs, files in os.walk(chunker_folder):\\r            print(chunker_folder, \\""chunker_folder\\"")\\r            for i, file_ in enumerate(files):\\r                if file_.endswith(('.wav', '.WAV')):\\r                    file = os.path.join(dirs, file_)\\r                    inputfile = file\\r                    with open(inputfile, \\""rb\\"") as f:\\r                        input_wav = f.read()\\r                        byteArray = base64.b64encode(input_wav)\\r                        payload = json.dumps({\\""audio_bytes\\"": str(byteArray)[2:-1]})\\r                        headers = {'Content-Type': 'application/json'}\\r                        response2 = requests.request(\\""POST\\"", url, headers=headers, data=payload, timeout=600, verify=False)\\r                        print('response2===', response2)\\r                        if response2.text:\\r                            try:\\r                                result = json.loads(response2.text).get('text', '')\\r                            except json.JSONDecodeError as e:\\r                                print(f\\""JSONDecodeError: {e}\\"")\\r                                result = ''\\r                        else:\\r                            print(\\""Empty response received\\"")\\r                            result = ''\\r                        overall_transcribe.append(result)\\r        print('Transcriber executed successfully!', overall_transcribe)\\r\\r        # Join the transcriptions into a single string\\r        overall_text = ' '.join(overall_transcribe[:300])\\r        print(overall_text,\\""over all text\\"")\\r        return overall_text  \\r\\r    except Exception as e:\\r        print('Exception in Transcriber as: ',e)\\r        raise False\\rdef audio_chunker( result_param, chunk_size_param: int = 1):  \\r\\r\\r\\r    '''\\r\\r    This function will divide the audio into chunks of chunk_size_param\\r\\r    Args:\\r\\r        audio_file_name: str\\r\\r        chunk_size_param: int\\r\\r    return: str        \\r\\r    '''\\r\\r\\r\\r    try:\\r\\r        print(result_param,\\""result_param\\"")\\r        files,folder_path=result_param\\r        print('inside audio_chunker')\\r        print(files,\\""files\\"",folder_path)\\r        chunk_size = chunk_size_param      \\r\\r\\r\\r        '''Divide the audio file into chunk_size samples'''\\r\\r        \\r        chunk_folder_path = os.path.join(folder_path, \\""chunks\\"")\\r\\r        if os.path.exists(chunk_folder_path):\\r\\r            shutil.rmtree(chunk_folder_path)\\r\\r            print(f\\""Existing chunks folder cleaned: {chunk_folder_path}\\"")\\r\\r        os.mkdir(chunk_folder_path)\\r\\r        print(f\\""Chunks folder created/recreated: {chunk_folder_path}\\"")\\r\\r        for file in files:\\r\\r            clip = VideoFileClip(file)\\r\\r            chunked_audio_file_name = os.path.join(folder_path, os.path.basename(file).replace(\\"".mp4\\"", \\"".wav\\""))\\r\\r            clip.audio.write_audiofile(chunked_audio_file_name, bitrate=\\""32k\\"")\\r\\r            clip.audio.close()\\r\\r            clip.close()\\r\\r\\r\\r            f = AudioSegment.from_wav(chunked_audio_file_name)\\r\\r            j = 0\\r\\r            print('Chunking file: ' + chunked_audio_file_name)\\r\\r            while len(f[:]) >= chunk_size * 1000:\\r\\r                chunk = f[:chunk_size * 1000]\\r\\r                chunk_file_path = os.path.join(chunk_folder_path, os.path.basename(chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j)))\\r\\r                chunk.export(chunk_file_path, format='wav')\\r\\r                print('Chunked file stored as ' + chunk_file_path)\\r\\r                f = f[chunk_size * 1000:]\\r\\r                j += 1\\r\\r\\r\\r            if 0 < len(f[:]) and len(f[:]) < chunk_size * 1000:\\r\\r                silent = AudioSegment.silent(duration=chunk_size * 1000)\\r\\r                paddedData = silent.overlay(f, position=0, times=1)\\r\\r                padded_file_path = os.path.join(chunk_folder_path, os.path.basename(chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j)))\\r\\r                paddedData.export(padded_file_path, format='wav')\\r\\r                print('Padded file stored as ' + padded_file_path)\\r\\r        print('Chunker executed successfully!')\\r        overall_transcribe=audio_transcriber(chunk_folder_path) \\r        result=folder_path,overall_transcribe\\r        return result\\r\\r\\r\\r    except Exception as e:\\r\\r        print('Exception in Chunker as: ',e)\\r\\r        raise e\\r\\r\\r\\r       \\r\\r\\r       ""]},{""FunctionName"":""process_video"",""requirements"":"""",""params"":[],""script"":[""import io\\rimport os\\rimport shutil\\rimport cv2\\rimport re\\rimport glob\\rimport base64\\rimport numpy as np\\rimport openai\\rimport json\\rimport base64\\rimport tempfile\\rfrom docx.oxml.ns import qn\\rfrom docx import Document\\rimport requests\\rfrom docx.shared import Inches\\rfrom langchain.chat_models import AzureChatOpenAI\\rfrom langchain_core.prompts.chat import ChatPromptTemplate\\rfrom skimage.metrics import structural_similarity as ssim\\rfrom pydub import AudioSegment\\rimport time\\rfrom moviepy.editor import VideoFileClip\\rfrom docx.oxml import OxmlElement\\rfrom docx.shared import Pt\\rfrom docx.oxml.ns import qn\\rfrom docx.shared import Inches\\rimport docx2python as docx2python\\rfrom docx2python.iterators import iter_paragraphs\\rfrom docx.shared import Pt\\rimport base64\\r\\rdef process_video(temp_file_paths_param, seconds_per_frame=2,similarity_threshold=0.95):\\r    '''\\r    This function will divide the Video into frames and extract audio from the video\\r    Args:\\r        uploaded_file: str\\r        folder_path: str\\r        seconds_per_frame : int\\r    return: str        \\r    '''\\r    try:\\r        print('inside process_video')\\r        temp_file_paths=temp_file_paths_param\\r        print(temp_file_paths,\\""temp_file_path\\"")\\r        files_list = [os.path.join(temp_file_paths, file) for file in os.listdir(temp_file_paths)]\\r        print(files_list)\\r        path = os.getcwd()\\r        folder_path=os.path.join(path,\\""Images\\"") \\r        if os.path.exists(folder_path):\\r            # Remove the entire directory and its contents\\r            shutil.rmtree(folder_path)\\r            print(f\\""Existing folder cleaned: {folder_path}\\"")\\r        # Create the folder (it's either new or has been removed)\\r        os.mkdir(folder_path)\\r        curr_frame = 0\\r        i = 0\\r        prev_frame = None\\r        for temp_file_path in files_list:\\r            video = cv2.VideoCapture(temp_file_path)\\r            total_frames = int(video.get(cv2.CAP_PROP_FRAME_COUNT))\\r            print(f\\""Total frames: {total_frames}\\"")\\r            fps = video.get(cv2.CAP_PROP_FPS)\\r            print(f\\""FPS: {fps}\\"")\\r            frames_to_skip = int(fps * seconds_per_frame)\\r            print(f\\""Frames to skip: {frames_to_skip}\\"")\\r            \\r            while curr_frame < total_frames - 1:\\r                video.set(cv2.CAP_PROP_POS_FRAMES, curr_frame)\\r                success, frame = video.read()\\r                if not success:\\r                    break\\r                # Convert frame to grayscale for comparison\\r                gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\\r                # Check if the frame is empty (all black or all white)\\r                if np.mean(gray_frame) < 5 or np.mean(gray_frame) > 250:\\r                    curr_frame += frames_to_skip\\r                    continue\\r                # Compare with previous frame if it exists\\r                if prev_frame is not None:\\r                    similarity = ssim(prev_frame, gray_frame)\\r                    if similarity > similarity_threshold:\\r                        curr_frame += frames_to_skip\\r                        continue\\r                # If we've made it here, the frame is unique enough to keep\\r                _, buffer = cv2.imencode(\\"".jpg\\"", frame)\\r                image_path = os.path.join(folder_path, f\\""image_{i}.jpg\\"")\\r                cv2.imwrite(image_path, frame)\\r                prev_frame = gray_frame\\r                i += 1\\r                curr_frame += frames_to_skip\\r            video.release()\\r            result=files_list,folder_path\\r        return result    \\r    except Exception as e:\\r        print(f\\""An error occurred: {str(e)}\\"")\\r        return e\\r    ""]},{""FunctionName"":""FetchMultipleData"",""requirements"":"""",""params"":[],""script"":[""\\r\\rimport logging\\rimport boto3\\rimport os\\r\\r\\rdef get_s3_details(connections_param):\\r    connectiondetails = json.loads(connections_param['connectionDetails'])\\r    session = boto3.session.Session()\\r    try:\\r        s3 = session.client('s3',endpoint_url=connectiondetails['url'],\\r        \\r        aws_access_key_id=connectiondetails['accessKey'],\\r    \\r        aws_secret_access_key=connectiondetails['secretKey'],\\r    \\r        verify=False)\\r        \\r        return s3\\r    \\r    except Exception as e:\\r        print(e)\\r    \\r    \\r\\rdef FetchMultipleData(connections_param):\\r    # print(\\""inside FetchMultipleData\\"")\\r    # print(connections_param)\\r    s3 = get_s3_details(connections_param)\\r    # print('Before bucket_object')\\r    videopath=os.environ.get(\\""videoPath\\"")\\r    # print(os.environ)\\r    print(videopath,\\""video path from env variables\\"")\\r    \\r    # print(folder_path_param, \\""folder path param\\"")\\r    # print(bucket_name_param, \\""bucket param\\"")\\r    \\r    # print(folder_path_param, \\""folder path\\"")\\r    # videos = [os.path.basename(file_path) for file_path in videopath]\\r    videos = videopath.split(\\"",\\"")\\r    print(videos,\\""videos\\"")\\r   \\r    # videos = os.environ.get(\\""videoPath\\"").split(\\""/\\"")[-1]\\r    # print(videos,\\""videos\\"")\\r    # videos_list=[]\\r    # videos_list.append(videos)\\r    \\r    if videos:\\r        for video in videos:\\r            print(\\""video\\"", video)\\r            bucket_name_param_parts = video.split(\\""/\\"")\\r            bucket_name_param = bucket_name_param_parts[0]\\r            folder_path_param = \\""/\\"".join(bucket_name_param_parts[1:-1])\\r            file_name = bucket_name_param_parts[-1]\\r            print(file_name, \\""file_name\\"")\\r            key = folder_path_param + '/' + file_name if folder_path_param else file_name\\r            print(\\""key---\\"", key, \\""bucket_name_param---\\"", bucket_name_param)\\r    \\r            # Get the current working directory\\r            local_path = os.getcwd()\\r            # Define the directory name\\r            directory_name = 'video_download/'\\r            directory_path = os.path.join(local_path, directory_name)\\r    \\r            # Create the directory if it doesn't exist\\r            os.makedirs(directory_path, exist_ok=True)\\r    \\r            print(f\\""Directory '{directory_path}' is ready.\\"")\\r    \\r            file_path = os.path.join(directory_path, file_name)\\r            print(bucket_name_param, \\""key\\"", key)\\r            try:\\r                s3.download_file(bucket_name_param, key, file_path)\\r                print(f\\""Downloaded {key} to {file_path}\\"")\\r            except PermissionError as e:\\r                print(f\\""PermissionError: {e} - Skipping {key}\\"")\\r            except Exception as e:\\r                print(f\\""Error: {e} - Skipping {key}\\"")\\r    print(directory_path)\\r    print(os.listdir(directory_path))\\r    return directory_path\\r\\r\\r""]},{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-03 09:51:32"",""alias"":""Nutanix"",""id"":24,""name"":""AIPNTNXH56520"",""description"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-09-03 09:51:32"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false}}]},{""id"":""kYLPo"",""alias"":""generate summary"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""insert_text_into_docx"",""requirements"":"""",""params"":[],""script"":[""def generate_brd_summary(data_param,file_path=None):\\r    \\r\\r    '''\\r\\r    This function generates a Business Requirement Document (BRD) summary based on the data and template provided.\\r\\r    Args:\\r\\r        data: str\\r\\r        file_path: str\\r\\r    return: str        \\r\\r\\r\\r    '''\\r    try:\\r        data=data_param\\r        if file_path is None:\\r            template = []\\r        else:  \\r            doc=Document(file_path)\\r\\r            template=[]\\r\\r            for para in doc.paragraphs:\\r\\r                template.append(para.text)   \\r\\r        llm2 = AzureChatOpenAI(openai_api_key=\\""85b968a4b5c84d849c99661788c2c1ed\\"",openai_api_base=\\""https://azureft.openai.azure.com/\\"",deployment_name='gpt-4', temperature=0, openai_api_version='2023-05-15')\\r        if template==[]:\\r            prompt=ChatPromptTemplate.from_template( \\""\\""\\""\\r\\r        Create a professional document using the content in {data}, which contains {image_paths} and {summary}.\\r        \\r        Document Structure:\\r        \\r        Create Table of Contents as per the {summary},and also include Table of Contents in the response and Use those Table of Contents for the document structure. Provide the title to the document based on {summary}.\\r\\r\\r\\r        Content Generation:\\r\\r        a. Generate relevant content based on {summary}.\\r\\r        b. Include at least one image path from {image_paths} for each main section. Insert it as:\\r\\r        Relevant Image: [actual path from {image_paths}]\\r\\r        c. Briefly explain the image's relevance to the section.\\r\\r        Ensure at least 4-5 image paths are included throughout the document.\\r\\r\\r\\r        Formatting:\\r\\r        Use Markdown syntax matching the hierarchy as per the Table of Contents:\\r\\r        '#' for main title, '##' for section headings, '###' for subsections, etc.\\r\\r        Example (based on Table of Contents):\\r\\r        [Title based on {summary}]\\r        Title should be of two words Example: SalesForce Document\\r\\r        1. [Exact Section 1 title from Table of Contents]\\r\\r        [Content for Section 1 based on {summary}]\\r\\r        Relevant Image: [actual path from {image_paths}]\\r\\r        [Brief explanation of image relevance]\\r\\r        1.1 [Exact Subsection 1.1 title from Table of Contents]\\r\\r        [Content for Subsection 1.1 based on {summary}]\\r\\r        2. [Exact Section 2 title from Table of Contents]\\r\\r        [Content for Section 2 based on {summary}]\\r\\r        Relevant Image: [actual path from {image_paths}]\\r\\r        [Brief explanation of image relevance]\\r\\r        [Continue for all sections and subsections in Table of Contents]\\r\\r        Final Check:\\r\\r\\r\\r        Confirm that ALL headings and subheadings from Table of Contents are present and in the correct order.\\r\\r        Verify inclusion of at least 4-5 actual image paths.\\r\\r        Ensure each main section has at least one relevant image.\\r        \\r        \\""\\""\\"")\\r        else:\\r            prompt = ChatPromptTemplate.from_template(\\r    \\r    \\r    \\r            \\""\\""\\""\\r    \\r            Create a professional document using the content in {data}, which contains {image_paths} and {summary}. Provide a short, meaningful title based on the {summary}.\\r    \\r            Document Structure:\\r            \\r            \\r    \\r            STRICTLY use the Table of Contents provided in {template} as the exact structure for the document. Do not deviate from or modify this structure in any way.\\r    \\r            Do not include the Table of Contents itself in the final document.\\r    \\r    \\r    \\r            Content Generation:\\r    \\r    \\r    \\r            For each heading and subheading in the {template}'s Table of Contents:\\r    \\r            a. Generate relevant content based on {summary}.\\r    \\r            b. Include at least one image path from {image_paths} for each main section. Insert it as:\\r    \\r            Relevant Image: [actual path from {image_paths}]\\r    \\r            c. Briefly explain the image's relevance to the section.\\r    \\r            Ensure at least 4-5 image paths are included throughout the document.\\r    \\r    \\r    \\r            Formatting:\\r    \\r            Use Markdown syntax matching the hierarchy in {template}'s Table of Contents:\\r    \\r            '#' for main title, '##' for section headings, '###' for subsections, etc.\\r    \\r            Example (based on {template}'s Table of Contents):\\r    \\r            [Title based on {summary}]\\r    \\r            1. [Exact Section 1 title from {template}]\\r    \\r            [Content for Section 1 based on {summary}]\\r    \\r            Relevant Image: [actual path from {image_paths}]\\r    \\r            [Brief explanation of image relevance]\\r    \\r            1.1 [Exact Subsection 1.1 title from {template}]\\r    \\r            [Content for Subsection 1.1 based on {summary}]\\r    \\r            2. [Exact Section 2 title from {template}]\\r    \\r            [Content for Section 2 based on {summary}]\\r    \\r            Relevant Image: [actual path from {image_paths}]\\r    \\r            [Brief explanation of image relevance]\\r    \\r            [Continue for all sections and subsections in {template}'s Table of Contents]\\r    \\r            Final Check:\\r    \\r    \\r    \\r            Confirm that ALL headings and subheadings from {template}'s Table of Contents are present and in the correct order.\\r    \\r            Verify inclusion of at least 4-5 actual image paths.\\r    \\r            Ensure each main section has at least one relevant image.\\r            \\r            \\""\\""\\""\\r    \\r                )\\r\\r\\r\\r        chain = prompt | llm2\\r\\r        if isinstance(data, dict):\\r\\r            keys = data.keys()\\r\\r        elif isinstance(data, list):\\r\\r            keys = {key for d in data for key in d.keys()}\\r\\r        else:\\r\\r            keys = set()\\r\\r        if isinstance(data, dict):\\r\\r            values = data.values()\\r\\r        elif isinstance(data, list):\\r\\r            values = {value for d in data for value in d.values()}\\r\\r        else:\\r\\r            values = set()    \\r\\r        response = chain.invoke({\\""data\\"": data, \\""template\\"": template,\\""image_paths\\"":keys,\\""summary\\"":values})\\r\\r        formatted_response = response.content\\r        print(formatted_response,\\""formatted_response\\"")\\r        return formatted_response\\r    except Exception as e:\\r        print(f\\""An error occurred inside generate brd summary: {e}\\"")\\r    \\rdef FetchTemplate(s3,bucket_name_param,folder_path_param,template):\\r    print(\\""inside Fetchtemplate\\"")\\r    try:\\r        \\r        print(folder_path_param, \\""folder path param\\"")\\r        print(bucket_name_param, \\""bucket param\\"")\\r        \\r        print(folder_path_param, \\""folder path\\"")\\r        \\r        key = folder_path_param + '/' + template\\r        # Get the current working directory\\r        local_path = os.getcwd()\\r        # Define the directory name\\r        directory_name = 'template_download'\\r        directory_path = os.path.join(local_path, directory_name)\\r        \\r        # Create the directory if it doesn't exist\\r        os.makedirs(directory_path, exist_ok=True)\\r        \\r        print(f\\""Directory '{directory_path}' is ready.\\"")\\r        \\r        file_path = os.path.join(directory_path, template)\\r        \\r        try:\\r            s3.download_file(bucket_name_param, key, file_path)\\r            print(f\\""Downloaded {key} to {file_path}\\"")\\r        except PermissionError as e:\\r            print(f\\""PermissionError:  - Skipping \\"")\\r        print(directory_path)\\r        path=os.path.join(directory_path, template)\\r        print(\\""final template path\\"",path)\\r        return path\\r    except Exception as e:\\r        print(\\""error in fetch template\\"")\\r\\r\\r\\rdef insert_image_into_doc(doc, image_path, width=None):\\r\\r    '''\\r    \\r        Insert an image into a Word document.\\r    \\r    '''\\r    \\r    # Remove any surrounding whitespace and quotes\\r    \\r    image_path = image_path.strip().strip('\\""').strip(\\""`\\"").strip(\\""[\\"").strip(\\""]\\"").strip(\\""'\\"")\\r    \\r    print(f\\""Attempting to insert image: {image_path}\\"")\\r    \\r    print(f\\""File exists: {os.path.exists(image_path)}\\"")\\r    \\r    \\r    \\r    if os.path.exists(image_path):\\r    \\r        try:\\r    \\r            if width:\\r    \\r                doc.add_picture(image_path, width=width)\\r    \\r            else:\\r    \\r                print(\\""error\\"")\\r    \\r        except Exception as e:\\r    \\r            doc.add_paragraph(f\\""Error inserting image {image_path}: {str(e)}\\"")\\r\\rdef clear_paragraph(paragraph):\\r\\r    \\""\\""\\""Function to clear all runs in a paragraph.\\""\\""\\""\\r    \\r    for run in paragraph.runs:\\r    \\r        run.text = \\""\\""\\r\\r\\r\\rdef add_dynamic_page_numbers(para):\\r\\r    \\""\\""\\""Function to add dynamic page numbers to a paragraph.\\""\\""\\""\\r    \\r    para.add_run(\\""\\\\t\\"")\\r    \\r    # Add the dynamic page numbers\\r    \\r    para.add_run(\\"" Page \\"")\\r    \\r    # Add the current page number field (PAGE)\\r    \\r    fldChar1 = OxmlElement('w:fldChar')\\r    \\r    fldChar1.set(qn('w:fldCharType'), 'begin')\\r    \\r    instrText = OxmlElement('w:instrText')\\r    \\r    instrText.set(qn('xml:space'), 'preserve')\\r    \\r    instrText.text = \\""PAGE\\""\\r    \\r    fldChar2 = OxmlElement('w:fldChar')\\r    \\r    fldChar2.set(qn('w:fldCharType'), 'end')\\r    \\r    r = para.add_run()\\r    \\r    r._r.append(fldChar1)\\r    \\r    r._r.append(instrText)\\r    \\r    r._r.append(fldChar2)\\r    \\r    # Add ' of ' between PAGE and NUMPAGES\\r    \\r    para.add_run(' of ')\\r    \\r    # Add the total page number field (NUMPAGES)\\r    \\r    fldChar1 = OxmlElement('w:fldChar')\\r    \\r    fldChar1.set(qn('w:fldCharType'), 'begin')\\r    \\r    instrText = OxmlElement('w:instrText')\\r    \\r    instrText.set(qn('xml:space'), 'preserve')\\r    \\r    instrText.text = \\""NUMPAGES\\""\\r    \\r    fldChar2 = OxmlElement('w:fldChar')\\r    \\r    fldChar2.set(qn('w:fldCharType'), 'end')\\r    \\r    r = para.add_run()\\r    \\r    r._r.append(fldChar1)\\r    \\r    r._r.append(instrText)\\r    \\r    r._r.append(fldChar2)\\r    \\r    para.add_run(\\""\\\\t\\"")\\r\\r\\r\\rdef get_footer_content(doc_path, title_of_doc):\\r\\r    print(\\""Inside get_footer_content\\"")\\r    \\r    # Placeholder for replacement\\r    \\r    match_cases = [\\""[Use case]\\"",\\""[Project Name]\\""]\\r    \\r    # Open the document\\r    \\r    doc = Document(doc_path)\\r    \\r    # Access the first section\\r    \\r    section = doc.sections[0]\\r    \\r    # Access the footer\\r    \\r    footer = section.footer\\r    \\r    docs = docx2python.docx2python(doc_path)\\r    \\r    header_text = '\\\\t\\\\t'.join(iter_paragraphs(docs.header))\\r    \\r    for match_case in match_cases:\\r    \\r        if match_case in header_text:\\r    \\r            # Replace the match case with the new title\\r    \\r            new_header = header_text.replace(match_case, title_of_doc)\\r    \\r            pattern = r\\""Page\\\\s+\\\\d+\\\\s+of\\\\s+\\\\d+\\""\\r    \\r            # Use re.sub to replace the pattern with an empty string\\r    \\r            header_text = re.sub(pattern, \\""\\"", new_header)\\r    \\r            for section in doc.sections:\\r    \\r                header = section.header\\r    \\r                for element in list(header._element):\\r    \\r                    header._element.remove(element)        \\r    \\r            # Insert the updated header content\\r    \\r            for section in doc.sections:\\r    \\r                header = section.header\\r    \\r                if len(header.paragraphs) > 0:\\r    \\r                    para = header.paragraphs[0]\\r    \\r                else:\\r    \\r                    para = header.add_paragraph()    \\r    \\r                para.add_run(new_header.strip())               \\r    \\r                # Set tab stops\\r    \\r                para.paragraph_format.tab_stops.clear_all()\\r    \\r                para.paragraph_format.tab_stops.add_tab_stop(Pt(72), alignment=0)  # Left align at 1 inch\\r    \\r                para.paragraph_format.tab_stops.add_tab_stop(Pt(288), alignment=1)  # Center align at 4 inches\\r    \\r                para.paragraph_format.tab_stops.add_tab_stop(Pt(504), alignment=2)  # Right align at 7 inches   \\r    \\r    footer_text = '\\\\t\\\\t'.join(iter_paragraphs(docs.footer))\\r    \\r    for match_case in match_cases:\\r    \\r        if match_case in footer_text:\\r    \\r            # Replace the match case with the new title\\r    \\r            new_footer = footer_text.replace(match_case, title_of_doc)\\r    \\r            pattern = r\\""Page\\\\s+\\\\d+\\\\s+of\\\\s+\\\\d+\\""\\r    \\r            # Use re.sub to replace the pattern with an empty string\\r    \\r            footer_text = re.sub(pattern, \\""\\"", new_footer)\\r    \\r        # Optionally, strip any leading or trailing whitespace\\r    \\r        new_footer = footer_text.strip()\\r    \\r        # Split the footer content based on \\""\\\\t\\\\t\\\\t\\""\\r    \\r        words = new_footer.split(\\""\\\\t\\\\t\\\\t\\"")\\r    \\r        word1 = words[0].strip()\\r    \\r        word2 = words[1].strip() if len(words) > 1 else \\""\\""\\r    \\r        # Remove the existing footer content\\r    \\r        for section in doc.sections:\\r    \\r            footer = section.footer\\r    \\r            for element in list(footer._element):\\r    \\r                footer._element.remove(element)\\r    \\r        # Insert the updated footer with dynamic page numbers\\r    \\r        for section in doc.sections:\\r    \\r            footer = section.footer\\r    \\r            if len(footer.paragraphs) > 0:\\r    \\r                para = footer.paragraphs[0]\\r    \\r            else:\\r    \\r                para = footer.add_paragraph()    \\r    \\r            para.add_run(word1)\\r    \\r            para.add_run(\\""\\\\t\\"")\\r    \\r            add_dynamic_page_numbers(para)\\r    \\r            para.add_run(\\""\\\\t\\"")\\r    \\r            para.add_run(word2)           \\r    \\r            # Set tab stops\\r    \\r            para.paragraph_format.tab_stops.clear_all()\\r    \\r            para.paragraph_format.tab_stops.add_tab_stop(Pt(72), alignment=0)  # Left align at 1 inch\\r    \\r            para.paragraph_format.tab_stops.add_tab_stop(Pt(72), alignment=1)  # Center align at 4 inches\\r    \\r            para.paragraph_format.tab_stops.add_tab_stop(Pt(72), alignment=2)  # Right align at 7 inches\\r    \\r        new_footer = footer_text.replace(match_case, title_of_doc)\\r    \\r    return doc\\r    \\r\\r\\rdef insert_text_into_docx(connections_param,data_param):\\r    \\r    print(\\""inside insert_text_into_docx\\"")\\r  \\r    videopath=os.environ.get(\\""templatePath\\"")\\r    if videopath:\\r        videos = videopath.split(\\"",\\"")\\r        print(videos,\\""videos\\"")\\r        bucket_name_param=videos[0]\\r        bucket_name_param_parts = bucket_name_param.split(\\""/\\"")\\r        bucket_param = bucket_name_param_parts[0]\\r        folder_path_param = bucket_name_param_parts[1]\\r        template_name=bucket_name_param_parts[2]\\r        s3 = get_s3_details(connections_param)\\r        \\r        input_file=FetchTemplate(s3,bucket_param,folder_path_param,template_name)\\r        print(\\""template file------------------\\"",input_file)\\r    else:\\r        videopath=os.environ.get(\\""videoPath\\"")\\r        videos = videopath.split(\\"",\\"")\\r        print(videos,\\""videos\\"")\\r        bucket_name_param=videos[0]\\r        bucket_name_param_parts = bucket_name_param.split(\\""/\\"")\\r        bucket_param = bucket_name_param_parts[0]\\r        folder_path_param = bucket_name_param_parts[1]\\r        s3 = get_s3_details(connections_param)\\r        input_file=None\\r    docName=os.environ.get('DocumentName')\\r    # Load the existing document\\r    \\r    # try:\\r\\r        \\r    generated_text=generate_brd_summary(data_param,input_file)\\r    if input_file is None:\\r        doc = Document()\\r        input_file=f\\""{docName}.docx\\""\\r    else:    \\r        doc = Document(input_file)\\r        \\r\\r    # Get the styles from the existing document \\r\\r    styles = doc.styles\\r\\r    pattern=r'\\\\bRelevant Image: (.*?\\\\.jpg)\\\\b'\\r\\r    generated_text = generated_text.replace('*', '')\\r\\r    toc_pattern = re.compile(r'## Table of Content(?:s)?', re.IGNORECASE)\\r\\r    # Process the generated text\\r\\r    lines = generated_text.split('\\\\n')\\r    print(\\""#######################3\\"")\\r    for line in lines:\\r\\r        stripped_line = line.strip()\\r\\r        if stripped_line == \\""---\\"":\\r\\r            continue\\r        print(\\""every line\\"",line)\\r        match = re.search(pattern, stripped_line)\\r        if '#' in line and line.count('#') == 1:\\r            print(\\""single # line\\"",line)\\r            title_of_doc = line.split('#')[1].strip()\\r            print(\\""title of doc\\"",title_of_doc)    \\r        elif match:\\r\\r            # This is an image placeholder\\r\\r            image_path = match.group(1).strip()  # Extract the image path\\r\\r            insert_image_into_doc(doc, image_path, width=Inches(6))  \\r\\r                    \\r\\r            \\r        elif toc_pattern.match(stripped_line):\\r\\r            continue         \\r\\r        elif line.startswith('## '):\\r\\r            p = doc.add_paragraph(line[3:])\\r\\r            p.style = styles['Heading 2']\\r\\r        elif line.startswith('### '):\\r\\r            p = doc.add_paragraph(line[4:])\\r\\r            p.style = styles['Heading 3']\\r\\r        elif line.startswith('####'):\\r\\r            p = doc.add_paragraph(line[4:])\\r\\r            p.style = styles['Heading 3']    \\r\\r        else:\\r\\r            if line.startswith('#') and line.count('#') == 1:\\r\\r                continue\\r\\r            else:\\r\\r                line = line.replace('#', '')  # Remove the '#' character\\r\\r                p = doc.add_paragraph(line)\\r\\r                p.style = styles['Normal']             \\r\\r    paragraphs = [p.text for p in doc.paragraphs]\\r\\r    for line in paragraphs:\\r\\r        for i, line in enumerate(paragraphs):\\r\\r            if \\""[Use case]\\"" in line or \\""[Project Name]\\"" in line:\\r\\r                paragraphs[i] = line.replace(\\""[Use case]\\"", title_of_doc)\\r\\r                paragraphs[i] = line.replace(\\""[Project Name]\\"", title_of_doc)\\r\\r                # Modify the paragraph style\\r\\r                p=doc.paragraphs[i]\\r\\r                p.clear()\\r\\r                run=p.add_run(paragraphs[i])\\r\\r                run.bold=True\\r\\r                run.font.size=Pt(14)\\r\\r    doc.save(input_file)\\r    print(\\""file saved for text\\"")\\r    doc = get_footer_content(input_file, title_of_doc)\\r    doc.save(input_file)\\r    print(\\""doc in inserting text and images\\"")\\r\\r    s3_file_key=f\\""{folder_path_param}/{docName}.docx\\""\\r    #bucket = s3.Bucket(bucket_param)\\r    with open(input_file, 'rb') as f:\\r        s3_file_key=f\\""{folder_path_param}/{docName}.docx\\""\\r        s3.put_object(Bucket=bucket_param, Key=s3_file_key, Body=f)\\r    #s3.put_object(Bucket=bucket_param, Key=s3_file_key)\\r    #bucket.upload_file(input_file, s3_file_key)\\r    print(f\\""Uploaded document to  in bucket {bucket_param}\\"")\\r    print(\\""file uploaded\\"") \\r    return \\""file uploaded\\""\\r    \\r    # except Exception as e:\\r    \\r    #     print(f\\""Error inserting text into docx: {e}\\"") \\r\\r\\r\\r\\r""]},""position_x"":""783"",""position_y"":""145"",""connectors"":[{""type"":""target"",""endpoint"":""dataset2"",""position"":""TopCenter"",""elementId"":""xKHgN"",""elementPosition"":""BottomCenter""},{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""UpBuX"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2""],""outputEndpoints"":[""out1"",""out2""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""codeGeneration"":{""imports"":[],""script"":""\\n\\n\\n\\n\\n\\n""},""context"":[{""FunctionName"":""extract_text_from_images"",""requirements"":"""",""params"":[],""script"":[""def process_image(image_path, transcribe,base64_string):\\r\\r    '''\\r\\r    This function uses the OpenAI API to generate a summary of the images based on the transcription and image frames.\\r\\r    Args:\\r\\r        audio_file_name: str\\r\\r        chunk_size_param: int\\r\\r    return: Dictionary containing image path and summary of the image.       \\r\\r    '''\\r\\r    try:\\r\\r        print(\\""inside process image\\"")\\r        openai.api_type = \\""azure\\""\\r        openai.azure_endpoint = \\""https://azureft.openai.azure.com/\\""\\r        openai.api_version = \\""2023-03-15-preview\\""\\r        openai.api_key = \\""85b968a4b5c84d849c99661788c2c1ed\\""\\r\\r        messages = [\\r\\r            {\\r\\r                \\""role\\"": \\""user\\"",\\r\\r                \\""content\\"": [\\r\\r                    {\\r\\r                        \\""type\\"": \\""text\\"",\\r\\r                        \\""text\\"": f\\""The audio transcription is: {transcribe}\\""\\r\\r                    },\\r\\r                    {\\r\\r                        \\""type\\"": \\""text\\"",\\r\\r                        \\""text\\"": f\\""Provide the response in the dictionary format: {image_path}: 'Use image and {transcribe} to provide detailed elaborative description of the image. Provide the more about the context in the image instead of the image itself.'\\"",\\r\\r                    },\\r\\r                    *map(lambda x: {\\""type\\"": \\""image_url\\"",                        \\r\\r                        \\""image_url\\"": {\\""url\\"": f'data:image/jpg;base64,{x}', \\""detail\\"": \\""low\\""}},\\r\\r                        base64_string)\\r\\r                ],\\r\\r            }\\r\\r        ]\\r\\r\\r\\r        response = openai.chat.completions.create(\\r\\r            model='gpt4o',\\r\\r            messages=messages,\\r\\r            temperature=0.1,\\r\\r            max_tokens=2000,\\r\\r            top_p=0.25,\\r\\r        )\\r\\r\\r\\r        for choice in response.choices:\\r\\r            result = choice.message.content\\r\\r        return result\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {str(e)}\\"")\\r\\r        return e\\r\\r    \\r\\rdef extract_text_from_images(result_param):\\r\\r    '''\\r\\r    This function is used to convert images to base64 and process the images to generate a summary.\\r\\r    Args:\\r\\r        folder_path: str\\r\\r\\r\\r        transcribe: str\\r\\r    return: dict      \\r\\r    '''\\r\\r    try:\\r\\r        print('inside extract_text_from_images')\\r        folder_path,transcribe=result_param\\r        base64_string = []\\r\\r        base64_string1 = []\\r\\r        image_paths1= []\\r\\r        results = \\""\\""\\r\\r        jpg_files = sorted(glob.glob(os.path.join(folder_path, '*.jpg')), key=lambda x: [int(c) if c.isdigit() else c.lower() for c in re.split(r'(\\\\d+)', x)])\\r\\r        for file in jpg_files:\\r\\r            with open(file, \\""rb\\"") as image_file:\\r\\r                base64_str = base64.b64encode(image_file.read()).decode(\\""utf-8\\"")\\r\\r                base64_string.append(base64_str)\\r\\r\\r\\r        n = 10\\r\\r        base64_string1 = [base64_string[i:i+n] for i in range(0, len(base64_string), n)]\\r\\r        image_paths1 = [jpg_files[i:i+n] for i in range(0, len(jpg_files), n)]\\r\\r        for image_path, transcribe, base64_string in zip(image_paths1, transcribe, base64_string1):\\r\\r            result = process_image(image_path, transcribe,base64_string)\\r\\r            results += result\\r\\r        return results\\r\\r    except Exception as e:\\r\\r        print(f\\""An error occurred: {str(e)}\\"")\\r\\r        return e""]},{""FunctionName"":""audio_chunker"",""requirements"":"""",""params"":[],""script"":[""def audio_transcriber(chunker_folder): \\r    '''\\r    This function will extract transcribe from the audio chunks\\r    Args:\\r        chunker_folder: str\\r    return: str        \\r    ''' \\r    try:\\r        overall_transcribe = []\\r        print('inside audio_transcriber')\\r        # url = os.environ.get('transcriber_url')\\r        url = \\""https://api-aicloud.ad.infosys.com/v1/speech/transcribe/models/whisper-m/versions/1/infer\\""\\r        for dirs, subdirs, files in os.walk(chunker_folder):\\r            print(chunker_folder, \\""chunker_folder\\"")\\r            for i, file_ in enumerate(files):\\r                if file_.endswith(('.wav', '.WAV')):\\r                    file = os.path.join(dirs, file_)\\r                    inputfile = file\\r                    with open(inputfile, \\""rb\\"") as f:\\r                        input_wav = f.read()\\r                        byteArray = base64.b64encode(input_wav)\\r                        payload = json.dumps({\\""audio_bytes\\"": str(byteArray)[2:-1]})\\r                        headers = {'Content-Type': 'application/json'}\\r                        response2 = requests.request(\\""POST\\"", url, headers=headers, data=payload, timeout=600, verify=False)\\r                        print('response2===', response2)\\r                        if response2.text:\\r                            try:\\r                                result = json.loads(response2.text).get('text', '')\\r                            except json.JSONDecodeError as e:\\r                                print(f\\""JSONDecodeError: {e}\\"")\\r                                result = ''\\r                        else:\\r                            print(\\""Empty response received\\"")\\r                            result = ''\\r                        overall_transcribe.append(result)\\r        print('Transcriber executed successfully!', overall_transcribe)\\r\\r        # Join the transcriptions into a single string\\r        overall_text = ' '.join(overall_transcribe[:300])\\r        print(overall_text,\\""over all text\\"")\\r        return overall_text  \\r\\r    except Exception as e:\\r        print('Exception in Transcriber as: ',e)\\r        raise False\\rdef audio_chunker( result_param, chunk_size_param: int = 1):  \\r\\r\\r\\r    '''\\r\\r    This function will divide the audio into chunks of chunk_size_param\\r\\r    Args:\\r\\r        audio_file_name: str\\r\\r        chunk_size_param: int\\r\\r    return: str        \\r\\r    '''\\r\\r\\r\\r    try:\\r\\r        print(result_param,\\""result_param\\"")\\r        files,folder_path=result_param\\r        print('inside audio_chunker')\\r        print(files,\\""files\\"",folder_path)\\r        chunk_size = chunk_size_param      \\r\\r\\r\\r        '''Divide the audio file into chunk_size samples'''\\r\\r        \\r        chunk_folder_path = os.path.join(folder_path, \\""chunks\\"")\\r\\r        if os.path.exists(chunk_folder_path):\\r\\r            shutil.rmtree(chunk_folder_path)\\r\\r            print(f\\""Existing chunks folder cleaned: {chunk_folder_path}\\"")\\r\\r        os.mkdir(chunk_folder_path)\\r\\r        print(f\\""Chunks folder created/recreated: {chunk_folder_path}\\"")\\r\\r        for file in files:\\r\\r            clip = VideoFileClip(file)\\r\\r            chunked_audio_file_name = os.path.join(folder_path, os.path.basename(file).replace(\\"".mp4\\"", \\"".wav\\""))\\r\\r            clip.audio.write_audiofile(chunked_audio_file_name, bitrate=\\""32k\\"")\\r\\r            clip.audio.close()\\r\\r            clip.close()\\r\\r\\r\\r            f = AudioSegment.from_wav(chunked_audio_file_name)\\r\\r            j = 0\\r\\r            print('Chunking file: ' + chunked_audio_file_name)\\r\\r            while len(f[:]) >= chunk_size * 1000:\\r\\r                chunk = f[:chunk_size * 1000]\\r\\r                chunk_file_path = os.path.join(chunk_folder_path, os.path.basename(chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j)))\\r\\r                chunk.export(chunk_file_path, format='wav')\\r\\r                print('Chunked file stored as ' + chunk_file_path)\\r\\r                f = f[chunk_size * 1000:]\\r\\r                j += 1\\r\\r\\r\\r            if 0 < len(f[:]) and len(f[:]) < chunk_size * 1000:\\r\\r                silent = AudioSegment.silent(duration=chunk_size * 1000)\\r\\r                paddedData = silent.overlay(f, position=0, times=1)\\r\\r                padded_file_path = os.path.join(chunk_folder_path, os.path.basename(chunked_audio_file_name[:-4] + '_{:04d}.wav'.format(j)))\\r\\r                paddedData.export(padded_file_path, format='wav')\\r\\r                print('Padded file stored as ' + padded_file_path)\\r\\r        print('Chunker executed successfully!')\\r        overall_transcribe=audio_transcriber(chunk_folder_path) \\r        result=folder_path,overall_transcribe\\r        return result\\r\\r\\r\\r    except Exception as e:\\r\\r        print('Exception in Chunker as: ',e)\\r\\r        raise e\\r\\r\\r\\r       \\r\\r\\r       ""]},{""FunctionName"":""process_video"",""requirements"":"""",""params"":[],""script"":[""import io\\rimport os\\rimport shutil\\rimport cv2\\rimport re\\rimport glob\\rimport base64\\rimport numpy as np\\rimport openai\\rimport json\\rimport base64\\rimport tempfile\\rfrom docx.oxml.ns import qn\\rfrom docx import Document\\rimport requests\\rfrom docx.shared import Inches\\rfrom langchain.chat_models import AzureChatOpenAI\\rfrom langchain_core.prompts.chat import ChatPromptTemplate\\rfrom skimage.metrics import structural_similarity as ssim\\rfrom pydub import AudioSegment\\rimport time\\rfrom moviepy.editor import VideoFileClip\\rfrom docx.oxml import OxmlElement\\rfrom docx.shared import Pt\\rfrom docx.oxml.ns import qn\\rfrom docx.shared import Inches\\rimport docx2python as docx2python\\rfrom docx2python.iterators import iter_paragraphs\\rfrom docx.shared import Pt\\rimport base64\\r\\rdef process_video(temp_file_paths_param, seconds_per_frame=2,similarity_threshold=0.95):\\r    '''\\r    This function will divide the Video into frames and extract audio from the video\\r    Args:\\r        uploaded_file: str\\r        folder_path: str\\r        seconds_per_frame : int\\r    return: str        \\r    '''\\r    try:\\r        print('inside process_video')\\r        temp_file_paths=temp_file_paths_param\\r        print(temp_file_paths,\\""temp_file_path\\"")\\r        files_list = [os.path.join(temp_file_paths, file) for file in os.listdir(temp_file_paths)]\\r        print(files_list)\\r        path = os.getcwd()\\r        folder_path=os.path.join(path,\\""Images\\"") \\r        if os.path.exists(folder_path):\\r            # Remove the entire directory and its contents\\r            shutil.rmtree(folder_path)\\r            print(f\\""Existing folder cleaned: {folder_path}\\"")\\r        # Create the folder (it's either new or has been removed)\\r        os.mkdir(folder_path)\\r        curr_frame = 0\\r        i = 0\\r        prev_frame = None\\r        for temp_file_path in files_list:\\r            video = cv2.VideoCapture(temp_file_path)\\r            total_frames = int(video.get(cv2.CAP_PROP_FRAME_COUNT))\\r            print(f\\""Total frames: {total_frames}\\"")\\r            fps = video.get(cv2.CAP_PROP_FPS)\\r            print(f\\""FPS: {fps}\\"")\\r            frames_to_skip = int(fps * seconds_per_frame)\\r            print(f\\""Frames to skip: {frames_to_skip}\\"")\\r            \\r            while curr_frame < total_frames - 1:\\r                video.set(cv2.CAP_PROP_POS_FRAMES, curr_frame)\\r                success, frame = video.read()\\r                if not success:\\r                    break\\r                # Convert frame to grayscale for comparison\\r                gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\\r                # Check if the frame is empty (all black or all white)\\r                if np.mean(gray_frame) < 5 or np.mean(gray_frame) > 250:\\r                    curr_frame += frames_to_skip\\r                    continue\\r                # Compare with previous frame if it exists\\r                if prev_frame is not None:\\r                    similarity = ssim(prev_frame, gray_frame)\\r                    if similarity > similarity_threshold:\\r                        curr_frame += frames_to_skip\\r                        continue\\r                # If we've made it here, the frame is unique enough to keep\\r                _, buffer = cv2.imencode(\\"".jpg\\"", frame)\\r                image_path = os.path.join(folder_path, f\\""image_{i}.jpg\\"")\\r                cv2.imwrite(image_path, frame)\\r                prev_frame = gray_frame\\r                i += 1\\r                curr_frame += frames_to_skip\\r            video.release()\\r            result=files_list,folder_path\\r        return result    \\r    except Exception as e:\\r        print(f\\""An error occurred: {str(e)}\\"")\\r        return e\\r    ""]},{""FunctionName"":""FetchMultipleData"",""requirements"":"""",""params"":[],""script"":[""\\r\\rimport logging\\rimport boto3\\rimport os\\r\\r\\rdef get_s3_details(connections_param):\\r    connectiondetails = json.loads(connections_param['connectionDetails'])\\r    session = boto3.session.Session()\\r    try:\\r        s3 = session.client('s3',endpoint_url=connectiondetails['url'],\\r        \\r        aws_access_key_id=connectiondetails['accessKey'],\\r    \\r        aws_secret_access_key=connectiondetails['secretKey'],\\r    \\r        verify=False)\\r        \\r        return s3\\r    \\r    except Exception as e:\\r        print(e)\\r    \\r    \\r\\rdef FetchMultipleData(connections_param):\\r    # print(\\""inside FetchMultipleData\\"")\\r    # print(connections_param)\\r    s3 = get_s3_details(connections_param)\\r    # print('Before bucket_object')\\r    videopath=os.environ.get(\\""videoPath\\"")\\r    # print(os.environ)\\r    print(videopath,\\""video path from env variables\\"")\\r    \\r    # print(folder_path_param, \\""folder path param\\"")\\r    # print(bucket_name_param, \\""bucket param\\"")\\r    \\r    # print(folder_path_param, \\""folder path\\"")\\r    # videos = [os.path.basename(file_path) for file_path in videopath]\\r    videos = videopath.split(\\"",\\"")\\r    print(videos,\\""videos\\"")\\r   \\r    # videos = os.environ.get(\\""videoPath\\"").split(\\""/\\"")[-1]\\r    # print(videos,\\""videos\\"")\\r    # videos_list=[]\\r    # videos_list.append(videos)\\r    \\r    if videos:\\r        for video in videos:\\r            print(\\""video\\"", video)\\r            bucket_name_param_parts = video.split(\\""/\\"")\\r            bucket_name_param = bucket_name_param_parts[0]\\r            folder_path_param = \\""/\\"".join(bucket_name_param_parts[1:-1])\\r            file_name = bucket_name_param_parts[-1]\\r            print(file_name, \\""file_name\\"")\\r            key = folder_path_param + '/' + file_name if folder_path_param else file_name\\r            print(\\""key---\\"", key, \\""bucket_name_param---\\"", bucket_name_param)\\r    \\r            # Get the current working directory\\r            local_path = os.getcwd()\\r            # Define the directory name\\r            directory_name = 'video_download/'\\r            directory_path = os.path.join(local_path, directory_name)\\r    \\r            # Create the directory if it doesn't exist\\r            os.makedirs(directory_path, exist_ok=True)\\r    \\r            print(f\\""Directory '{directory_path}' is ready.\\"")\\r    \\r            file_path = os.path.join(directory_path, file_name)\\r            print(bucket_name_param, \\""key\\"", key)\\r            try:\\r                s3.download_file(bucket_name_param, key, file_path)\\r                print(f\\""Downloaded {key} to {file_path}\\"")\\r            except PermissionError as e:\\r                print(f\\""PermissionError: {e} - Skipping {key}\\"")\\r            except Exception as e:\\r                print(f\\""Error: {e} - Skipping {key}\\"")\\r    print(directory_path)\\r    print(os.listdir(directory_path))\\r    return directory_path\\r\\r\\r""]},{""connections"":{""lastmodifiedby"":""admin"",""lastmodifieddate"":""2024-09-03 09:51:32"",""alias"":""Nutanix"",""id"":24,""name"":""AIPNTNXH56520"",""description"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""salt"":null,""organization"":""leo1311"",""dshashcode"":null,""activetime"":""2024-09-03 09:51:32"",""category"":""S3"",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""interfacetype"":null,""fordataset"":false,""forruntime"":false,""foradapter"":false,""formodel"":false,""forpromptprovider"":false}},{""connections"":{""lastmodifieddate"":""2024-10-10 04:45:44.0"",""foradapter"":false,""formodel"":false,""description"":"""",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""forruntime"":false,""lastmodifiedby"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""forpromptprovider"":false,""activetime"":""2024-10-10 04:45:43.727863"",""fordataset"":false,""organization"":""leo1311"",""name"":""AIPNTNXH56520"",""alias"":""Nutanix"",""id"":854,""category"":""S3""}}]},{""id"":""UpBuX"",""alias"":""Connection"",""name"":""Connection"",""classname"":""Connection"",""category"":""Connection"",""attributes"":{""connections"":{""lastmodifieddate"":""2024-10-10 04:45:44.0"",""foradapter"":false,""formodel"":false,""description"":"""",""extras"":""{\\""apispec\\"":{},\\""apispectemplate\\"":{}}"",""forruntime"":false,""lastmodifiedby"":""admin"",""type"":""S3"",""connectionDetails"":""{\\""secretKey\\"":\\""g2d4nVxehagjOkCkZ4WrCMOzrfTrFiI0\\"",\\""accessKey\\"":\\""GISeSU7xd6WBnXrU-QbffBee7WsCxaE2\\"",\\""Region\\"":\\""us-east-1\\"",\\""url\\"":\\""https://10.82.53.110\\""}"",""forpromptprovider"":false,""activetime"":""2024-10-10 04:45:43.727863"",""fordataset"":false,""organization"":""leo1311"",""name"":""AIPNTNXH56520"",""alias"":""Nutanix"",""id"":854,""category"":""S3""}},""position_x"":""543"",""position_y"":""147"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""kYLPo"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{""connections"":""""},""codeGeneration"":{""requirements"":[],""imports"":[],""script"":""def Connection_<id>(connections_param={}):\\n    \\n    return connections_param\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n""},""context"":[]}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""}],""environment"":[{""name"":""api_type"",""value"":""azure""},{""name"":""azure_endpoint"",""value"":""https://azureft.openai.azure.com/""},{""name"":""api_key"",""value"":""85b968a4b5c84d849c99661788c2c1ed""},{""name"":""access_token"",""value"":""aec127c2-c984-33f6-9a3a-355xd1dof097""},{""name"":""transcriber_url"",""value"":""https://api-aicloud.ad.infosys.com/v1/speech/transcribe/models/whisper-m/versions/1/infer""},{""name"":""path"",""value"":""document-generation/SalesForce-videos""},{""name"":""template"",""value"":"" BRD Template2.docx""},{""name"":""path1"",""value"":""document-generation/templates""},{""name"":""DocumentName"",""value"":""GeneratedBRD""},{""name"":""DECRYPTION_KEY"",""value"":""leap123""}],""default_runtime"":""{\\""dsAlias\\"":\\""LocalCluster\\"",\\""dsName\\"":\\""LEALCLCL12132\\"",\\""type\\"":\\""REMOTE\\""}""}","admin","DocumentGenerate","2024-11-05 08:08:27","LEODCMNT16459","leo1311","DragNDropLite","241",NULL,"pipeline","","\0","0"
"Anonymous","2024-10-30 04:27:29.748000","\0","Tickets Search Azure Flask",NULL,"{""elements"":[{""id"":""WGaRC"",""alias"":""Addkernel"",""name"":""Addkernel"",""classname"":""Addkernel"",""category"":""semantic kernel"",""attributes"":{},""position_x"":""48"",""position_y"":""125"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""XzhWs"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[],""outputEndpoints"":[""out""],""formats"":{},""context"":[],""codeGeneration"":{""imports"":[""from semantic_kernel import Kernel"",""from semantic_kernel.core_skills import FileIOSkill, MathSkill, TextSkill, TimeSkill, ConversationSummarySkill, TextMemorySkill,WebSearchEngineSkill"",""import openai""],""requirements"":[""semantic-kernel==0.3.14.dev0"",""azure-search-documents==11.4.0b8"",""openai==0.27.10"",""azure-common==1.1.28"",""azure-core==1.29.4""],""script"":""openai.proxy = {\\r\\n    'http' : 'http://blrproxy.ad.infosys.com:80',\\r\\n    'https' : 'http://blrproxy.ad.infosys.com:80'\\r\\n}\\r\\n\\r\\ndef Addkernel():\\r\\n    kernel=Kernel()\\r\\n    dataobj={}\\r\\n    dataobj['kernel']=kernel\\r\\n    return dataobj\\n""}},{""id"":""tUaOp"",""alias"":""Qdrant Vector Store"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""StoreEmbeddingsInQdrant"",""requirements"":"""",""params"":[{""name"":""collection_name"",""value"":""tickets_leap2"",""type"":""Text"",""alias"":""tickets_leap2"",""index"":""1""},{""name"":""url"",""value"":""http://10.66.15.100:30312/"",""type"":""Text"",""alias"":""http://10.66.15.100:30312/"",""index"":""2""},{""name"":""counter"",""value"":""1"",""type"":""Text"",""alias"":""1"",""index"":""3""},{""name"":""total_rows"",""value"":""1000"",""type"":""Text"",""alias"":""1000"",""index"":""4""},{""name"":""new_collection"",""value"":""true"",""type"":""Text"",""alias"":""true"",""index"":""5""}],""script"":[""from semantic_kernel.connectors.memory.qdrant import QdrantMemoryStore\\rimport asyncio\\rdef StoreEmbeddingsInQdrant(dataobj,json_string,collection_name_param,url_param,counter_param,total_rows_param,new_collection_param):\\r    async def StoreEmbeddings(dataobj,json_string,collection_name_param,url_param,counter_param,total_rows_param,new_collection_param):\\r        kernel=dataobj[\\""kernel\\""]\\r        t_number='number'\\r        t_shortDescription='shortdescription'\\r        t_Description='description'\\r        # t_Category='category'\\r        t_OpenedDate='createdDate'\\r        # t_AssignedTo='assignedto'\\r        qdrant_store=QdrantMemoryStore(vector_size=1536,url=url_param,port=30312)\\r        if new_collection_param=='true':\\r        \\r            await qdrant_store.create_collection_async(collection_name_param)\\r        \\r        kernel.register_memory_store(qdrant_store)\\r        c=1\\r        logger.info(\\""This is counter\\"",c)\\r        for emp_data in json_string:\\r            # print(emp_data)\\r            if c>total_rows_param:\\r                break\\r            elif c>=counter_param:\\r                print(emp_data)\\r                logger.info(\\""This is counter\\"",c)\\r                print(\\""This is counter\\"",c)\\r                try:\\r                    await kernel.memory.save_information_async(collection_name_param, id=emp_data[t_number], text=str({ \\""shortDesription: \\""+emp_data[t_shortDescription],\\""Description: \\""+str(emp_data[t_Description]),\\""Opened Date: \\""+str(emp_data[t_OpenedDate])}))\\r                    c+=1\\r                except Exception as e:\\r                    logger.info(\\""Error in embedding generation of \\"",f\\""{emp_data['number']}+' - ' +{e}\\"")\\r                    c+=1\\r            else:\\r                c+=1\\r            \\r    asyncio.run(StoreEmbeddings(dataobj,json_string,collection_name_param,url_param,counter_param,total_rows_param,new_collection_param))""]},""position_x"":""804"",""position_y"":""125"",""connectors"":[{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""XzhWs"",""elementPosition"":""RightMiddle""},{""type"":""target"",""endpoint"":""dataset2"",""position"":""TopCenter"",""elementId"":""hqApS"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[{""EMBEDDING_MODEL_DEPLOYMENT_NAME"":""openaiada2"",""AZURE_OPENAI_ENDPOINT"":""https://azureft.openai.azure.com/""},{},{""FunctionName"":""DataPreProcessing"",""requirements"":"""",""params"":"""",""script"":[""import pandas as pd\\rimport json\\rimport sqlite3\\rimport os\\rimport mysql.connector\\rdef DataPreProcessing( metadata):\\r    print(\\""this is dataset\\"",metadata)\\r    # if metadata['dataset_type'] not in ['MYSQL','POSTGRESQL','MSSQL']:\\r    if 'MYSQL' not in ['MYSQL','POSTGRESQL','MSSQL']:\\r        file=metadata['source']\\r        extension = os.path.splitext(file)[1].lower()\\r        if extension=='.xlsx':\\r            emp_data=pd.read_excel(file)\\r        elif extension=='.csv':\\r            emp_data=pd.read_csv(file)\\r        else:\\r            return \\""File Type Not Supported\\""\\r        new_data=pd.DataFrame(emp_data)\\r        filtered_data=new_data.dropna(subset=['shortdescription'])\\r        filtered_data=new_data.sort_values(by=[\\""createdDate\\""],ascending=False)\\r        \\r        json_string = filtered_data.to_json(orient='records',date_format='iso')\\r        json_string= json.loads(json_string)\\r        return json_string\\r    else:\\r        # db_user_name = metadata['connection_details']['db_user_name'] \\r        # db_password = metadata['connection_details']['db_password'] \\r        # host = metadata['connection_details']['db_host'] \\r        # port = metadata['connection_details']['db_port'] \\r        # database = metadata['connection_details']['database'] \\r        # sql_query = metadata['connection_details']['query'] \\r        \\r        db_config = {\\r            \\""host\\"": \\""10.191.31.130\\"",\\r            \\""port\\"": \\""3307\\"",\\r            \\""user\\"": \\""leapadm\\"",\\r            \\""password\\"": os.environ.get('app_ts_db_password'),\\r            \\""database\\"": \\""leapmaster_ref_data_7000\\""\\r        }\\r        \\r        connection = mysql.connector.connect(**db_config)\\r\\r        # connection.close()\\r            \\r        try:\\r            import pandas as pd\\r        \\r            sql_query = pd.read_sql_query(\\r                \\""\\""\\""\\r                SELECT number, shortdescription , description,createdDate FROM leo1311_tickets WHERE TYPE='incident' ORDER BY createdDate DESC LIMIT 4000\\r                \\""\\""\\"",\\r                connection\\r            )\\r            df = pd.DataFrame(sql_query)\\r            logger.info(\\""data extracted successfully!....\\"")\\r            \\r            filtered_data=df.dropna(subset=['shortdescription'])\\r            # filtered_data=df.sort_values(by=[\\""createdDate\\""],ascending=False)\\r            \\r            json_string = filtered_data.to_json(orient='records',date_format='iso')\\r            json_string= json.loads(json_string)\\r            return json_string\\r        \\r        except sqlite3.connector.Error as err:\\r            logger.info('There is some error whiling extractiong data as:',err)\\r            raise err\\r        finally:\\r            \\r            connection.close()\\r    ""]},{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":"""",""script"":[""import boto3\\r\\rfrom typing import List, Optional\\r\\rimport logging as logger \\r\\rimport pathlib\\r\\rimport os\\r\\rimport json\\r\\rimport shutil\\r\\rimport requests\\r\\rimport boto3\\r\\rimport json\\r\\rfrom typing import List, Optional, Union, Dict, Sequence, Any\\r\\rfrom urllib.parse import quote_plus\\r\\rfrom leaputils import Security\\r\\rimport sqlite3\\r\\r# !pip install unstructured\\r\\r# !pip install \\""unstructured[pdf]\\""\\r\\ros.environ['DECRYPTION_KEY']='leap$123##'\\r\\rclass DatasetExtractorConfig:\\r\\r    \\""\\""\\""\\r\\r    DatasetExtractorConfig class to get dataset config.\\r\\r    Args:\\r\\r        config (dict): Dataset config\\r\\r    \\""\\""\\""\\r\\r    def __init__(self, config: Optional[Any]={}) -> None:   \\r\\r        self.local_path: str = config.get('local_path','RAG_data')            \\r\\r        self.query: str = config.get('query',None)   \\r\\r        self.index_search: str = config.get('index_search', 'Default_Index')              \\r\\rclass DatasetExtractor:                            \\r\\r    \\""\\""\\""\\r\\r    Extract dataset. Currently We support S3 datastore.        \\r\\r    Args:\\r\\r        dataset_id (str): Dataset id to get dataset config  \\r\\r        local_path (str): Local file path to store file downloaded from data store,   \\r\\r        index_search (str): To store embedding at particular index          \\r\\r    Returns:\\r\\r        if dataset_type is S3: file_path (str): Local file path\\r\\r        if dataset_type is MYSQL, POSTGRESQL, MSSQL: metadata (dict): metadata\\r\\r    \\""\\""\\""\\r\\r    def __init__(self, dataset_id:str, organization:str) -> None:\\r\\r        self.organization = organization\\r\\r        self.dataset_id = dataset_id        \\r\\r    def get_data(self, config) -> str:         \\r\\r        try:\\r\\r            # get dataset config dict\\r\\r            datasetcofig = self.getdatasetconfig(dataset_id=self.dataset_id, organization=self.organization)              \\r\\r            view = datasetcofig['views']      \\r\\r            dataset_type = datasetcofig['datasource']['type']        \\r\\r            metadata = {\\r\\r                'dataset_id': self.dataset_id,\\r\\r                'organization': self.organization,\\r\\r                'dataset_type': dataset_type,                   \\r\\r            }\\r\\r            connection_details = dict()\\r\\r            if dataset_type == 'S3':  \\r\\r                if view == 'Folder View':\\r\\r                    connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r                    s3_access_key = connection_dict['accessKey']\\r\\r                    s3_secret_key = connection_dict['secretKey']\\r\\r                    s3_end_point_url = connection_dict['url']\\r\\r                    attribute = json.loads(datasetcofig['attributes'])\\r\\r                    bucket = attribute['bucket']    \\r\\r                    path = attribute['path'] \\r\\r                    \\r\\r                    local_path = '/'+config.local_path+'_'+self.dataset_id\\r\\r                    count = 0\\r\\r                    flag = False\\r\\r                    for i in os.listdir(\\""/\\""):\\r\\r                        if i.find(local_path[1:])==0:\\r\\r                            flag = True\\r\\r                            count += 1\\r\\r                    if flag:\\r\\r                        local_path = local_path+(count*'_')\\r\\r                    file_path = self.s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = path, local_path = local_path)\\r\\r                    metadata['source'] = file_path \\r\\r                    return metadata\\r\\r                else:                \\r\\r                    connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r                    s3_access_key = connection_dict['accessKey']\\r\\r                    s3_secret_key = connection_dict['secretKey']\\r\\r                    s3_end_point_url = connection_dict['url'] \\r\\r                    attribute = json.loads(datasetcofig['attributes'])\\r\\r                    bucket = attribute['bucket']               \\r\\r                    path = attribute['path']   \\r\\r                    obj_key = attribute['object']  \\r\\r                    key = f'{path}/{obj_key}'                \\r\\r                    local_path = '/'+config.local_path+'_'+self.dataset_id                           \\r\\r                    count = 0\\r\\r                    flag = False\\r\\r                    for i in os.listdir(\\""/\\""):\\r\\r                        if i.find(local_path[1:])==0:\\r\\r                            flag = True\\r\\r                            count += 1\\r\\r                    if flag:\\r\\r                        local_path = local_path+(count*'_')                                 \\r\\r                    \\r\\r                    file_path = self.s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = key, local_path = local_path)\\r\\r                    metadata['source'] = file_path                \\r\\r                    return metadata\\r\\r            elif dataset_type == 'MYSQL':   \\r\\r                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\r                attributes = json.loads(datasetcofig['attributes'])            \\r\\r                db_user_name = connection_dict['userName']           \\r\\r                db_url = connection_dict['url']\\r\\r                db_password = connection_dict['password']   \\r\\r                salt = datasetcofig['datasource']['salt']\\r\\r                sql_query = attributes['Query'] \\r\\r                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query,prefix='jdbc:mysql://')            \\r\\r                self.store_connection_details(connection_details, connection_string, config.index_search, metadata)\\r                \\r                metadata['connection_details'] = connection_details\\r                return metadata            \\r\\r            elif dataset_type == 'POSTGRESQL':\\r\\r                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\r                attributes = json.loads(datasetcofig['attributes'])            \\r\\r                db_user_name = connection_dict['userName']           \\r\\r                db_url = connection_dict['url']\\r\\r                db_password = connection_dict['password']   \\r\\r                salt = datasetcofig['datasource']['salt']\\r\\r                sql_query = attributes['Query'] \\r\\r                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query, prefix='jdbc:postgresql://')            \\r\\r                self.store_connection_details(connection_details, connection_string, config.index_search)\\r\\r                return metadata         \\r\\r            elif dataset_type == 'MSSQL':\\r\\r                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\r                attributes = json.loads(datasetcofig['attributes'])            \\r\\r                db_user_name = connection_dict['userName']           \\r\\r                db_url = connection_dict['url']\\r\\r                db_password = connection_dict['password']   \\r\\r                salt = datasetcofig['datasource']['salt']\\r\\r                sql_query = attributes['Query'] \\r\\r                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query,prefix='jdbc:sqlserver://')            \\r\\r                self.store_connection_details(connection_details, connection_string, config.index_search)\\r\\r                return metadata \\r\\r        except Exception as e:\\r\\r            logger.info('Exception in DatasetExtractor as: ',e)\\r\\r            return e\\r\\r    #helper functions\\r\\r    def getdatasetconfig(self, dataset_id:str, organization:str):\\r\\r        '''\\r\\r        call ai-plat api to get dataset config\\r\\r        return {dataset_config}\\r\\r        '''  \\r\\r        try:                  \\r\\r            # os.environ[\\""API_URL\\""] = \\""https://infyaiplat.ad.infosys.com\\""          \\r\\r            api_referer = os.environ.get(\\""API_URL\\"")\\r\\r            url = f'{api_referer}/api/services/fetchDatasetDetails/{dataset_id}/{organization}'\\r\\r            logger.info(url)\\r\\r            headers = {\\r\\r            'access-token': os.environ.get('app_ts_access_token'),\\r\\r            'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B',\\r            'Project': '2'\\r\\r            }\\r\\r            response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r            dataset_config = json.loads(response.text)\\r\\r                        \\r\\r            return dataset_config\\r\\r        \\r\\r        except Exception as e:\\r\\r            logger.info('Exception in getdatasetconfig as: ', e)\\r\\r            raise e\\r\\r    def s3_download_data(self, end_point_url:str = '', access_key:str = '', secret_key:str = '', bucket:str = '', obj_key:str = '', local_path:str='/data'):\\r\\r        '''\\r\\r        download data from s3         \\r\\r        return local file path       \\r\\r        '''     \\r\\r        try:\\r\\r            s3_client = boto3.resource(service_name='s3',\\r\\r                        endpoint_url=end_point_url,\\r\\r                        aws_access_key_id=access_key,\\r\\r                        aws_secret_access_key=secret_key,\\r\\r                        verify=False)\\r\\r            \\r\\r            bucket_object = s3_client.Bucket(bucket)\\r\\r            object_save_path = ''\\r\\r            logger.info(bucket_object.objects.filter(Prefix=obj_key))        \\r\\r            if os.path.exists(local_path):\\r\\r                shutil.rmtree(local_path)\\r\\r            os.makedirs(local_path)\\r\\r            model_path = os.path.join(local_path)\\r\\r            for my_bucket_object in bucket_object.objects.filter(Prefix=obj_key):   \\r\\r                if my_bucket_object.key.endswith('/'):\\r\\r                    pass\\r\\r                else:                 \\r\\r                    object_save_path = (f\\""{model_path}/{pathlib.Path(my_bucket_object.key).name}\\"")\\r\\r                    bucket_object.download_file(my_bucket_object.key, object_save_path)\\r\\r            return local_path \\r\\r        except Exception as e:\\r\\r            logger.info('Exception in s3_download_data as: ', e)\\r\\r            raise e\\r\\r    def get_connection_details(self, db_user_name:str, db_password:str, db_url:str, salt:str, sql_query:str, prefix:str):\\r\\r        '''\\r\\r        Get connection string for the database.\\r\\r        Args:\\r\\r            db_user_name (str): Database user name.\\r\\r            db_password (str): Database password.\\r\\r            db_url (str): Database URL.\\r\\r            salt (str): Salt used to encrypt the password.\\r\\r            prefix (str): Protocol prefix.\\r\\r        Returns:\\r\\r            connection_details (dict): Dictionary containing connection string, user name, password, host, port, and database.           \\r\\r        '''\\r\\r        try:\\r\\r            connection_details = {}\\r\\r            # decrypt password\\r\\r            db_password = Security.decrypt(db_password,salt)\\r            if db_password.find('enc')>0:\\r                raise \\""Decryption Failed please give correct decryption key\\""\\r                exit()\\r\\r            # Remove protocol prefix and leading slash\\r\\r            stripped_url = db_url[len(prefix):]\\r\\r            # Split by components, assuming username and password are not present\\r\\r            host, port_database = stripped_url.split(\\""/\\"", 1)\\r\\r            # Extract host and port\\r\\r            host, port = host.split(\\"":\\"")\\r\\r            # Extract database\\r\\r            database = port_database.strip(\\""/\\"")\\r\\r            # Form connection string\\r\\r            connection_string = f'mysql://{db_user_name}:{quote_plus(db_password)}@{host}:{port}/{database}'\\r\\r            \\r\\r            connection_details['db_user_name'] = db_user_name\\r\\r            connection_details['db_password'] = db_password\\r\\r            connection_details['db_host'] = host\\r\\r            connection_details['db_port'] = port\\r\\r            connection_details['database'] = database\\r\\r            connection_details['query'] = sql_query\\r\\r            return connection_string, connection_details\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_connection_details as: ', e)\\r\\r            raise e\\r\\r    \\r\\r    def store_connection_details(self, connection_details:dict, connection_string:str, index_search:str, metadata:dict):         \\r\\r        try:\\r\\r            # Connect to the database or create it if it doesn't exist\\r\\r            root_dir = \\""/RAG_DB\\""\\r\\r            os.makedirs(root_dir, exist_ok=True)  # Create only if needed\\r\\r            root_path = os.path.abspath(root_dir)\\r\\r            path = os.path.join(root_path,'rag_database.db')\\r\\r            # path = os.path.join('../database','rag_database.db')\\r\\r            conn = sqlite3.connect(path) \\r\\r            # Create a cursor object to execute SQL commands\\r\\r            cursor = conn.cursor()\\r\\r            # Create a table (replace with your desired table name and columns)\\r\\r            cursor.execute('''\\r\\r            CREATE TABLE IF NOT EXISTS dataset_details (\\r\\r                id INTEGER PRIMARY KEY AUTOINCREMENT,\\r\\r                dataset_id TEXT NOT NULL,\\r\\r                organization TEXT NOT NULL,\\r\\r                connection_string TEXT NOT NULL,\\r\\r                connection_details JSON NOT NULL,\\r\\r                metadata JSON,\\r\\r                index_search TEXT NOT NULL\\r\\r            )\\r\\r            ''')\\r\\r            connection_details_json = json.dumps(connection_details)\\r\\r            metadata_json = json.dumps(metadata)\\r\\r            # Prepare SQL query with placeholders for values\\r\\r            sql = \\""INSERT INTO dataset_details (dataset_id, ORGANIZATION, connection_string, connection_details, metadata, index_search) VALUES (?, ?, ?, ?, ?, ?)\\""\\r\\r            # Data to be inserted (replace with your actual values)\\r\\r            values = (self.dataset_id, self.organization, connection_string, connection_details_json, metadata_json, index_search)\\r\\r            # Execute the query with prepared values\\r\\r            cursor.execute(sql, values)\\r\\r        \\r\\r            # Commit the changes to the database\\r\\r            conn.commit()\\r\\r            logger.info(\\""data inserted successfully!....\\"")                   \\r\\r        except sqlite3.connector.Error as e:\\r\\r            logger.info('Thre is some error whiling storing data as:',e)\\r\\r            raise e\\r\\r        finally:\\r\\r            # Close database connection properly\\r\\r            cursor.close()\\r\\r            conn.close()""]}],""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""\\n\\n""}},{""id"":""XzhWs"",""alias"":""AzureTextEmbeddingService"",""name"":""AzureTextEmbeddingService"",""classname"":""AzureTextEmbeddingService"",""category"":""semantic kernel"",""attributes"":{""EMBEDDING_MODEL_DEPLOYMENT_NAME"":""openaiada2"",""AZURE_OPENAI_ENDPOINT"":""https://azureft.openai.azure.com/""},""position_x"":""402"",""position_y"":""125"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""WGaRC"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""tUaOp"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{""EMBEDDING_MODEL_DEPLOYMENT_NAME"":""text"",""AZURE_OPENAI_ENDPOINT"":""text""},""context"":[{}],""codeGeneration"":{""imports"":[""from semantic_kernel.connectors.ai.open_ai import AzureTextEmbedding""],""requirements"":[],""script"":""def AzureTextEmbeddingService(dataobj,embedding_model_deployment_name_param,azure_openai_endpoint_param):\\n    azure_openai_api_key_param=os.environ.get(\\""app_azure_openai_api_key\\"",\\""\\"")\\n    kernel=dataobj['kernel']\\n    kernel.add_text_embedding_generation_service('ada', \\n    AzureTextEmbedding(embedding_model_deployment_name_param,azure_openai_endpoint_param,azure_openai_api_key_param))\\n    dataobj['kernel']=kernel\\n    return dataobj\\n\\n\\n\\n\\n""}},{""id"":""hqApS"",""alias"":""Data Pre-Processing"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""DataPreProcessing"",""requirements"":"""",""params"":"""",""script"":[""import pandas as pd\\rimport json\\rimport sqlite3\\rimport os\\rimport mysql.connector\\rdef DataPreProcessing( metadata):\\r    print(\\""this is dataset\\"",metadata)\\r    # if metadata['dataset_type'] not in ['MYSQL','POSTGRESQL','MSSQL']:\\r    if 'MYSQL' not in ['MYSQL','POSTGRESQL','MSSQL']:\\r        file=metadata['source']\\r        extension = os.path.splitext(file)[1].lower()\\r        if extension=='.xlsx':\\r            emp_data=pd.read_excel(file)\\r        elif extension=='.csv':\\r            emp_data=pd.read_csv(file)\\r        else:\\r            return \\""File Type Not Supported\\""\\r        new_data=pd.DataFrame(emp_data)\\r        filtered_data=new_data.dropna(subset=['shortdescription'])\\r        filtered_data=new_data.sort_values(by=[\\""createdDate\\""],ascending=False)\\r        \\r        json_string = filtered_data.to_json(orient='records',date_format='iso')\\r        json_string= json.loads(json_string)\\r        return json_string\\r    else:\\r        # db_user_name = metadata['connection_details']['db_user_name'] \\r        # db_password = metadata['connection_details']['db_password'] \\r        # host = metadata['connection_details']['db_host'] \\r        # port = metadata['connection_details']['db_port'] \\r        # database = metadata['connection_details']['database'] \\r        # sql_query = metadata['connection_details']['query'] \\r        \\r        db_config = {\\r            \\""host\\"": \\""10.191.31.130\\"",\\r            \\""port\\"": \\""3307\\"",\\r            \\""user\\"": \\""leapadm\\"",\\r            \\""password\\"": os.environ.get('app_ts_db_password'),\\r            \\""database\\"": \\""leapmaster_ref_data_7000\\""\\r        }\\r        \\r        connection = mysql.connector.connect(**db_config)\\r\\r        # connection.close()\\r            \\r        try:\\r            import pandas as pd\\r        \\r            sql_query = pd.read_sql_query(\\r                \\""\\""\\""\\r                SELECT number, shortdescription , description,createdDate FROM leo1311_tickets WHERE TYPE='incident' ORDER BY createdDate DESC LIMIT 4000\\r                \\""\\""\\"",\\r                connection\\r            )\\r            df = pd.DataFrame(sql_query)\\r            logger.info(\\""data extracted successfully!....\\"")\\r            \\r            filtered_data=df.dropna(subset=['shortdescription'])\\r            # filtered_data=df.sort_values(by=[\\""createdDate\\""],ascending=False)\\r            \\r            json_string = filtered_data.to_json(orient='records',date_format='iso')\\r            json_string= json.loads(json_string)\\r            return json_string\\r        \\r        except sqlite3.connector.Error as err:\\r            logger.info('There is some error whiling extractiong data as:',err)\\r            raise err\\r        finally:\\r            \\r            connection.close()\\r    ""]},""position_x"":""398"",""position_y"":""1"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""tUaOp"",""elementPosition"":""TopCenter""},{""type"":""target"",""endpoint"":""dataset1"",""position"":""LeftMiddle"",""elementId"":""eHcvm"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":"""",""script"":[""import boto3\\r\\rfrom typing import List, Optional\\r\\rimport logging as logger \\r\\rimport pathlib\\r\\rimport os\\r\\rimport json\\r\\rimport shutil\\r\\rimport requests\\r\\rimport boto3\\r\\rimport json\\r\\rfrom typing import List, Optional, Union, Dict, Sequence, Any\\r\\rfrom urllib.parse import quote_plus\\r\\rfrom leaputils import Security\\r\\rimport sqlite3\\r\\r# !pip install unstructured\\r\\r# !pip install \\""unstructured[pdf]\\""\\r\\ros.environ['DECRYPTION_KEY']='leap$123##'\\r\\rclass DatasetExtractorConfig:\\r\\r    \\""\\""\\""\\r\\r    DatasetExtractorConfig class to get dataset config.\\r\\r    Args:\\r\\r        config (dict): Dataset config\\r\\r    \\""\\""\\""\\r\\r    def __init__(self, config: Optional[Any]={}) -> None:   \\r\\r        self.local_path: str = config.get('local_path','RAG_data')            \\r\\r        self.query: str = config.get('query',None)   \\r\\r        self.index_search: str = config.get('index_search', 'Default_Index')              \\r\\rclass DatasetExtractor:                            \\r\\r    \\""\\""\\""\\r\\r    Extract dataset. Currently We support S3 datastore.        \\r\\r    Args:\\r\\r        dataset_id (str): Dataset id to get dataset config  \\r\\r        local_path (str): Local file path to store file downloaded from data store,   \\r\\r        index_search (str): To store embedding at particular index          \\r\\r    Returns:\\r\\r        if dataset_type is S3: file_path (str): Local file path\\r\\r        if dataset_type is MYSQL, POSTGRESQL, MSSQL: metadata (dict): metadata\\r\\r    \\""\\""\\""\\r\\r    def __init__(self, dataset_id:str, organization:str) -> None:\\r\\r        self.organization = organization\\r\\r        self.dataset_id = dataset_id        \\r\\r    def get_data(self, config) -> str:         \\r\\r        try:\\r\\r            # get dataset config dict\\r\\r            datasetcofig = self.getdatasetconfig(dataset_id=self.dataset_id, organization=self.organization)              \\r\\r            view = datasetcofig['views']      \\r\\r            dataset_type = datasetcofig['datasource']['type']        \\r\\r            metadata = {\\r\\r                'dataset_id': self.dataset_id,\\r\\r                'organization': self.organization,\\r\\r                'dataset_type': dataset_type,                   \\r\\r            }\\r\\r            connection_details = dict()\\r\\r            if dataset_type == 'S3':  \\r\\r                if view == 'Folder View':\\r\\r                    connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r                    s3_access_key = connection_dict['accessKey']\\r\\r                    s3_secret_key = connection_dict['secretKey']\\r\\r                    s3_end_point_url = connection_dict['url']\\r\\r                    attribute = json.loads(datasetcofig['attributes'])\\r\\r                    bucket = attribute['bucket']    \\r\\r                    path = attribute['path'] \\r\\r                    \\r\\r                    local_path = '/'+config.local_path+'_'+self.dataset_id\\r\\r                    count = 0\\r\\r                    flag = False\\r\\r                    for i in os.listdir(\\""/\\""):\\r\\r                        if i.find(local_path[1:])==0:\\r\\r                            flag = True\\r\\r                            count += 1\\r\\r                    if flag:\\r\\r                        local_path = local_path+(count*'_')\\r\\r                    file_path = self.s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = path, local_path = local_path)\\r\\r                    metadata['source'] = file_path \\r\\r                    return metadata\\r\\r                else:                \\r\\r                    connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r                    s3_access_key = connection_dict['accessKey']\\r\\r                    s3_secret_key = connection_dict['secretKey']\\r\\r                    s3_end_point_url = connection_dict['url'] \\r\\r                    attribute = json.loads(datasetcofig['attributes'])\\r\\r                    bucket = attribute['bucket']               \\r\\r                    path = attribute['path']   \\r\\r                    obj_key = attribute['object']  \\r\\r                    key = f'{path}/{obj_key}'                \\r\\r                    local_path = '/'+config.local_path+'_'+self.dataset_id                           \\r\\r                    count = 0\\r\\r                    flag = False\\r\\r                    for i in os.listdir(\\""/\\""):\\r\\r                        if i.find(local_path[1:])==0:\\r\\r                            flag = True\\r\\r                            count += 1\\r\\r                    if flag:\\r\\r                        local_path = local_path+(count*'_')                                 \\r\\r                    \\r\\r                    file_path = self.s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = key, local_path = local_path)\\r\\r                    metadata['source'] = file_path                \\r\\r                    return metadata\\r\\r            elif dataset_type == 'MYSQL':   \\r\\r                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\r                attributes = json.loads(datasetcofig['attributes'])            \\r\\r                db_user_name = connection_dict['userName']           \\r\\r                db_url = connection_dict['url']\\r\\r                db_password = connection_dict['password']   \\r\\r                salt = datasetcofig['datasource']['salt']\\r\\r                sql_query = attributes['Query'] \\r\\r                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query,prefix='jdbc:mysql://')            \\r\\r                self.store_connection_details(connection_details, connection_string, config.index_search, metadata)\\r                \\r                metadata['connection_details'] = connection_details\\r                return metadata            \\r\\r            elif dataset_type == 'POSTGRESQL':\\r\\r                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\r                attributes = json.loads(datasetcofig['attributes'])            \\r\\r                db_user_name = connection_dict['userName']           \\r\\r                db_url = connection_dict['url']\\r\\r                db_password = connection_dict['password']   \\r\\r                salt = datasetcofig['datasource']['salt']\\r\\r                sql_query = attributes['Query'] \\r\\r                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query, prefix='jdbc:postgresql://')            \\r\\r                self.store_connection_details(connection_details, connection_string, config.index_search)\\r\\r                return metadata         \\r\\r            elif dataset_type == 'MSSQL':\\r\\r                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\r                attributes = json.loads(datasetcofig['attributes'])            \\r\\r                db_user_name = connection_dict['userName']           \\r\\r                db_url = connection_dict['url']\\r\\r                db_password = connection_dict['password']   \\r\\r                salt = datasetcofig['datasource']['salt']\\r\\r                sql_query = attributes['Query'] \\r\\r                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query,prefix='jdbc:sqlserver://')            \\r\\r                self.store_connection_details(connection_details, connection_string, config.index_search)\\r\\r                return metadata \\r\\r        except Exception as e:\\r\\r            logger.info('Exception in DatasetExtractor as: ',e)\\r\\r            return e\\r\\r    #helper functions\\r\\r    def getdatasetconfig(self, dataset_id:str, organization:str):\\r\\r        '''\\r\\r        call ai-plat api to get dataset config\\r\\r        return {dataset_config}\\r\\r        '''  \\r\\r        try:                  \\r\\r            # os.environ[\\""API_URL\\""] = \\""https://infyaiplat.ad.infosys.com\\""          \\r\\r            api_referer = os.environ.get(\\""API_URL\\"")\\r\\r            url = f'{api_referer}/api/services/fetchDatasetDetails/{dataset_id}/{organization}'\\r\\r            logger.info(url)\\r\\r            headers = {\\r\\r            'access-token': os.environ.get('app_ts_access_token'),\\r\\r            'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B',\\r            'Project': '2'\\r\\r            }\\r\\r            response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r            dataset_config = json.loads(response.text)\\r\\r                        \\r\\r            return dataset_config\\r\\r        \\r\\r        except Exception as e:\\r\\r            logger.info('Exception in getdatasetconfig as: ', e)\\r\\r            raise e\\r\\r    def s3_download_data(self, end_point_url:str = '', access_key:str = '', secret_key:str = '', bucket:str = '', obj_key:str = '', local_path:str='/data'):\\r\\r        '''\\r\\r        download data from s3         \\r\\r        return local file path       \\r\\r        '''     \\r\\r        try:\\r\\r            s3_client = boto3.resource(service_name='s3',\\r\\r                        endpoint_url=end_point_url,\\r\\r                        aws_access_key_id=access_key,\\r\\r                        aws_secret_access_key=secret_key,\\r\\r                        verify=False)\\r\\r            \\r\\r            bucket_object = s3_client.Bucket(bucket)\\r\\r            object_save_path = ''\\r\\r            logger.info(bucket_object.objects.filter(Prefix=obj_key))        \\r\\r            if os.path.exists(local_path):\\r\\r                shutil.rmtree(local_path)\\r\\r            os.makedirs(local_path)\\r\\r            model_path = os.path.join(local_path)\\r\\r            for my_bucket_object in bucket_object.objects.filter(Prefix=obj_key):   \\r\\r                if my_bucket_object.key.endswith('/'):\\r\\r                    pass\\r\\r                else:                 \\r\\r                    object_save_path = (f\\""{model_path}/{pathlib.Path(my_bucket_object.key).name}\\"")\\r\\r                    bucket_object.download_file(my_bucket_object.key, object_save_path)\\r\\r            return local_path \\r\\r        except Exception as e:\\r\\r            logger.info('Exception in s3_download_data as: ', e)\\r\\r            raise e\\r\\r    def get_connection_details(self, db_user_name:str, db_password:str, db_url:str, salt:str, sql_query:str, prefix:str):\\r\\r        '''\\r\\r        Get connection string for the database.\\r\\r        Args:\\r\\r            db_user_name (str): Database user name.\\r\\r            db_password (str): Database password.\\r\\r            db_url (str): Database URL.\\r\\r            salt (str): Salt used to encrypt the password.\\r\\r            prefix (str): Protocol prefix.\\r\\r        Returns:\\r\\r            connection_details (dict): Dictionary containing connection string, user name, password, host, port, and database.           \\r\\r        '''\\r\\r        try:\\r\\r            connection_details = {}\\r\\r            # decrypt password\\r\\r            db_password = Security.decrypt(db_password,salt)\\r            if db_password.find('enc')>0:\\r                raise \\""Decryption Failed please give correct decryption key\\""\\r                exit()\\r\\r            # Remove protocol prefix and leading slash\\r\\r            stripped_url = db_url[len(prefix):]\\r\\r            # Split by components, assuming username and password are not present\\r\\r            host, port_database = stripped_url.split(\\""/\\"", 1)\\r\\r            # Extract host and port\\r\\r            host, port = host.split(\\"":\\"")\\r\\r            # Extract database\\r\\r            database = port_database.strip(\\""/\\"")\\r\\r            # Form connection string\\r\\r            connection_string = f'mysql://{db_user_name}:{quote_plus(db_password)}@{host}:{port}/{database}'\\r\\r            \\r\\r            connection_details['db_user_name'] = db_user_name\\r\\r            connection_details['db_password'] = db_password\\r\\r            connection_details['db_host'] = host\\r\\r            connection_details['db_port'] = port\\r\\r            connection_details['database'] = database\\r\\r            connection_details['query'] = sql_query\\r\\r            return connection_string, connection_details\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_connection_details as: ', e)\\r\\r            raise e\\r\\r    \\r\\r    def store_connection_details(self, connection_details:dict, connection_string:str, index_search:str, metadata:dict):         \\r\\r        try:\\r\\r            # Connect to the database or create it if it doesn't exist\\r\\r            root_dir = \\""/RAG_DB\\""\\r\\r            os.makedirs(root_dir, exist_ok=True)  # Create only if needed\\r\\r            root_path = os.path.abspath(root_dir)\\r\\r            path = os.path.join(root_path,'rag_database.db')\\r\\r            # path = os.path.join('../database','rag_database.db')\\r\\r            conn = sqlite3.connect(path) \\r\\r            # Create a cursor object to execute SQL commands\\r\\r            cursor = conn.cursor()\\r\\r            # Create a table (replace with your desired table name and columns)\\r\\r            cursor.execute('''\\r\\r            CREATE TABLE IF NOT EXISTS dataset_details (\\r\\r                id INTEGER PRIMARY KEY AUTOINCREMENT,\\r\\r                dataset_id TEXT NOT NULL,\\r\\r                organization TEXT NOT NULL,\\r\\r                connection_string TEXT NOT NULL,\\r\\r                connection_details JSON NOT NULL,\\r\\r                metadata JSON,\\r\\r                index_search TEXT NOT NULL\\r\\r            )\\r\\r            ''')\\r\\r            connection_details_json = json.dumps(connection_details)\\r\\r            metadata_json = json.dumps(metadata)\\r\\r            # Prepare SQL query with placeholders for values\\r\\r            sql = \\""INSERT INTO dataset_details (dataset_id, ORGANIZATION, connection_string, connection_details, metadata, index_search) VALUES (?, ?, ?, ?, ?, ?)\\""\\r\\r            # Data to be inserted (replace with your actual values)\\r\\r            values = (self.dataset_id, self.organization, connection_string, connection_details_json, metadata_json, index_search)\\r\\r            # Execute the query with prepared values\\r\\r            cursor.execute(sql, values)\\r\\r        \\r\\r            # Commit the changes to the database\\r\\r            conn.commit()\\r\\r            logger.info(\\""data inserted successfully!....\\"")                   \\r\\r        except sqlite3.connector.Error as e:\\r\\r            logger.info('Thre is some error whiling storing data as:',e)\\r\\r            raise e\\r\\r        finally:\\r\\r            # Close database connection properly\\r\\r            cursor.close()\\r\\r            conn.close()""]}],""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""\\n\\n""}},{""id"":""eHcvm"",""alias"":""DatasetExtractor"",""name"":""Python Script"",""classname"":""PythonScriptConfig"",""category"":""BaseConfig"",""attributes"":{""FunctionName"":""DatasetExtractor"",""requirements"":"""",""params"":"""",""script"":[""import boto3\\r\\rfrom typing import List, Optional\\r\\rimport logging as logger \\r\\rimport pathlib\\r\\rimport os\\r\\rimport json\\r\\rimport shutil\\r\\rimport requests\\r\\rimport boto3\\r\\rimport json\\r\\rfrom typing import List, Optional, Union, Dict, Sequence, Any\\r\\rfrom urllib.parse import quote_plus\\r\\rfrom leaputils import Security\\r\\rimport sqlite3\\r\\r# !pip install unstructured\\r\\r# !pip install \\""unstructured[pdf]\\""\\r\\ros.environ['DECRYPTION_KEY']='leap$123##'\\r\\rclass DatasetExtractorConfig:\\r\\r    \\""\\""\\""\\r\\r    DatasetExtractorConfig class to get dataset config.\\r\\r    Args:\\r\\r        config (dict): Dataset config\\r\\r    \\""\\""\\""\\r\\r    def __init__(self, config: Optional[Any]={}) -> None:   \\r\\r        self.local_path: str = config.get('local_path','RAG_data')            \\r\\r        self.query: str = config.get('query',None)   \\r\\r        self.index_search: str = config.get('index_search', 'Default_Index')              \\r\\rclass DatasetExtractor:                            \\r\\r    \\""\\""\\""\\r\\r    Extract dataset. Currently We support S3 datastore.        \\r\\r    Args:\\r\\r        dataset_id (str): Dataset id to get dataset config  \\r\\r        local_path (str): Local file path to store file downloaded from data store,   \\r\\r        index_search (str): To store embedding at particular index          \\r\\r    Returns:\\r\\r        if dataset_type is S3: file_path (str): Local file path\\r\\r        if dataset_type is MYSQL, POSTGRESQL, MSSQL: metadata (dict): metadata\\r\\r    \\""\\""\\""\\r\\r    def __init__(self, dataset_id:str, organization:str) -> None:\\r\\r        self.organization = organization\\r\\r        self.dataset_id = dataset_id        \\r\\r    def get_data(self, config) -> str:         \\r\\r        try:\\r\\r            # get dataset config dict\\r\\r            datasetcofig = self.getdatasetconfig(dataset_id=self.dataset_id, organization=self.organization)              \\r\\r            view = datasetcofig['views']      \\r\\r            dataset_type = datasetcofig['datasource']['type']        \\r\\r            metadata = {\\r\\r                'dataset_id': self.dataset_id,\\r\\r                'organization': self.organization,\\r\\r                'dataset_type': dataset_type,                   \\r\\r            }\\r\\r            connection_details = dict()\\r\\r            if dataset_type == 'S3':  \\r\\r                if view == 'Folder View':\\r\\r                    connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r                    s3_access_key = connection_dict['accessKey']\\r\\r                    s3_secret_key = connection_dict['secretKey']\\r\\r                    s3_end_point_url = connection_dict['url']\\r\\r                    attribute = json.loads(datasetcofig['attributes'])\\r\\r                    bucket = attribute['bucket']    \\r\\r                    path = attribute['path'] \\r\\r                    \\r\\r                    local_path = '/'+config.local_path+'_'+self.dataset_id\\r\\r                    count = 0\\r\\r                    flag = False\\r\\r                    for i in os.listdir(\\""/\\""):\\r\\r                        if i.find(local_path[1:])==0:\\r\\r                            flag = True\\r\\r                            count += 1\\r\\r                    if flag:\\r\\r                        local_path = local_path+(count*'_')\\r\\r                    file_path = self.s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = path, local_path = local_path)\\r\\r                    metadata['source'] = file_path \\r\\r                    return metadata\\r\\r                else:                \\r\\r                    connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])\\r\\r                    s3_access_key = connection_dict['accessKey']\\r\\r                    s3_secret_key = connection_dict['secretKey']\\r\\r                    s3_end_point_url = connection_dict['url'] \\r\\r                    attribute = json.loads(datasetcofig['attributes'])\\r\\r                    bucket = attribute['bucket']               \\r\\r                    path = attribute['path']   \\r\\r                    obj_key = attribute['object']  \\r\\r                    key = f'{path}/{obj_key}'                \\r\\r                    local_path = '/'+config.local_path+'_'+self.dataset_id                           \\r\\r                    count = 0\\r\\r                    flag = False\\r\\r                    for i in os.listdir(\\""/\\""):\\r\\r                        if i.find(local_path[1:])==0:\\r\\r                            flag = True\\r\\r                            count += 1\\r\\r                    if flag:\\r\\r                        local_path = local_path+(count*'_')                                 \\r\\r                    \\r\\r                    file_path = self.s3_download_data(end_point_url = s3_end_point_url, access_key = s3_access_key, secret_key=s3_secret_key, bucket = bucket, obj_key = key, local_path = local_path)\\r\\r                    metadata['source'] = file_path                \\r\\r                    return metadata\\r\\r            elif dataset_type == 'MYSQL':   \\r\\r                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\r                attributes = json.loads(datasetcofig['attributes'])            \\r\\r                db_user_name = connection_dict['userName']           \\r\\r                db_url = connection_dict['url']\\r\\r                db_password = connection_dict['password']   \\r\\r                salt = datasetcofig['datasource']['salt']\\r\\r                sql_query = attributes['Query'] \\r\\r                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query,prefix='jdbc:mysql://')            \\r\\r                self.store_connection_details(connection_details, connection_string, config.index_search, metadata)\\r                \\r                metadata['connection_details'] = connection_details\\r                return metadata            \\r\\r            elif dataset_type == 'POSTGRESQL':\\r\\r                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\r                attributes = json.loads(datasetcofig['attributes'])            \\r\\r                db_user_name = connection_dict['userName']           \\r\\r                db_url = connection_dict['url']\\r\\r                db_password = connection_dict['password']   \\r\\r                salt = datasetcofig['datasource']['salt']\\r\\r                sql_query = attributes['Query'] \\r\\r                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query, prefix='jdbc:postgresql://')            \\r\\r                self.store_connection_details(connection_details, connection_string, config.index_search)\\r\\r                return metadata         \\r\\r            elif dataset_type == 'MSSQL':\\r\\r                connection_dict = json.loads(datasetcofig['datasource']['connectionDetails'])            \\r\\r                attributes = json.loads(datasetcofig['attributes'])            \\r\\r                db_user_name = connection_dict['userName']           \\r\\r                db_url = connection_dict['url']\\r\\r                db_password = connection_dict['password']   \\r\\r                salt = datasetcofig['datasource']['salt']\\r\\r                sql_query = attributes['Query'] \\r\\r                connection_string, connection_details = self.get_connection_details(db_user_name, db_password, db_url, salt, sql_query,prefix='jdbc:sqlserver://')            \\r\\r                self.store_connection_details(connection_details, connection_string, config.index_search)\\r\\r                return metadata \\r\\r        except Exception as e:\\r\\r            logger.info('Exception in DatasetExtractor as: ',e)\\r\\r            return e\\r\\r    #helper functions\\r\\r    def getdatasetconfig(self, dataset_id:str, organization:str):\\r\\r        '''\\r\\r        call ai-plat api to get dataset config\\r\\r        return {dataset_config}\\r\\r        '''  \\r\\r        try:                  \\r\\r            # os.environ[\\""API_URL\\""] = \\""https://infyaiplat.ad.infosys.com\\""          \\r\\r            api_referer = os.environ.get(\\""API_URL\\"")\\r\\r            url = f'{api_referer}/api/services/fetchDatasetDetails/{dataset_id}/{organization}'\\r\\r            logger.info(url)\\r\\r            headers = {\\r\\r            'access-token': os.environ.get('app_ts_access_token'),\\r\\r            'Cookie': 'JSESSIONID=1F892FB2E1384C5D0DF451AAD2AC311B',\\r            'Project': '2'\\r\\r            }\\r\\r            response = requests.request(\\""GET\\"", url, headers=headers, verify=False)\\r\\r            dataset_config = json.loads(response.text)\\r\\r                        \\r\\r            return dataset_config\\r\\r        \\r\\r        except Exception as e:\\r\\r            logger.info('Exception in getdatasetconfig as: ', e)\\r\\r            raise e\\r\\r    def s3_download_data(self, end_point_url:str = '', access_key:str = '', secret_key:str = '', bucket:str = '', obj_key:str = '', local_path:str='/data'):\\r\\r        '''\\r\\r        download data from s3         \\r\\r        return local file path       \\r\\r        '''     \\r\\r        try:\\r\\r            s3_client = boto3.resource(service_name='s3',\\r\\r                        endpoint_url=end_point_url,\\r\\r                        aws_access_key_id=access_key,\\r\\r                        aws_secret_access_key=secret_key,\\r\\r                        verify=False)\\r\\r            \\r\\r            bucket_object = s3_client.Bucket(bucket)\\r\\r            object_save_path = ''\\r\\r            logger.info(bucket_object.objects.filter(Prefix=obj_key))        \\r\\r            if os.path.exists(local_path):\\r\\r                shutil.rmtree(local_path)\\r\\r            os.makedirs(local_path)\\r\\r            model_path = os.path.join(local_path)\\r\\r            for my_bucket_object in bucket_object.objects.filter(Prefix=obj_key):   \\r\\r                if my_bucket_object.key.endswith('/'):\\r\\r                    pass\\r\\r                else:                 \\r\\r                    object_save_path = (f\\""{model_path}/{pathlib.Path(my_bucket_object.key).name}\\"")\\r\\r                    bucket_object.download_file(my_bucket_object.key, object_save_path)\\r\\r            return local_path \\r\\r        except Exception as e:\\r\\r            logger.info('Exception in s3_download_data as: ', e)\\r\\r            raise e\\r\\r    def get_connection_details(self, db_user_name:str, db_password:str, db_url:str, salt:str, sql_query:str, prefix:str):\\r\\r        '''\\r\\r        Get connection string for the database.\\r\\r        Args:\\r\\r            db_user_name (str): Database user name.\\r\\r            db_password (str): Database password.\\r\\r            db_url (str): Database URL.\\r\\r            salt (str): Salt used to encrypt the password.\\r\\r            prefix (str): Protocol prefix.\\r\\r        Returns:\\r\\r            connection_details (dict): Dictionary containing connection string, user name, password, host, port, and database.           \\r\\r        '''\\r\\r        try:\\r\\r            connection_details = {}\\r\\r            # decrypt password\\r\\r            db_password = Security.decrypt(db_password,salt)\\r            if db_password.find('enc')>0:\\r                raise \\""Decryption Failed please give correct decryption key\\""\\r                exit()\\r\\r            # Remove protocol prefix and leading slash\\r\\r            stripped_url = db_url[len(prefix):]\\r\\r            # Split by components, assuming username and password are not present\\r\\r            host, port_database = stripped_url.split(\\""/\\"", 1)\\r\\r            # Extract host and port\\r\\r            host, port = host.split(\\"":\\"")\\r\\r            # Extract database\\r\\r            database = port_database.strip(\\""/\\"")\\r\\r            # Form connection string\\r\\r            connection_string = f'mysql://{db_user_name}:{quote_plus(db_password)}@{host}:{port}/{database}'\\r\\r            \\r\\r            connection_details['db_user_name'] = db_user_name\\r\\r            connection_details['db_password'] = db_password\\r\\r            connection_details['db_host'] = host\\r\\r            connection_details['db_port'] = port\\r\\r            connection_details['database'] = database\\r\\r            connection_details['query'] = sql_query\\r\\r            return connection_string, connection_details\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_connection_details as: ', e)\\r\\r            raise e\\r\\r    \\r\\r    def store_connection_details(self, connection_details:dict, connection_string:str, index_search:str, metadata:dict):         \\r\\r        try:\\r\\r            # Connect to the database or create it if it doesn't exist\\r\\r            root_dir = \\""/RAG_DB\\""\\r\\r            os.makedirs(root_dir, exist_ok=True)  # Create only if needed\\r\\r            root_path = os.path.abspath(root_dir)\\r\\r            path = os.path.join(root_path,'rag_database.db')\\r\\r            # path = os.path.join('../database','rag_database.db')\\r\\r            conn = sqlite3.connect(path) \\r\\r            # Create a cursor object to execute SQL commands\\r\\r            cursor = conn.cursor()\\r\\r            # Create a table (replace with your desired table name and columns)\\r\\r            cursor.execute('''\\r\\r            CREATE TABLE IF NOT EXISTS dataset_details (\\r\\r                id INTEGER PRIMARY KEY AUTOINCREMENT,\\r\\r                dataset_id TEXT NOT NULL,\\r\\r                organization TEXT NOT NULL,\\r\\r                connection_string TEXT NOT NULL,\\r\\r                connection_details JSON NOT NULL,\\r\\r                metadata JSON,\\r\\r                index_search TEXT NOT NULL\\r\\r            )\\r\\r            ''')\\r\\r            connection_details_json = json.dumps(connection_details)\\r\\r            metadata_json = json.dumps(metadata)\\r\\r            # Prepare SQL query with placeholders for values\\r\\r            sql = \\""INSERT INTO dataset_details (dataset_id, ORGANIZATION, connection_string, connection_details, metadata, index_search) VALUES (?, ?, ?, ?, ?, ?)\\""\\r\\r            # Data to be inserted (replace with your actual values)\\r\\r            values = (self.dataset_id, self.organization, connection_string, connection_details_json, metadata_json, index_search)\\r\\r            # Execute the query with prepared values\\r\\r            cursor.execute(sql, values)\\r\\r        \\r\\r            # Commit the changes to the database\\r\\r            conn.commit()\\r\\r            logger.info(\\""data inserted successfully!....\\"")                   \\r\\r        except sqlite3.connector.Error as e:\\r\\r            logger.info('Thre is some error whiling storing data as:',e)\\r\\r            raise e\\r\\r        finally:\\r\\r            # Close database connection properly\\r\\r            cursor.close()\\r\\r            conn.close()""]},""position_x"":""74"",""position_y"":""1"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""hqApS"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""dataset1"",""dataset2"",""dataset3""],""outputEndpoints"":[""out""],""formats"":{""FunctionName"":""text"",""requirements"":""textarea"",""params"":""list"",""script"":""textarea""},""context"":[],""codeGeneration"":{""imports"":[],""requirements"":[],""script"":""\\n\\n""}},{""id"":""VEaAh"",""alias"":""Query VectorDB"",""name"":""Python Class"",""classname"":""PythonClass"",""category"":""PythonClass"",""attributes"":{""script"":[""import os\\r\\rfrom typing import List,Optional,Dict,Union,Sequence,Any\\r\\rimport logging as logger\\r\\rclass VectordbConfig:\\r\\r    def __init__(self,config_json:Optional[Any]={}) :\\r\\r        self.DB_Type : Optional[str] = config_json.get('DB_Type',\\""Faiss\\"")\\r\\r        self.elastic_search_url : str = config_json.get('elastic_search_url',os.environ.get('app_elastic_search_url'))\\r\\r        self.index_name : Optional[str] = config_json.get('index_name',\\""Vector_Store\\"")\\r\\r        self.qdrant_url : Optional[str] = config_json.get('qdrant_url',os.environ.get('app_ts_qdrant_url'))\\r\\r        self.force_recreate : Optional[bool] = config_json.get('force_recreate',False)\\r\\r        self.query : Optional[str] = config_json.get('query',\\""Hi, How are you?\\"")\\r\\r        self.k : Optional[int] = config_json.get('k',4)\\r        \\r        self.score : Optional[float] = config_json.get('score',0.8)\\r\\r        \\r\\rclass QueryVectorDB:\\r\\r    def __init__(self,embedding) -> None:\\r\\r        self.embeddings = embedding\\r\\r    \\r\\r    def get_similar_docs(self,config):\\r\\r        \\""\\""\\""`Meta Faiss` vector store.\\r\\r        To use, you must have the ``faiss`` python package installed.\\r\\r        Example:\\r\\r            .. code-block:: python\\r\\r                from langchain_community.embeddings.openai import OpenAIEmbeddings\\r\\r                from langchain_community.vectorstores import FAISS\\r\\r                embeddings = OpenAIEmbeddings()\\r\\r                texts = [\\""FAISS is an important library\\"", \\""LangChain supports FAISS\\""]\\r\\r                faiss = FAISS.from_texts(texts, embeddings)\\r\\r        \\""\\""\\""\\r\\r        try:\\r\\r            if config.DB_Type.lower() == 'faiss':\\r\\r                return self.get_similar_docs_faiss_db(embeddings=self.embeddings,persist_directory='/'+config.index_name,query=config.query,k=config.k)                \\r\\r            elif config.DB_Type.lower() == 'chroma':  \\r\\r                return self.get_similar_docs_chroma_db(embeddings=self.embeddings,persist_directory='/'+config.index_name,query=config.query,k=config.k)        \\r\\r            elif config.DB_Type.lower() == 'elasticsearch':                   \\r\\r                return self.get_similar_docs_elastic_db(embeddings=self.embeddings,docs=self.docs,es_url=config.elastic_search_url,index_name=config.index_name,query=config.query,k=config.k)\\t\\t    \\r\\r            elif config.DB_Type.lower() == 'qdrant':      \\r\\r                return self.get_similar_docs_qdrant_db(embeddings=self.embeddings,qdrant_url=config.qdrant_url,collection_name=config.index_name,query=config.query,k=config.k, score=config.score)\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs', e)\\r\\r            raise e\\r\\r        \\r\\r    def get_similar_docs_chroma_db(self,embeddings:Any=None,persist_directory:str=\\""\\"",query:str='',k:int=None):\\r\\r        \\""\\""\\""`ChromaDB` vector store.\\r\\r        To use, you should have the ``chromadb`` python package installed.\\r\\r        Example:\\r\\r        .. code-block:: python\\r\\r        from langchain_community.vectorstores import Chroma\\r\\r        from langchain_community.embeddings.openai import OpenAIEmbeddings\\r\\r        embeddings = OpenAIEmbeddings()\\r\\r        vectorstore = Chroma(\\""langchain_store\\"", embeddings)\\""\\""\\""\\r\\r        try:\\r\\r            from langchain_community.vectorstores import Chroma\\r\\r            db3 = Chroma(persist_directory=persist_directory, embeddings=embeddings)\\r\\r            docs = db3.similarity_search(query,k=k)\\r\\r            \\r\\r            return docs\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs_chroma_db', e)\\r\\r            raise e\\r\\r    def get_similar_docs_faiss_db(self,embeddings:Any=None,persist_directory:str=\\""\\"",query:str='',k:int=None):   \\r\\r        try:     \\r\\r            from langchain.vectorstores import FAISS\\r\\r            db = FAISS.load_local(persist_directory, embeddings,allow_dangerous_deserialization=True)\\r\\r            docs = db.similarity_search(query,k=k)\\r\\r            \\r\\r            return docs\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs_faiss_db', e)\\r\\r            raise e\\r\\r    def get_similar_docs_qdrant_db(self,qdrant_url:str='',embeddings:Any='',query:str='',collection_name:str='',k:int=None,score:float=0.80):\\r\\r        \\""\\""\\""\\r\\r        QdrantvectorDb\\r\\r        Args:[]\\r\\r            embeddings=self.embeddings, # Vector embeddings to use for similarity search\\r\\r            qdrant_url=config.qdrant_url, # URL of Qdrant search server \\r\\r            collection_name=config.index_name, # Name of indexed document collection in Qdrant \\r\\r            query=config.query # Search query text to find similar documents for\\r\\r        \\""\\""\\""\\r\\r        try:\\r\\r            from qdrant_client import QdrantClient\\r\\r            \\r\\r            \\r\\r            client = QdrantClient(url=qdrant_url)\\r\\r            if 'HuggingFaceEmbeddings' in str(type(embeddings)):\\r                from sentence_transformers import SentenceTransformer\\r\\r                model=embeddings.model_name\\r\\r                name=model.split('/')\\r\\r                encoder = SentenceTransformer(name[1])\\r\\r                query_vector=encoder.encode(query).tolist()\\r\\r            elif 'AzureOpenAIEmbeddings' in str(type(embeddings)):\\r                import openai\\r\\r                model=embeddings.deployment\\r\\r                openai.api_key = embeddings.openai_api_key\\r\\r                openai.api_version = embeddings.openai_api_version\\r\\r                openai.api_type = embeddings.openai_api_type\\r\\r                openai.api_base = embeddings.openai_api_base\\r\\r                query_vector = openai.Embedding.create(\\r\\r                engine = model,\\r\\r                input=query,\\r\\r                model=embeddings.model,\\r\\r        )['data'][0]['embedding']\\r\\r            elif 'BedrockEmbeddings' in str(type(embeddings)):\\r\\r                import json\\r\\r                model_id = embeddings.model_id\\r\\r                bedrock = embeddings.client\\r\\r                input_text = query\\r\\r                body = json.dumps({\\r\\r                    \\""inputText\\"": input_text\\r\\r                    })\\r\\r                accept = \\""application/json\\""\\r\\r                content_type = \\""application/json\\""\\r\\r                query_vector = bedrock.invoke_model(\\r\\r                    body=body, modelId=model_id, accept=accept, contentType=content_type\\r\\r                )\\r\\r                query_vector = json.loads(query_vector.get('body').read())['embedding']\\r\\r            hits = client.search(collection_name=collection_name,query_vector=query_vector,limit=k)\\r\\r            l=[]\\r\\r            for hit in hits:\\r                if hit.score>=0.5:\\r\\r                    l.append(hit.payload)   \\r            \\r                    \\r            if len(l)==0:\\r                return \\""No Related Ticket found for the input query\\""\\r            \\r\\r            return l\\r\\r        except Exception as e:  \\r\\r            logger.info('Exception in get_similar_docs_qdrant_db', e)\\r\\r            raise e\\r\\r        \\r\\r    def get_similar_docs_elastic_db(self,embeddings:Any=None,docs:Any=None,query:str='',es_url=\\""\\"",index_name=\\""\\"",k:int=None):\\r\\r        \\""\\""\\""`Elasticsearch` vector store.\\r\\r        Args:\\r\\r            index_name: Name of the Elasticsearch index to create.\\r\\r            es_url: URL of the Elasticsearch instance to connect to.\\r\\r            cloud_id: Cloud ID of the Elasticsearch instance to connect to.\\r\\r            es_user: Username to use when connecting to Elasticsearch.\\r\\r            es_password: Password to use when connecting to Elasticsearch.\\r\\r            es_api_key: API key to use when connecting to Elasticsearch.\\r\\r            es_connection: Optional pre-existing Elasticsearch connection.\\r\\r            vector_query_field: Optional. Name of the field to store\\r\\r                                the embedding vectors in.\\r\\r            query_field: Optional. Name of the field to store the texts in.\\r\\r            strategy: Optional. Retrieval strategy to use when searching the index.\\r\\r                        Defaults to ApproxRetrievalStrategy. Can be one of\\r\\r                        ExactRetrievalStrategy, ApproxRetrievalStrategy,\\r\\r                        or SparseRetrievalStrategy.\\r\\r            distance_strategy: Optional. Distance strategy to use when\\r\\r                                searching the index.\\r\\r                                Defaults to COSINE. Can be one of COSINE,\\r\\r                                    EUCLIDEAN_DISTANCE, or DOT_PRODUCT. \\r\\r        \\""\\""\\""\\r\\r        try:\\r\\r            from langchain_community.vectorstores import ElasticsearchStore\\r\\r            db = ElasticsearchStore.from_documents(\\r\\r            docs,\\r\\r            embeddings,\\r\\r            es_url=es_url,\\r\\r            index_name=index_name,\\r\\r            )\\r\\r            db.client.indices.refresh(index=index_name)\\r\\r            results = db.similarity_search(query,k=k)            \\r\\r            return results\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs_elastic_db', e)\\r\\r            raise e\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r""]},""position_x"":""58"",""position_y"":""272"",""connectors"":[{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""NdAZP"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{""script"":""textArea""},""context"":[],""codeGeneration"":{""requirements"":[],""imports"":[],""script"":""""}},{""id"":""NdAZP"",""alias"":""LLM Inference"",""name"":""Python Class"",""classname"":""PythonClass"",""category"":""PythonClass"",""attributes"":{""script"":[""import os\\r\\rfrom typing import List,Optional,Dict,Union,Sequence,Any\\r\\rimport json\\r\\rimport requests\\r\\r\\r\\rclass LLMInferenceConfig:\\r\\r    def __init__(self,config_json:Optional[Any]={}):\\r\\r        self.LLM_Type : Optional[str] = config_json.get('LLM_Type',\\""OnPrem\\"")\\r\\r        self.prompt_template : Optional[str] = config_json.get('prompt_template','Answer the query asked by user based on the given Context below.')\\r\\r        self.model_url : Optional[str] = config_json.get('url',\\""https://itgateway.infosys.com/ai-platform/mxtral-aic/v1/language/generate\\"")\\r\\r        self.max_tokens : Optional[int] = config_json.get('max_tokens',2000)\\r\\r        self.top_k :  Optional[int] = config_json.get('top_k',5)\\r\\r        self.top_p :  Optional[float] = config_json.get('top_p',0.25)\\r\\r        self.typical_p : Optional[float] = config_json.get('typical_p',0.25)\\r\\r        self.temperature : Optional[float] = config_json.get('temperature',0)\\r\\r        self.repetition_penalty : Optional[float] = config_json.get('repetition_penalty',None)\\r\\r        self.api_type : Optional[str] = config_json.get('api_type',\\""azure\\"")\\r\\r        self.api_base : Optional[str] = config_json.get('api_base',\\""https://azureft.openai.azure.com/\\"") \\r\\r        self.api_version : Optional[str] = config_json.get('api_version',\\""2023-03-15-preview\\"")\\r\\r        self.api_key : Optional[str] = config_json.get('api_key',os.environ.get(\\""app_openai_api_key\\""))\\r\\r        self.stop : Optional[str] = config_json.get('stop',\\""\\"")\\r\\r        self.service_name : Optional[str] = config_json.get('service_name','bedrock-runtime')\\r\\r        self.aws_access_key_id : Optional[str] = config_json.get('aws_access_key_id','')\\r\\r        self.aws_secret_access_key : Optional[str] = config_json.get('aws_secret_access_key','')\\r\\r        self.region_name : Optional[str] = config_json.get('region_name','us-east-1')\\r\\r        self.endpoint_url : Optional[str] = config_json.get('endpoint_url','https://bedrock-runtime.us-east-1.amazonaws.com')\\r\\r        self.model_id : Optional[str] = config_json.get('model_id','anthropic.claude-v2')\\r\\r        self.query : Optional[str] = config_json.get('query',\\""Hi\\"")\\r\\r        self.engine : Optional[str] = config_json.get('engine','gtp35turbo')\\r\\r        \\r\\r\\r\\rclass LLMInference:\\r\\r    def __init__(self, context):\\r\\r        self.context = context\\r\\r    \\r\\r    def Query_LLM(self,config):\\r\\r        ''' \\r\\r        Falcon40b model\\r\\r        args[]\\r\\r            prompt_template:  # Prompt template string to prepend before the input context, question and parameters\\r\\r            falcon_40b_model_url:  # URL of the Falcon 4.0b model to use\\r\\r            context:  # Context string to provide background for answering the question\\r\\r            question:  # Question string to get an answer for\\r\\r            max_tokens:  # Maximum number of tokens to generate in the answer\\r\\r            top_k:  # Sample from the top k tokens, overrides typical_p if set\\r\\r            top_p:  # Sample from the smallest possible set of tokens whose cumulative probability exceeds the probability top_p, overrides top_k if set\\r\\r            typical_p:  # Typical sampling probability, overrides top_p if set\\r\\r            temperature:  # Randomness of the sampling, higher values means more random, overrides typical_p if set\\r\\r            repetition_penalty:  # Penalty for repetitive phrases, higher values mean more diversity \\r\\r        '''\\r\\r        try:\\r\\r            if config.LLM_Type.lower() == 'falcon':\\r\\r                return self.OnPrem(context=self.context,prompt_template=config.prompt_template,falcon_40b_model_url = config.model_url,question=config.query,max_tokens=config.max_tokens,top_k=config.top_k,top_p=config.top_p,typical_p=config.typical_p,temperature=config.temperature,repetition_penalty=config.repetition_penalty)\\r\\r            elif config.LLM_Type.lower() == 'onprem':\\r\\r                return self.Mixtral(prompt_template=config.prompt_template,context=self.context,Mixtral_model_url = config.model_url,question=config.query,max_tokens=config.max_tokens,top_k=config.top_k,top_p=config.top_p,typical_p=config.typical_p,temperature=config.temperature,repetition_penalty=config.repetition_penalty)\\r\\r\\r\\r            elif config.LLM_Type.lower() == 'azureopenai':\\r\\r                '''\\r\\r                Openaimodel\\r\\r                args[]\\r\\r                engine: # Specify the AI engine/model to use for text generation\\r\\r                prompt_template:  # Prompt template string to prepend before the input context and question\\r\\r                context:  # Context string providing background information to inform the answer\\r\\r                question:  # Question string specifying the actual question to get an answer for\\r\\r                api_type:  # The type of API if using an API-based text generation engine, e.g. 'OpenAI'  \\r\\r                api_base:  # Base URL endpoint if using an API-based text generation engine \\r\\r                api_version:   # API version, e.g. 'v1'\\r\\r                api_key:  # API key for authentication if using an API-based text generation engine\\r\\r                temperature:  # Float value controlling randomness/creativity of text generation\\r\\r                max_tokens:  # Maximum number of tokens to generate in the answer\\r\\r                stop: s # String sequence to stop further text generation\\r\\r                '''        \\r\\r                return self.AzureOpenai(engine=config.engine,prompt_template=config.prompt_template,context=self.context,question=config.query,api_type=config.api_type,api_base=config.api_base,api_version=config.api_version,api_key=config.api_key,temperature=config.temperature, max_tokens=config.max_tokens, stop=config.stop, top_p=config.top_p)\\r\\r            elif config.LLM_Type.lower() == 'bedrock':\\r\\r                return self.Bedrock(service_name=config.service_name,prompt_template=config.prompt_template,question=config.query,context=self.context,aws_access_key_id=config.aws_access_key_id,aws_secret_access_key=config.aws_secret_access_key,region_name=config.region_name,endpoint_url=config.endpoint_url,temperature=config.temperature, max_tokens=config.max_tokens, top_p=config.top_p,modelId=config.model_id)\\r\\r        except Exception as e:\\r\\r            print('Exception in Query_LLM as',e)\\r\\r            raise e\\r\\r    def Mixtral(self, prompt_template:str='',Mixtral_model_url:str='',context:str='', question:str='',max_tokens:float=None, top_k:float=None, top_p:float=None, typical_p:float=None, temperature:float=None, repetition_penalty: float=None):\\r\\r        def generate_token():\\r\\r            url='https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\r            headers={\\r\\r                \\""Content-Type\\"": \\""application/x-www-form-urlencoded\\"",\\r\\r                \\""Cookie\\"":\\""fpc=Akan455tw-pPuiXfSA1sz_fwGWPkAQAAAO7xkNwOAAAA; stsservicecookie=estsfd; x-ms-gateway-slice=estsfd; fpc=Akan455tw-pPuiXfSA1sz_eqfEQzAQAAAF04ktwOAAAAEWQ-MAEAAADuOJLcDgAAAExTSTMBAAAADzmS3A4AAAA; x-ms-gateway-slice=estsfd; fpc=AjRjfSpYATNGtUVf3IhQhQ71dL7bAQAAANrZid0OAAAA\\""\\r\\r            }\\r\\r            data={\\r\\r                \\""client_id\\"":os.environ.get('app_client_id'),\\r\\r                \\""client_secret\\"":os.environ.get('app_client_secret'),\\r\\r                \\""grant_type\\"":\\""client_credentials\\"",\\r\\r                \\""scope\\"":\\""b3490b10-6bd3-4f66-908d-fa1950e46598/.default\\""\\r\\r            }\\r\\r            response = requests.request('POST', url, headers=headers, data=data, verify=False)\\r\\r            # print(\\""This is respone\\"",response.text)\\r\\r            return json.loads(response.text)[\\""access_token\\""]\\r\\r        token=generate_token()\\r\\r        auth=f'Bearer {token}'\\r\\r        generated_answer = ''\\r\\r        input_prompt = f'''{prompt_template} \\\\\\r\\\\\\rContext: '{context}'. \\\\\\r\\\\\\rQuestion: {question}. \\\\\\r\\\\\\rAnswer:'''\\r\\r        payload = json.dumps({\\r\\r        'inputs': [input_prompt],\\r\\r        'parameters': {\\r\\r                'max_new_tokens': max_tokens\\r\\r            }\\r\\r        })\\r\\r        \\r\\r        headers = {\\r\\r            'Content-Type':'application/json', \\r\\r            'Authorization' : auth\\r\\r\\r\\r        }\\r\\r        \\r\\r        response = requests.request('POST', Mixtral_model_url, headers=headers, data=payload, verify=False)\\r\\r        \\r\\r        generated_answer = json.loads(response.text)\\r\\r        generated_answer=generated_answer['generated_text']\\r\\r\\r\\r        return generated_answer   \\r\\r    def OnPrem(self, prompt_template:str='',falcon_40b_model_url:str='',context:str='', question:str='',max_tokens:float=None, top_k:float=None, top_p:float=None, typical_p:float=None, temperature:float=None, repetition_penalty: float=None):\\r\\r        try:\\r\\r            generated_answer = ''\\r\\r            input_prompt = f'''{prompt_template} \\\\\\r\\\\\\rContext: '{context}'. \\\\\\r\\\\\\rQuestion: {question}. \\\\\\r\\\\\\rAnswer:'''\\r\\r            payload = json.dumps({\\r\\r            'inputs': input_prompt,\\r\\r            'parameters': {\\r\\r                    'max_new_tokens': max_tokens,\\r\\r                    'top_k': top_k,\\r\\r                    'top_p': top_p,\\r\\r                    'typical_p': typical_p,\\r\\r                    'temperature': temperature,\\r\\r                    'repetition_penalty': repetition_penalty\\r\\r                }\\r\\r            })\\r\\r            \\r\\r            headers = {\\r\\r                'Content-Type': 'application/json' \\r\\r            }\\r\\r            \\r\\r            response = requests.request('POST', falcon_40b_model_url, headers=headers, data=payload, verify=False)\\r\\r            \\r\\r            generated_answer = json.loads(response.text)[0]['generated_text']\\r\\r\\r\\r            return generated_answer\\r\\r        \\r\\r        except Exception as e:\\r\\r            print('Exception in OnPrem as', e)\\r\\r            raise e\\r\\r    \\r\\r    def AzureOpenai(self,engine:str='',prompt_template:str='',context:str='',question:str='',api_type:str='',api_base:str='',api_version:str='',api_key:str='',temperature:float='', max_tokens:float='', stop:str='', top_p:float=''):\\r\\r        try:\\r\\r            import openai\\r\\r            openai.proxy = {'http' : 'http://blrproxy.ad.infosys.com:80','https' : 'http://blrproxy.ad.infosys.com:80'}\\r\\r            openai.api_type = api_type\\r\\r            openai.api_base = api_base\\r\\r            openai.api_version = api_version\\r\\r            openai.api_key = api_key\\r\\r            prompt = f'''{prompt_template} \\r\\rContext: '{context}'. \\r\\rQuestion: {question}. \\r\\rAnswer:'''\\r\\r            response = openai.ChatCompletion.create(engine=engine,\\r\\r                    messages = [{\\""role\\"":\\""user\\"",\\""content\\"":prompt}],\\r\\r                    temperature=temperature,\\r\\r                    max_tokens=max_tokens,\\r\\r                    top_p=top_p,\\r\\r                    stop=stop)\\r\\r            out = response[\\""choices\\""][0][\\""message\\""][\\""content\\""]\\r\\r            return out\\r\\r        except Exception as e:\\r\\r            print('Exception in AzureOpenai as', e)\\r\\r            raise e\\r\\r                \\r\\r    def Bedrock(self,service_name:str='',prompt_template:str='',question:str='',context:str='',aws_access_key_id:str='',aws_secret_access_key:str='',region_name:str='',endpoint_url:str='',max_tokens:float=None,temperature:float=None,top_p:float=None,modelId:str=''):\\r\\r        try:            \\r\\r            import boto3\\r\\r            bedrock = boto3.client(service_name=service_name,aws_access_key_id=aws_access_key_id,aws_secret_access_key=aws_secret_access_key,region_name=region_name,endpoint_url=endpoint_url)\\r\\r    \\r\\r            prompt_data = f\\""\\""\\""Human: {prompt_template} \\r\\rContext: '{context}'. \\r\\rQuestion: {question}\\r\\r            Assistant:\\""\\""\\""\\r\\r            body = json.dumps({\\r\\r                \\""prompt\\"": prompt_data,\\r\\r                \\""max_tokens_to_sample\\"":max_tokens,\\r\\r                \\""temperature\\"":temperature,\\r\\r                \\""top_p\\"":top_p\\r\\r            })\\r\\r            modelId = modelId\\r\\r            print(body)\\r\\r            response = bedrock.invoke_model(body=body, modelId=modelId)\\r\\r            response_body = json.loads(response.get('body').read())\\r\\r            outputText = response_body.get('completion')\\r\\r            return outputText\\r\\r        except Exception as e:\\r\\r            print('Exception in Bedrock as', e)\\r\\r            raise e \\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r""]},""position_x"":""316"",""position_y"":""272"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""VEaAh"",""elementPosition"":""RightMiddle""},{""type"":""source"",""endpoint"":""out"",""position"":""RightMiddle"",""elementId"":""hupuc"",""elementPosition"":""LeftMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{""script"":""textArea""},""context"":[{""script"":[""import os\\r\\rfrom typing import List,Optional,Dict,Union,Sequence,Any\\r\\rimport logging as logger\\r\\rclass VectordbConfig:\\r\\r    def __init__(self,config_json:Optional[Any]={}) :\\r\\r        self.DB_Type : Optional[str] = config_json.get('DB_Type',\\""Faiss\\"")\\r\\r        self.elastic_search_url : str = config_json.get('elastic_search_url',os.environ.get('app_elastic_search_url'))\\r\\r        self.index_name : Optional[str] = config_json.get('index_name',\\""Vector_Store\\"")\\r\\r        self.qdrant_url : Optional[str] = config_json.get('qdrant_url',os.environ.get('app_ts_qdrant_url'))\\r\\r        self.force_recreate : Optional[bool] = config_json.get('force_recreate',False)\\r\\r        self.query : Optional[str] = config_json.get('query',\\""Hi, How are you?\\"")\\r\\r        self.k : Optional[int] = config_json.get('k',4)\\r        \\r        self.score : Optional[float] = config_json.get('score',0.8)\\r\\r        \\r\\rclass QueryVectorDB:\\r\\r    def __init__(self,embedding) -> None:\\r\\r        self.embeddings = embedding\\r\\r    \\r\\r    def get_similar_docs(self,config):\\r\\r        \\""\\""\\""`Meta Faiss` vector store.\\r\\r        To use, you must have the ``faiss`` python package installed.\\r\\r        Example:\\r\\r            .. code-block:: python\\r\\r                from langchain_community.embeddings.openai import OpenAIEmbeddings\\r\\r                from langchain_community.vectorstores import FAISS\\r\\r                embeddings = OpenAIEmbeddings()\\r\\r                texts = [\\""FAISS is an important library\\"", \\""LangChain supports FAISS\\""]\\r\\r                faiss = FAISS.from_texts(texts, embeddings)\\r\\r        \\""\\""\\""\\r\\r        try:\\r\\r            if config.DB_Type.lower() == 'faiss':\\r\\r                return self.get_similar_docs_faiss_db(embeddings=self.embeddings,persist_directory='/'+config.index_name,query=config.query,k=config.k)                \\r\\r            elif config.DB_Type.lower() == 'chroma':  \\r\\r                return self.get_similar_docs_chroma_db(embeddings=self.embeddings,persist_directory='/'+config.index_name,query=config.query,k=config.k)        \\r\\r            elif config.DB_Type.lower() == 'elasticsearch':                   \\r\\r                return self.get_similar_docs_elastic_db(embeddings=self.embeddings,docs=self.docs,es_url=config.elastic_search_url,index_name=config.index_name,query=config.query,k=config.k)\\t\\t    \\r\\r            elif config.DB_Type.lower() == 'qdrant':      \\r\\r                return self.get_similar_docs_qdrant_db(embeddings=self.embeddings,qdrant_url=config.qdrant_url,collection_name=config.index_name,query=config.query,k=config.k, score=config.score)\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs', e)\\r\\r            raise e\\r\\r        \\r\\r    def get_similar_docs_chroma_db(self,embeddings:Any=None,persist_directory:str=\\""\\"",query:str='',k:int=None):\\r\\r        \\""\\""\\""`ChromaDB` vector store.\\r\\r        To use, you should have the ``chromadb`` python package installed.\\r\\r        Example:\\r\\r        .. code-block:: python\\r\\r        from langchain_community.vectorstores import Chroma\\r\\r        from langchain_community.embeddings.openai import OpenAIEmbeddings\\r\\r        embeddings = OpenAIEmbeddings()\\r\\r        vectorstore = Chroma(\\""langchain_store\\"", embeddings)\\""\\""\\""\\r\\r        try:\\r\\r            from langchain_community.vectorstores import Chroma\\r\\r            db3 = Chroma(persist_directory=persist_directory, embeddings=embeddings)\\r\\r            docs = db3.similarity_search(query,k=k)\\r\\r            \\r\\r            return docs\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs_chroma_db', e)\\r\\r            raise e\\r\\r    def get_similar_docs_faiss_db(self,embeddings:Any=None,persist_directory:str=\\""\\"",query:str='',k:int=None):   \\r\\r        try:     \\r\\r            from langchain.vectorstores import FAISS\\r\\r            db = FAISS.load_local(persist_directory, embeddings,allow_dangerous_deserialization=True)\\r\\r            docs = db.similarity_search(query,k=k)\\r\\r            \\r\\r            return docs\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs_faiss_db', e)\\r\\r            raise e\\r\\r    def get_similar_docs_qdrant_db(self,qdrant_url:str='',embeddings:Any='',query:str='',collection_name:str='',k:int=None,score:float=0.80):\\r\\r        \\""\\""\\""\\r\\r        QdrantvectorDb\\r\\r        Args:[]\\r\\r            embeddings=self.embeddings, # Vector embeddings to use for similarity search\\r\\r            qdrant_url=config.qdrant_url, # URL of Qdrant search server \\r\\r            collection_name=config.index_name, # Name of indexed document collection in Qdrant \\r\\r            query=config.query # Search query text to find similar documents for\\r\\r        \\""\\""\\""\\r\\r        try:\\r\\r            from qdrant_client import QdrantClient\\r\\r            \\r\\r            \\r\\r            client = QdrantClient(url=qdrant_url)\\r\\r            if 'HuggingFaceEmbeddings' in str(type(embeddings)):\\r                from sentence_transformers import SentenceTransformer\\r\\r                model=embeddings.model_name\\r\\r                name=model.split('/')\\r\\r                encoder = SentenceTransformer(name[1])\\r\\r                query_vector=encoder.encode(query).tolist()\\r\\r            elif 'AzureOpenAIEmbeddings' in str(type(embeddings)):\\r                import openai\\r\\r                model=embeddings.deployment\\r\\r                openai.api_key = embeddings.openai_api_key\\r\\r                openai.api_version = embeddings.openai_api_version\\r\\r                openai.api_type = embeddings.openai_api_type\\r\\r                openai.api_base = embeddings.openai_api_base\\r\\r                query_vector = openai.Embedding.create(\\r\\r                engine = model,\\r\\r                input=query,\\r\\r                model=embeddings.model,\\r\\r        )['data'][0]['embedding']\\r\\r            elif 'BedrockEmbeddings' in str(type(embeddings)):\\r\\r                import json\\r\\r                model_id = embeddings.model_id\\r\\r                bedrock = embeddings.client\\r\\r                input_text = query\\r\\r                body = json.dumps({\\r\\r                    \\""inputText\\"": input_text\\r\\r                    })\\r\\r                accept = \\""application/json\\""\\r\\r                content_type = \\""application/json\\""\\r\\r                query_vector = bedrock.invoke_model(\\r\\r                    body=body, modelId=model_id, accept=accept, contentType=content_type\\r\\r                )\\r\\r                query_vector = json.loads(query_vector.get('body').read())['embedding']\\r\\r            hits = client.search(collection_name=collection_name,query_vector=query_vector,limit=k)\\r\\r            l=[]\\r\\r            for hit in hits:\\r                if hit.score>=0.5:\\r\\r                    l.append(hit.payload)   \\r            \\r                    \\r            if len(l)==0:\\r                return \\""No Related Ticket found for the input query\\""\\r            \\r\\r            return l\\r\\r        except Exception as e:  \\r\\r            logger.info('Exception in get_similar_docs_qdrant_db', e)\\r\\r            raise e\\r\\r        \\r\\r    def get_similar_docs_elastic_db(self,embeddings:Any=None,docs:Any=None,query:str='',es_url=\\""\\"",index_name=\\""\\"",k:int=None):\\r\\r        \\""\\""\\""`Elasticsearch` vector store.\\r\\r        Args:\\r\\r            index_name: Name of the Elasticsearch index to create.\\r\\r            es_url: URL of the Elasticsearch instance to connect to.\\r\\r            cloud_id: Cloud ID of the Elasticsearch instance to connect to.\\r\\r            es_user: Username to use when connecting to Elasticsearch.\\r\\r            es_password: Password to use when connecting to Elasticsearch.\\r\\r            es_api_key: API key to use when connecting to Elasticsearch.\\r\\r            es_connection: Optional pre-existing Elasticsearch connection.\\r\\r            vector_query_field: Optional. Name of the field to store\\r\\r                                the embedding vectors in.\\r\\r            query_field: Optional. Name of the field to store the texts in.\\r\\r            strategy: Optional. Retrieval strategy to use when searching the index.\\r\\r                        Defaults to ApproxRetrievalStrategy. Can be one of\\r\\r                        ExactRetrievalStrategy, ApproxRetrievalStrategy,\\r\\r                        or SparseRetrievalStrategy.\\r\\r            distance_strategy: Optional. Distance strategy to use when\\r\\r                                searching the index.\\r\\r                                Defaults to COSINE. Can be one of COSINE,\\r\\r                                    EUCLIDEAN_DISTANCE, or DOT_PRODUCT. \\r\\r        \\""\\""\\""\\r\\r        try:\\r\\r            from langchain_community.vectorstores import ElasticsearchStore\\r\\r            db = ElasticsearchStore.from_documents(\\r\\r            docs,\\r\\r            embeddings,\\r\\r            es_url=es_url,\\r\\r            index_name=index_name,\\r\\r            )\\r\\r            db.client.indices.refresh(index=index_name)\\r\\r            results = db.similarity_search(query,k=k)            \\r\\r            return results\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs_elastic_db', e)\\r\\r            raise e\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r""]}],""codeGeneration"":{""requirements"":[],""imports"":[],""script"":""""}},{""id"":""hupuc"",""alias"":""Embedding Models"",""name"":""Python Class"",""classname"":""PythonClass"",""category"":""PythonClass"",""attributes"":{""script"":[""from typing import Optional,Any\\r\\rimport os\\r\\rimport logging as logger\\r\\rclass EmbeddingConfig:\\r\\r    def __init__(self,config_json:Optional[Any] = {}):\\r\\r        self.embedding_type:Optional[str]=config_json.get('embedding_type',\\""HuggingFace\\"")\\r\\r        self.model_name:Optional[str]=config_json.get('model_name',\\""sentence-transformers/all-MiniLM-L6-v2\\"")\\r\\r        self.azure_openai_api_key:Optional[str]=config_json.get('azure_openai_api_key',os.environ.get('app_ts_openai_api_key'))\\r\\r        self.azure_openai_endpoint:Optional[str]=config_json.get('azure_openai_endpoint','https://azureft.openai.azure.com/')\\r\\r        self.azure_api_version:Optional[str]=config_json.get('azure_api_version','2023-03-15-preview')\\r\\r        self.azure_deployment:Optional[str]=config_json.get('azure_deployment','openaiada2')\\r\\r        self.openai_model:Optional[str]=config_json.get('openai_model','text-embedding-ada-002')\\r\\r        self.openai_api_base:Optional[str]=config_json.get('openai_api_base','https://azureft.openai.azure.com/')\\r\\r        self.openai_api_type:Optional[str]=config_json.get('openai_api_type','azure')\\r\\r        self.bedrock_access_id:Optional[str]=config_json.get('bedrock_access_id',os.environ.get('app_aws_secret_access_id'))\\r\\r        self.bedrock_access_key:Optional[str]=config_json.get('bedrock_access_key',os.environ.get('app_aws_secret_access_key'))\\r\\r        self.bedrock_region_name:Optional[str]=config_json.get('bedrock_region_name','us-east-1')\\r\\r        self.bedrock_endpoint_url:Optional[str]=config_json.get('bedrock_endpoint_url','https://bedrock-runtime.us-east-1.amazonaws.com')\\r\\r        self.bedrock_model_id:Optional[str]=config_json.get('bedrock_model_id','amazon.titan-embed-g1-text-02')\\r\\r        self.elastic_search_model_id:Optional[str]=config_json.get('elastic_search_model_id',None)\\r\\r        self.elastic_search_cloud_id:Optional[str]=config_json.get('elastic_search_cloud_id',None)\\r\\r        self.elastic_search_user_id:Optional[str]=config_json.get('elastic_search_user_id',None)\\r\\r        self.elastic_search_password:Optional[str]=config_json.get('elastic_search_password',None)\\r\\rclass EmbeddingModels:\\r\\r    def __init__(self) -> None:\\r\\r        pass\\r\\r    def get_embedding_function(self,config):\\r\\r        \\""\\""\\""Embedding Model Defination for vector db. We support FaissDB,chromadb,ElasticsearchDB, it's not required if you prepared your own vector db.\\r\\r        Args:\\r\\r            embedding_type(str): Type of Embedding to be used, We support HuggingFace, AzureOpenAI, Bedrock, ElasticSearch, Default is HuggingFace.\\r\\r            model_name(str): Model Name to generate the embedding according to your embedding type, Default is \\""sentence-transformers/all-MiniLM-L6-v2\\"".\\r\\r            AzureOpenAI_Params(str):azure_openai_api_key,\\r\\r                                    azure_openai_endpoint,\\r\\r                                    azure_api_version,\\r\\r                                    azure_deployment,\\r\\r                                    model_name= Open AI Embedding Model Name ,\\r\\r                                    openai_api_base,\\r\\r                                    openai_api_type\\r\\r            Bedrock_Params(str):bedrock_access_id,\\r\\r                                bedrock_access_key,\\r\\r                                bedrock_region_name,\\r\\r                                bedrock_endpoint_url,\\r\\r                                bedrock_model_id\\r\\r            ElasticSearch_Params(str):  elastic_search_model_id,\\r\\r                                        elastic_search_cloud_id,\\r\\r                                        elastic_search_user,\\r\\r                                        elastic_search_password\\r\\r        \\""\\""\\""\\r\\r        try:\\r\\r            logger.info(config.azure_openai_api_key)\\r\\r            if config.embedding_type.strip().lower() == \\""huggingface\\"":\\r\\r                return self.HuggingFace(model_name=config.model_name)\\r\\r            elif config.embedding_type.strip().lower() == \\""azureopenai\\"":\\r\\r                return self.AzureOpenAI(azure_openai_api_key_param=config.azure_openai_api_key,azure_api_version_param=config.azure_api_version,azure_deployment_param=config.azure_deployment,model_param=config.openai_model,openai_api_base_param=config.openai_api_base,openai_api_type_param=config.openai_api_type)\\r\\r            elif config.embedding_type.strip().lower() == \\""bedrock\\"":\\r\\r                return self.Bedrock(access_id_param=config.bedrock_access_id,access_key_param=config.bedrock_access_key,region_name_param=config.bedrock_region_name,endpoint_url_param=config.bedrock_endpoint_url,model_id_param=config.bedrock_model_id)\\r\\r            elif config.embedding_type.strip().lower() == \\""elasticsearch\\"":\\r\\r                return self.ElasticSearch(elastic_model_id_param=config.elastic_search_model_id,es_cloud_id_param=config.elastic_search_cloud_id,es_user_param=config.elastic_search_user,es_password_param=config.elastic_search_password)\\r\\r            else:\\r\\r                raise Exception(\\""Unknown embedding type, we support only ElasticSearch, Bedrock, AzureOpenAI, and HuggingFace\\"")\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_embedding_function',e)\\r\\r            raise e\\r\\r        \\r\\r    def HuggingFace(self,model_name:str=''):\\r\\r        try:\\r\\r            from langchain.embeddings import HuggingFaceEmbeddings\\r\\r            embeddings = HuggingFaceEmbeddings(\\r\\r                    model_name=model_name\\r\\r            )\\r\\r            return embeddings\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in HuggingFace', e)\\r\\r            raise e\\r\\r        \\r\\r    def AzureOpenAI(self,azure_openai_api_key_param:str='',azure_api_version_param:str='',azure_deployment_param:str='',model_param:str='',openai_api_base_param:str='',openai_api_type_param:str=''):\\r\\r        try:\\r\\r            from langchain.embeddings import AzureOpenAIEmbeddings\\r\\r            embeddings = AzureOpenAIEmbeddings(api_key=azure_openai_api_key_param,api_version=azure_api_version_param,azure_deployment=azure_deployment_param,model=model_param,openai_api_type=openai_api_type_param,base_url=openai_api_base_param)\\r\\r            return embeddings\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in AzureOpenAI', e)\\r\\r            raise e\\r\\r        \\r\\r    def Bedrock(self,access_id_param:str='',access_key_param:str='',region_name_param:str='',endpoint_url_param:str='',model_id_param:str=''):\\r\\r        try:\\r\\r            import boto3\\r\\r            from langchain.embeddings import BedrockEmbeddings\\r\\r            bedrock = boto3.client('bedrock-runtime',aws_access_key_id=access_id_param,aws_secret_access_key=access_key_param,region_name=region_name_param,endpoint_url=endpoint_url_param)\\r\\r            embeddings = BedrockEmbeddings(\\r\\r                model_id=model_id_param, \\r\\r                client=bedrock\\r\\r            )\\r\\r            embeddings\\r\\r            return embeddings\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in Bedrock', e)\\r\\r            raise e\\r\\r        \\r\\r    def Elastic_search(self,model_id_param:str='',es_cloud_id_param:str='',es_user_param:str='',es_password_param:str=''):\\r\\r        try:\\r\\r            from langchain.embeddings.elasticsearch import ElasticsearchEmbeddings\\r\\r            embeddings = ElasticsearchEmbeddings.from_credentials(\\r\\r                model_id=model_id_param,\\r\\r                es_cloud_id=es_cloud_id_param,\\r\\r                es_user=es_user_param,\\r\\r                es_password=es_password_param,\\r\\r            )\\r\\r            return embeddings\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in Elastic_search', e)\\r\\r            raise e""]},""position_x"":""585"",""position_y"":""272"",""connectors"":[{""type"":""target"",""endpoint"":""in"",""position"":""LeftMiddle"",""elementId"":""NdAZP"",""elementPosition"":""RightMiddle""}],""inputEndpoints"":[""in""],""outputEndpoints"":[""out""],""formats"":{""script"":""textArea""},""context"":[{""script"":[""import os\\r\\rfrom typing import List,Optional,Dict,Union,Sequence,Any\\r\\rimport json\\r\\rimport requests\\r\\r\\r\\rclass LLMInferenceConfig:\\r\\r    def __init__(self,config_json:Optional[Any]={}):\\r\\r        self.LLM_Type : Optional[str] = config_json.get('LLM_Type',\\""OnPrem\\"")\\r\\r        self.prompt_template : Optional[str] = config_json.get('prompt_template','Answer the query asked by user based on the given Context below.')\\r\\r        self.model_url : Optional[str] = config_json.get('url',\\""https://itgateway.infosys.com/ai-platform/mxtral-aic/v1/language/generate\\"")\\r\\r        self.max_tokens : Optional[int] = config_json.get('max_tokens',2000)\\r\\r        self.top_k :  Optional[int] = config_json.get('top_k',5)\\r\\r        self.top_p :  Optional[float] = config_json.get('top_p',0.25)\\r\\r        self.typical_p : Optional[float] = config_json.get('typical_p',0.25)\\r\\r        self.temperature : Optional[float] = config_json.get('temperature',0)\\r\\r        self.repetition_penalty : Optional[float] = config_json.get('repetition_penalty',None)\\r\\r        self.api_type : Optional[str] = config_json.get('api_type',\\""azure\\"")\\r\\r        self.api_base : Optional[str] = config_json.get('api_base',\\""https://azureft.openai.azure.com/\\"") \\r\\r        self.api_version : Optional[str] = config_json.get('api_version',\\""2023-03-15-preview\\"")\\r\\r        self.api_key : Optional[str] = config_json.get('api_key',os.environ.get(\\""app_openai_api_key\\""))\\r\\r        self.stop : Optional[str] = config_json.get('stop',\\""\\"")\\r\\r        self.service_name : Optional[str] = config_json.get('service_name','bedrock-runtime')\\r\\r        self.aws_access_key_id : Optional[str] = config_json.get('aws_access_key_id','')\\r\\r        self.aws_secret_access_key : Optional[str] = config_json.get('aws_secret_access_key','')\\r\\r        self.region_name : Optional[str] = config_json.get('region_name','us-east-1')\\r\\r        self.endpoint_url : Optional[str] = config_json.get('endpoint_url','https://bedrock-runtime.us-east-1.amazonaws.com')\\r\\r        self.model_id : Optional[str] = config_json.get('model_id','anthropic.claude-v2')\\r\\r        self.query : Optional[str] = config_json.get('query',\\""Hi\\"")\\r\\r        self.engine : Optional[str] = config_json.get('engine','gtp35turbo')\\r\\r        \\r\\r\\r\\rclass LLMInference:\\r\\r    def __init__(self, context):\\r\\r        self.context = context\\r\\r    \\r\\r    def Query_LLM(self,config):\\r\\r        ''' \\r\\r        Falcon40b model\\r\\r        args[]\\r\\r            prompt_template:  # Prompt template string to prepend before the input context, question and parameters\\r\\r            falcon_40b_model_url:  # URL of the Falcon 4.0b model to use\\r\\r            context:  # Context string to provide background for answering the question\\r\\r            question:  # Question string to get an answer for\\r\\r            max_tokens:  # Maximum number of tokens to generate in the answer\\r\\r            top_k:  # Sample from the top k tokens, overrides typical_p if set\\r\\r            top_p:  # Sample from the smallest possible set of tokens whose cumulative probability exceeds the probability top_p, overrides top_k if set\\r\\r            typical_p:  # Typical sampling probability, overrides top_p if set\\r\\r            temperature:  # Randomness of the sampling, higher values means more random, overrides typical_p if set\\r\\r            repetition_penalty:  # Penalty for repetitive phrases, higher values mean more diversity \\r\\r        '''\\r\\r        try:\\r\\r            if config.LLM_Type.lower() == 'falcon':\\r\\r                return self.OnPrem(context=self.context,prompt_template=config.prompt_template,falcon_40b_model_url = config.model_url,question=config.query,max_tokens=config.max_tokens,top_k=config.top_k,top_p=config.top_p,typical_p=config.typical_p,temperature=config.temperature,repetition_penalty=config.repetition_penalty)\\r\\r            elif config.LLM_Type.lower() == 'onprem':\\r\\r                return self.Mixtral(prompt_template=config.prompt_template,context=self.context,Mixtral_model_url = config.model_url,question=config.query,max_tokens=config.max_tokens,top_k=config.top_k,top_p=config.top_p,typical_p=config.typical_p,temperature=config.temperature,repetition_penalty=config.repetition_penalty)\\r\\r\\r\\r            elif config.LLM_Type.lower() == 'azureopenai':\\r\\r                '''\\r\\r                Openaimodel\\r\\r                args[]\\r\\r                engine: # Specify the AI engine/model to use for text generation\\r\\r                prompt_template:  # Prompt template string to prepend before the input context and question\\r\\r                context:  # Context string providing background information to inform the answer\\r\\r                question:  # Question string specifying the actual question to get an answer for\\r\\r                api_type:  # The type of API if using an API-based text generation engine, e.g. 'OpenAI'  \\r\\r                api_base:  # Base URL endpoint if using an API-based text generation engine \\r\\r                api_version:   # API version, e.g. 'v1'\\r\\r                api_key:  # API key for authentication if using an API-based text generation engine\\r\\r                temperature:  # Float value controlling randomness/creativity of text generation\\r\\r                max_tokens:  # Maximum number of tokens to generate in the answer\\r\\r                stop: s # String sequence to stop further text generation\\r\\r                '''        \\r\\r                return self.AzureOpenai(engine=config.engine,prompt_template=config.prompt_template,context=self.context,question=config.query,api_type=config.api_type,api_base=config.api_base,api_version=config.api_version,api_key=config.api_key,temperature=config.temperature, max_tokens=config.max_tokens, stop=config.stop, top_p=config.top_p)\\r\\r            elif config.LLM_Type.lower() == 'bedrock':\\r\\r                return self.Bedrock(service_name=config.service_name,prompt_template=config.prompt_template,question=config.query,context=self.context,aws_access_key_id=config.aws_access_key_id,aws_secret_access_key=config.aws_secret_access_key,region_name=config.region_name,endpoint_url=config.endpoint_url,temperature=config.temperature, max_tokens=config.max_tokens, top_p=config.top_p,modelId=config.model_id)\\r\\r        except Exception as e:\\r\\r            print('Exception in Query_LLM as',e)\\r\\r            raise e\\r\\r    def Mixtral(self, prompt_template:str='',Mixtral_model_url:str='',context:str='', question:str='',max_tokens:float=None, top_k:float=None, top_p:float=None, typical_p:float=None, temperature:float=None, repetition_penalty: float=None):\\r\\r        def generate_token():\\r\\r            url='https://login.microsoftonline.com/63ce7d59-2f3e-42cd-a8cc-be764cff5eb6/oauth2/token'\\r\\r            headers={\\r\\r                \\""Content-Type\\"": \\""application/x-www-form-urlencoded\\"",\\r\\r                \\""Cookie\\"":\\""fpc=Akan455tw-pPuiXfSA1sz_fwGWPkAQAAAO7xkNwOAAAA; stsservicecookie=estsfd; x-ms-gateway-slice=estsfd; fpc=Akan455tw-pPuiXfSA1sz_eqfEQzAQAAAF04ktwOAAAAEWQ-MAEAAADuOJLcDgAAAExTSTMBAAAADzmS3A4AAAA; x-ms-gateway-slice=estsfd; fpc=AjRjfSpYATNGtUVf3IhQhQ71dL7bAQAAANrZid0OAAAA\\""\\r\\r            }\\r\\r            data={\\r\\r                \\""client_id\\"":os.environ.get('app_client_id'),\\r\\r                \\""client_secret\\"":os.environ.get('app_client_secret'),\\r\\r                \\""grant_type\\"":\\""client_credentials\\"",\\r\\r                \\""scope\\"":\\""b3490b10-6bd3-4f66-908d-fa1950e46598/.default\\""\\r\\r            }\\r\\r            response = requests.request('POST', url, headers=headers, data=data, verify=False)\\r\\r            # print(\\""This is respone\\"",response.text)\\r\\r            return json.loads(response.text)[\\""access_token\\""]\\r\\r        token=generate_token()\\r\\r        auth=f'Bearer {token}'\\r\\r        generated_answer = ''\\r\\r        input_prompt = f'''{prompt_template} \\\\\\r\\\\\\rContext: '{context}'. \\\\\\r\\\\\\rQuestion: {question}. \\\\\\r\\\\\\rAnswer:'''\\r\\r        payload = json.dumps({\\r\\r        'inputs': [input_prompt],\\r\\r        'parameters': {\\r\\r                'max_new_tokens': max_tokens\\r\\r            }\\r\\r        })\\r\\r        \\r\\r        headers = {\\r\\r            'Content-Type':'application/json', \\r\\r            'Authorization' : auth\\r\\r\\r\\r        }\\r\\r        \\r\\r        response = requests.request('POST', Mixtral_model_url, headers=headers, data=payload, verify=False)\\r\\r        \\r\\r        generated_answer = json.loads(response.text)\\r\\r        generated_answer=generated_answer['generated_text']\\r\\r\\r\\r        return generated_answer   \\r\\r    def OnPrem(self, prompt_template:str='',falcon_40b_model_url:str='',context:str='', question:str='',max_tokens:float=None, top_k:float=None, top_p:float=None, typical_p:float=None, temperature:float=None, repetition_penalty: float=None):\\r\\r        try:\\r\\r            generated_answer = ''\\r\\r            input_prompt = f'''{prompt_template} \\\\\\r\\\\\\rContext: '{context}'. \\\\\\r\\\\\\rQuestion: {question}. \\\\\\r\\\\\\rAnswer:'''\\r\\r            payload = json.dumps({\\r\\r            'inputs': input_prompt,\\r\\r            'parameters': {\\r\\r                    'max_new_tokens': max_tokens,\\r\\r                    'top_k': top_k,\\r\\r                    'top_p': top_p,\\r\\r                    'typical_p': typical_p,\\r\\r                    'temperature': temperature,\\r\\r                    'repetition_penalty': repetition_penalty\\r\\r                }\\r\\r            })\\r\\r            \\r\\r            headers = {\\r\\r                'Content-Type': 'application/json' \\r\\r            }\\r\\r            \\r\\r            response = requests.request('POST', falcon_40b_model_url, headers=headers, data=payload, verify=False)\\r\\r            \\r\\r            generated_answer = json.loads(response.text)[0]['generated_text']\\r\\r\\r\\r            return generated_answer\\r\\r        \\r\\r        except Exception as e:\\r\\r            print('Exception in OnPrem as', e)\\r\\r            raise e\\r\\r    \\r\\r    def AzureOpenai(self,engine:str='',prompt_template:str='',context:str='',question:str='',api_type:str='',api_base:str='',api_version:str='',api_key:str='',temperature:float='', max_tokens:float='', stop:str='', top_p:float=''):\\r\\r        try:\\r\\r            import openai\\r\\r            openai.proxy = {'http' : 'http://blrproxy.ad.infosys.com:80','https' : 'http://blrproxy.ad.infosys.com:80'}\\r\\r            openai.api_type = api_type\\r\\r            openai.api_base = api_base\\r\\r            openai.api_version = api_version\\r\\r            openai.api_key = api_key\\r\\r            prompt = f'''{prompt_template} \\r\\rContext: '{context}'. \\r\\rQuestion: {question}. \\r\\rAnswer:'''\\r\\r            response = openai.ChatCompletion.create(engine=engine,\\r\\r                    messages = [{\\""role\\"":\\""user\\"",\\""content\\"":prompt}],\\r\\r                    temperature=temperature,\\r\\r                    max_tokens=max_tokens,\\r\\r                    top_p=top_p,\\r\\r                    stop=stop)\\r\\r            out = response[\\""choices\\""][0][\\""message\\""][\\""content\\""]\\r\\r            return out\\r\\r        except Exception as e:\\r\\r            print('Exception in AzureOpenai as', e)\\r\\r            raise e\\r\\r                \\r\\r    def Bedrock(self,service_name:str='',prompt_template:str='',question:str='',context:str='',aws_access_key_id:str='',aws_secret_access_key:str='',region_name:str='',endpoint_url:str='',max_tokens:float=None,temperature:float=None,top_p:float=None,modelId:str=''):\\r\\r        try:            \\r\\r            import boto3\\r\\r            bedrock = boto3.client(service_name=service_name,aws_access_key_id=aws_access_key_id,aws_secret_access_key=aws_secret_access_key,region_name=region_name,endpoint_url=endpoint_url)\\r\\r    \\r\\r            prompt_data = f\\""\\""\\""Human: {prompt_template} \\r\\rContext: '{context}'. \\r\\rQuestion: {question}\\r\\r            Assistant:\\""\\""\\""\\r\\r            body = json.dumps({\\r\\r                \\""prompt\\"": prompt_data,\\r\\r                \\""max_tokens_to_sample\\"":max_tokens,\\r\\r                \\""temperature\\"":temperature,\\r\\r                \\""top_p\\"":top_p\\r\\r            })\\r\\r            modelId = modelId\\r\\r            print(body)\\r\\r            response = bedrock.invoke_model(body=body, modelId=modelId)\\r\\r            response_body = json.loads(response.get('body').read())\\r\\r            outputText = response_body.get('completion')\\r\\r            return outputText\\r\\r        except Exception as e:\\r\\r            print('Exception in Bedrock as', e)\\r\\r            raise e \\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r""]},{""script"":[""import os\\r\\rfrom typing import List,Optional,Dict,Union,Sequence,Any\\r\\rimport logging as logger\\r\\rclass VectordbConfig:\\r\\r    def __init__(self,config_json:Optional[Any]={}) :\\r\\r        self.DB_Type : Optional[str] = config_json.get('DB_Type',\\""Faiss\\"")\\r\\r        self.elastic_search_url : str = config_json.get('elastic_search_url',os.environ.get('app_elastic_search_url'))\\r\\r        self.index_name : Optional[str] = config_json.get('index_name',\\""Vector_Store\\"")\\r\\r        self.qdrant_url : Optional[str] = config_json.get('qdrant_url',os.environ.get('app_ts_qdrant_url'))\\r\\r        self.force_recreate : Optional[bool] = config_json.get('force_recreate',False)\\r\\r        self.query : Optional[str] = config_json.get('query',\\""Hi, How are you?\\"")\\r\\r        self.k : Optional[int] = config_json.get('k',4)\\r        \\r        self.score : Optional[float] = config_json.get('score',0.8)\\r\\r        \\r\\rclass QueryVectorDB:\\r\\r    def __init__(self,embedding) -> None:\\r\\r        self.embeddings = embedding\\r\\r    \\r\\r    def get_similar_docs(self,config):\\r\\r        \\""\\""\\""`Meta Faiss` vector store.\\r\\r        To use, you must have the ``faiss`` python package installed.\\r\\r        Example:\\r\\r            .. code-block:: python\\r\\r                from langchain_community.embeddings.openai import OpenAIEmbeddings\\r\\r                from langchain_community.vectorstores import FAISS\\r\\r                embeddings = OpenAIEmbeddings()\\r\\r                texts = [\\""FAISS is an important library\\"", \\""LangChain supports FAISS\\""]\\r\\r                faiss = FAISS.from_texts(texts, embeddings)\\r\\r        \\""\\""\\""\\r\\r        try:\\r\\r            if config.DB_Type.lower() == 'faiss':\\r\\r                return self.get_similar_docs_faiss_db(embeddings=self.embeddings,persist_directory='/'+config.index_name,query=config.query,k=config.k)                \\r\\r            elif config.DB_Type.lower() == 'chroma':  \\r\\r                return self.get_similar_docs_chroma_db(embeddings=self.embeddings,persist_directory='/'+config.index_name,query=config.query,k=config.k)        \\r\\r            elif config.DB_Type.lower() == 'elasticsearch':                   \\r\\r                return self.get_similar_docs_elastic_db(embeddings=self.embeddings,docs=self.docs,es_url=config.elastic_search_url,index_name=config.index_name,query=config.query,k=config.k)\\t\\t    \\r\\r            elif config.DB_Type.lower() == 'qdrant':      \\r\\r                return self.get_similar_docs_qdrant_db(embeddings=self.embeddings,qdrant_url=config.qdrant_url,collection_name=config.index_name,query=config.query,k=config.k, score=config.score)\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs', e)\\r\\r            raise e\\r\\r        \\r\\r    def get_similar_docs_chroma_db(self,embeddings:Any=None,persist_directory:str=\\""\\"",query:str='',k:int=None):\\r\\r        \\""\\""\\""`ChromaDB` vector store.\\r\\r        To use, you should have the ``chromadb`` python package installed.\\r\\r        Example:\\r\\r        .. code-block:: python\\r\\r        from langchain_community.vectorstores import Chroma\\r\\r        from langchain_community.embeddings.openai import OpenAIEmbeddings\\r\\r        embeddings = OpenAIEmbeddings()\\r\\r        vectorstore = Chroma(\\""langchain_store\\"", embeddings)\\""\\""\\""\\r\\r        try:\\r\\r            from langchain_community.vectorstores import Chroma\\r\\r            db3 = Chroma(persist_directory=persist_directory, embeddings=embeddings)\\r\\r            docs = db3.similarity_search(query,k=k)\\r\\r            \\r\\r            return docs\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs_chroma_db', e)\\r\\r            raise e\\r\\r    def get_similar_docs_faiss_db(self,embeddings:Any=None,persist_directory:str=\\""\\"",query:str='',k:int=None):   \\r\\r        try:     \\r\\r            from langchain.vectorstores import FAISS\\r\\r            db = FAISS.load_local(persist_directory, embeddings,allow_dangerous_deserialization=True)\\r\\r            docs = db.similarity_search(query,k=k)\\r\\r            \\r\\r            return docs\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs_faiss_db', e)\\r\\r            raise e\\r\\r    def get_similar_docs_qdrant_db(self,qdrant_url:str='',embeddings:Any='',query:str='',collection_name:str='',k:int=None,score:float=0.80):\\r\\r        \\""\\""\\""\\r\\r        QdrantvectorDb\\r\\r        Args:[]\\r\\r            embeddings=self.embeddings, # Vector embeddings to use for similarity search\\r\\r            qdrant_url=config.qdrant_url, # URL of Qdrant search server \\r\\r            collection_name=config.index_name, # Name of indexed document collection in Qdrant \\r\\r            query=config.query # Search query text to find similar documents for\\r\\r        \\""\\""\\""\\r\\r        try:\\r\\r            from qdrant_client import QdrantClient\\r\\r            \\r\\r            \\r\\r            client = QdrantClient(url=qdrant_url)\\r\\r            if 'HuggingFaceEmbeddings' in str(type(embeddings)):\\r                from sentence_transformers import SentenceTransformer\\r\\r                model=embeddings.model_name\\r\\r                name=model.split('/')\\r\\r                encoder = SentenceTransformer(name[1])\\r\\r                query_vector=encoder.encode(query).tolist()\\r\\r            elif 'AzureOpenAIEmbeddings' in str(type(embeddings)):\\r                import openai\\r\\r                model=embeddings.deployment\\r\\r                openai.api_key = embeddings.openai_api_key\\r\\r                openai.api_version = embeddings.openai_api_version\\r\\r                openai.api_type = embeddings.openai_api_type\\r\\r                openai.api_base = embeddings.openai_api_base\\r\\r                query_vector = openai.Embedding.create(\\r\\r                engine = model,\\r\\r                input=query,\\r\\r                model=embeddings.model,\\r\\r        )['data'][0]['embedding']\\r\\r            elif 'BedrockEmbeddings' in str(type(embeddings)):\\r\\r                import json\\r\\r                model_id = embeddings.model_id\\r\\r                bedrock = embeddings.client\\r\\r                input_text = query\\r\\r                body = json.dumps({\\r\\r                    \\""inputText\\"": input_text\\r\\r                    })\\r\\r                accept = \\""application/json\\""\\r\\r                content_type = \\""application/json\\""\\r\\r                query_vector = bedrock.invoke_model(\\r\\r                    body=body, modelId=model_id, accept=accept, contentType=content_type\\r\\r                )\\r\\r                query_vector = json.loads(query_vector.get('body').read())['embedding']\\r\\r            hits = client.search(collection_name=collection_name,query_vector=query_vector,limit=k)\\r\\r            l=[]\\r\\r            for hit in hits:\\r                if hit.score>=0.5:\\r\\r                    l.append(hit.payload)   \\r            \\r                    \\r            if len(l)==0:\\r                return \\""No Related Ticket found for the input query\\""\\r            \\r\\r            return l\\r\\r        except Exception as e:  \\r\\r            logger.info('Exception in get_similar_docs_qdrant_db', e)\\r\\r            raise e\\r\\r        \\r\\r    def get_similar_docs_elastic_db(self,embeddings:Any=None,docs:Any=None,query:str='',es_url=\\""\\"",index_name=\\""\\"",k:int=None):\\r\\r        \\""\\""\\""`Elasticsearch` vector store.\\r\\r        Args:\\r\\r            index_name: Name of the Elasticsearch index to create.\\r\\r            es_url: URL of the Elasticsearch instance to connect to.\\r\\r            cloud_id: Cloud ID of the Elasticsearch instance to connect to.\\r\\r            es_user: Username to use when connecting to Elasticsearch.\\r\\r            es_password: Password to use when connecting to Elasticsearch.\\r\\r            es_api_key: API key to use when connecting to Elasticsearch.\\r\\r            es_connection: Optional pre-existing Elasticsearch connection.\\r\\r            vector_query_field: Optional. Name of the field to store\\r\\r                                the embedding vectors in.\\r\\r            query_field: Optional. Name of the field to store the texts in.\\r\\r            strategy: Optional. Retrieval strategy to use when searching the index.\\r\\r                        Defaults to ApproxRetrievalStrategy. Can be one of\\r\\r                        ExactRetrievalStrategy, ApproxRetrievalStrategy,\\r\\r                        or SparseRetrievalStrategy.\\r\\r            distance_strategy: Optional. Distance strategy to use when\\r\\r                                searching the index.\\r\\r                                Defaults to COSINE. Can be one of COSINE,\\r\\r                                    EUCLIDEAN_DISTANCE, or DOT_PRODUCT. \\r\\r        \\""\\""\\""\\r\\r        try:\\r\\r            from langchain_community.vectorstores import ElasticsearchStore\\r\\r            db = ElasticsearchStore.from_documents(\\r\\r            docs,\\r\\r            embeddings,\\r\\r            es_url=es_url,\\r\\r            index_name=index_name,\\r\\r            )\\r\\r            db.client.indices.refresh(index=index_name)\\r\\r            results = db.similarity_search(query,k=k)            \\r\\r            return results\\r\\r        except Exception as e:\\r\\r            logger.info('Exception in get_similar_docs_elastic_db', e)\\r\\r            raise e\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r\\r""]}],""codeGeneration"":{""requirements"":[],""imports"":[],""script"":""""}},{""id"":""lcqAP"",""alias"":""FlaskAPP"",""name"":""FlaskAPP"",""classname"":""FlaskAPP"",""category"":""FlaskAPP"",""attributes"":{""port"":""7100"",""script"":[""app = Flask(__name__)\\r\\r@app.route('/Ingest', methods=['POST'])\\r\\rdef custom_request_post_ingest():\\r\\r    data = request.get_json()\\r\\r    dataset_id = data.get('dataset_id','')\\r\\r    organization = data.get('organization','')\\r    \\r    collection_name_param = data.get('index_name','')\\r    \\r    url_param = data.get ('qdrant_url', os.environ.get('app_ts_qdrant_url'))\\r    \\r    counter_param = data.get('counter',1)\\r    \\r    total_rows_param = data.get('total_rows',2000)\\r    \\r    new_collection_param = data.get('new_index','true')\\r\\r    # config=data.get('config','')\\r    config={\\""DatasetExtractorConfig\\"":{\\""local_path\\"":\\""Tickets_data\\""}}\\r    \\r\\r    embedding_model_deployment_name_param = \\""openaiada2\\""\\r    azure_openai_endpoint_param = \\""https://azureft.openai.azure.com/\\""\\r\\r    # print(data)\\r    init_kernel=Addkernel()\\r    dataobj = AzureTextEmbeddingService(init_kernel,embedding_model_deployment_name_param,azure_openai_endpoint_param)\\r    \\r    datasetextractorconfig_obj = DatasetExtractorConfig(config=config['DatasetExtractorConfig'])\\r\\r    dataextractor_obj = DatasetExtractor(dataset_id, organization)\\r\\r    metadata = dataextractor_obj.get_data(datasetextractorconfig_obj)\\r   \\r    json_string =  DataPreProcessing(metadata)\\r    \\r    StoreEmbeddingsInQdrant(dataobj,json_string,collection_name_param,url_param,counter_param,total_rows_param,new_collection_param)\\r\\r\\r    answer={'Status':'Success'}\\r\\r    return jsonify(answer),200\\r\\r\\r@app.route('/Infer', methods=['POST'])\\r\\rdef custom_request_post_infer():\\r\\r    data = request.get_json()\\r\\r    # config=data.get('config','')\\r\\r    # print('config==',config)  \\r    DB_Type = data.get('DB_Type','Qdrant')\\r    query = data.get('query','Hi')\\r    index_name = data.get('index_name',data)\\r\\r    dataset_id = data.get('dataset_id', None)\\r\\r    org = data.get('organization', None)\\r\\r    print('dataset_id==', dataset_id)\\r\\r    print('org==', org)\\r    config={\\""EmbeddingConfig\\"":{\\""embedding_type\\"":\\""AzureOpenAI\\""},\\r\\""VectorStoreConfig\\"":{\\""DB_Type\\"":DB_Type,\\""query\\"":query,\\""index_name\\"":index_name},\\r\\""LLMConfig\\"":{\\""LLM_Type\\"":\\""AzureOpenAI\\"",\\""temperature\\"":0,\\""query\\"":query,\\""prompt_template\\"":\\""Human: Use the following pieces of context to provide a concise answer to the question at the end. If you dont know the answer, just say that you dont know, dont try to make up an answer{context}.For the query, if it requires drawing a table give results as a table markdown format.Question: {question}Assistant: \\"",\\""max_tokens\\"":2000}}\\r\\r\\r\\r    if dataset_id!=None and org!=None: \\r\\r        SQLEngine_obj = SQLEngine(dataset_id=dataset_id, organization=org)\\r\\r        db,metadata, connection_details = SQLEngine_obj.get_db()      \\r\\r        \\r\\r        llmdefine_obj = LLMDefine()\\r        llmdefineconfig_config = LLMDefineConfig(config_json=config['LLMConfig'])\\r        llm = llmdefine_obj.getmodel(llmdefineconfig_config)\\r\\r\\r\\r        querygeneratorconfig_obj = QueryGeneratorConfig(config_json=config['QueryGeneratorConfig'])\\r\\r        querygenerator_obj = QueryGenerator(db,llm)\\r\\r        sql_query = querygenerator_obj.get_sql_query(querygeneratorconfig_obj)        \\r\\r\\r\\r        QueryExecutorConfig_config = QueryExecutorConfig(config_json=config['QueryExecutorConfig'])\\r\\r        QueryExecutor_obj = QueryExecutor(connection_details, llm, db, sql_query, metadata)\\r\\r        \\r\\r        df, res = QueryExecutor_obj.execute_query(QueryExecutorConfig_config)\\r\\r        df={'Datafram':df.to_json()}\\r\\r        answer = {'Answer':str(res.split(\\""\\"")[0])}\\r\\r        metadata = {'Metadata': metadata}\\r\\r        return jsonify(answer,df,metadata),200        \\r\\r    else:\\r\\r        embeddingmodels_infer_obj = EmbeddingModels()\\r\\r        embedding_config_obj  = EmbeddingConfig(config['EmbeddingConfig'])\\r\\r        embeddings_out = embeddingmodels_infer_obj.get_embedding_function(embedding_config_obj)\\r\\r        vector_config_obj = VectordbConfig(config[\\""VectorStoreConfig\\""])\\r\\r        query_vector_db_obj = QueryVectorDB(embeddings_out)\\r\\r        similar_docs= query_vector_db_obj.get_similar_docs(vector_config_obj)\\r\\r        # print(similar_docs)\\r\\r        llm_config_obj = LLMInferenceConfig(config[\\""LLMConfig\\""])\\r\\r        llm_infer_obj = LLMInference(similar_docs)\\r\\r        # output = llm_infer_obj.Query_LLM(llm_config_obj)\\r# \\r        # print(output)\\r        if str(type(similar_docs[0]))!='''<class 'dict'>''':\\r            context_list=[]\\r    \\r            \\r    \\r            for i in similar_docs:\\r    \\r                d={}\\r    \\r                d[\\""page_content\\""]=i.page_content\\r    \\r                d[\\""metadata\\""]=i.metadata\\r    \\r                context_list.append(d)\\r        else:\\r            context_list=[]\\r            for i in range(len(similar_docs)):\\r                d={}\\r    \\r                d[\\""page_content\\""]=similar_docs[i][\\""_text\\""]\\r    \\r                d[\\""metadata\\""]=similar_docs[i]['_id']\\r    \\r                context_list.append(d)\\r# \\r        # print(context_list)\\r        # print(context_list)\\r        import sqlite3\\r        import os\\r        import mysql.connector\\r\\r        db_config = {\\r            \\""host\\"": \\""10.191.31.130\\"",\\r            \\""port\\"": \\""3307\\"",\\r            \\""user\\"": \\""leapadm\\"",\\r            \\""password\\"": os.environ.get('app_ts_db_password'),\\r            \\""database\\"": \\""leapmaster_ref_data_7000\\""\\r        }\\r        \\r        connection = mysql.connector.connect(**db_config)\\r        \\r        # connection.close()\\r            \\r        try:\\r            \\r            cursor=connection.cursor(buffered=True)\\r            # cursor.close()\\r            # Create a cursor object to execute SQL commands\\r            # cursor = conn.cursor()\\r    \\r            # Create a table (replace with your desired table name and columns)\\r            num_list=[]\\r            data_list=[]\\r            \\r            sql_query=\\""SHOW COLUMNS FROM leo1311_tickets\\""\\r                # cursor.execute(sql_query,(i['metadata'],))\\r            cursor.execute(sql_query)\\r            num=cursor.fetchall()\\r            for i in num:\\r                num_list.append(i[0])\\r            c=1\\r            tickets=[]\\r            final_dic={}\\r            for i in context_list:\\r                # print(type(i['metadata']))\\r                sql_query=\\""SELECT * FROM leo1311_tickets WHERE number=%s\\""\\r                # sql_query=\\""SELECT COLUMN_NAME FROM information_schema.COLUMNS WHERE table_schema = 'leapmaster_ref_data' AND TABLE_NAME = 'leo1311_tickets';\\""\\r               \\r                cursor.execute(sql_query,(i['metadata'],))\\r                data=cursor.fetchall()\\r                tickets.append(i['metadata'])\\r                # data_list.append(data)\\r                print(\\""data\\"",data[0])\\r                d={}\\r                for i in range(len(num_list)):\\r    \\r                    d[num_list[i]]=data[0][i]\\r                final_dic[c]=d\\r                c+=1\\r                \\r        \\r            \\r            # print(final_dic)\\r            import pandas as pd\\r            df=pd.DataFrame(final_dic)\\r            df=df.transpose()\\r            markdown=df.to_markdown()\\r            print(\\""data extracted successfully!....\\"")                   \\r    \\r        except sqlite3.connector.Error as err:\\r            print('Thre is some error whiling extractiong data as:',err)\\r            raise err\\r        finally:\\r            # Close database connection properly\\r            cursor.close()\\r            connection.close()\\r    \\r        answer={'Answer':f\\""There are {len(tickets)} records found with numbers - {(',').join(tickets)}\\"",\\r            \\""dataset_id\\"": \\""Tickets\\"",\\r        \\""dataset_type\\"": \\""MYSQL\\"",\\r        \\""organization\\"": \\""leo1311\\""\\r        }\\r    \\r        context = {'context':[{\\r          \\""metadata\\"": {\\r            \\""dataset_id\\"": \\""Tickets\\"",\\r            \\""data\\"":{\\""number\\"":tickets},\\r            \\""dataset_type\\"": \\""MYSQL\\"",\\r            \\""organization\\"": \\""leo1311\\"",\\r            \\""source\\"": \\""/RAG_data3_Tickets/Tickets\\""\\r          },\\""page_content\\"":pd.DataFrame(context_list).to_markdown()}]}\\r    \\r        return jsonify(answer,context),200\\r\\r        \\r\\r\\r\\r\\r@app.route('/root', methods=['GET'])\\r\\rdef custom_request_root():\\r\\r    return jsonify({\\""Message\\"":\\""Success\\""})""]},""position_x"":""805"",""position_y"":""274"",""connectors"":[],""inputEndpoints"":[],""outputEndpoints"":[],""formats"":{""port"":""integer"",""script"":""textarea""},""context"":[],""codeGeneration"":{""requirements"":[""flask""],""imports"":[""from flask import Flask,jsonify,request""],""script"":""def FlaskAPP(port_param=5000,script_param=''):\\n    app.run(debug=False, host='0.0.0.0', port = port_param)\\n\\n\\n\\n""}}],""pipeline_attributes"":[{""name"":""storageType"",""value"":""s3""},{""name"":""usedSecrets"",""value"":""app_ts_openai_api_key""},{""name"":""usedSecrets"",""value"":""app_ts_access_token""},{""name"":""usedSecrets"",""value"":""app_ts_qdrant_url""},{""name"":""usedSecrets"",""value"":""app_ts_db_password""}],""environment"":[{""name"":""API_URL"",""value"":""https://leap2:7000/""},{""name"":""no_proxy"",""value"":""10.66.15.100,victlpast02,ad.infosys.com,.infosys.com,leap2,10.0.0.0,22,10.82.210.68,infyaiplat.ad.infosys.com,10.82.53.110,10.82.210.68""},{""name"":""https_proxy"",""value"":""http://blrproxy.ad.infosys.com:80""},{""name"":""http_proxy"",""value"":""http://blrproxy.ad.infosys.com:80""},{""name"":""InstallDeps"",""value"":""False""}],""default_runtime"":""{\\""dsAlias\\"":\\""VM-38\\"",\\""dsName\\"":\\""LEOVM-3829327\\"",\\""type\\"":\\""REMOTE\\""}"",""latest_jobid"":""6c6bb993-86a4-47c6-88a3-e3fb94f283e6""}","admin","Tickets Search Azure","2024-11-14 13:59:07","LEOTCKTS89809","leo1311","SemanticKernel","27",NULL,"chain","{""505"":{""taskId"":""05a17961-6ba5-419c-b31e-e23d3d26c9e2""}}","\0","0"

