cname,filename,filescript,organization
ACMKYPHR40814,ACMKYPHR40814_leo1311.py,aW1wb3J0IHB5b2RiYwppbXBvcnQgbG9nZ2luZwppbXBvcnQgc3lzCmZyb20gdXJsbGliLnBhcnNlIGltcG9ydCBxdW90ZV9wbHVzLCB1cmxwYXJzZQpmcm9tIGxlYXAudXRpbHMuVXRpbGl0aWVzIGltcG9ydCBVdGlsaXRpZXMKZnJvbSBza2xlYXJuLmZlYXR1cmVfZXh0cmFjdGlvbi50ZXh0IGltcG9ydCBUZmlkZlZlY3Rvcml6ZXIKaW1wb3J0IG51bXB5IGFzIG5wCmltcG9ydCB0aW1laXQKaW1wb3J0IGpzb24KCmxvZ2dpbmcuYmFzaWNDb25maWcobGV2ZWw9bG9nZ2luZy5JTkZPLCBmb3JtYXQ9JyUoYXNjdGltZSlzIElORk8gJShtZXNzYWdlKXMnLCBkYXRlZm10PScleS8lbS8lZCAlSDolTTolUycpCgphcmd1bWVudHMgPSBzeXMuYXJndgoKZGljdCA9IHt9CmZvciBhcmcgaW4gYXJndW1lbnRzOgogICAgdHJ5OgogICAgICAgIGRpY3RbYXJnLnNwbGl0KCc6JylbMF1dID0gKCc6Jykuam9pbihhcmcuc3BsaXQoJzonKVsxOl0pCiAgICBleGNlcHQ6CiAgICAgICAgYSA9ICdlcnJvcicKCgpkZWYgZ2V0U2ltaWxhcihzZW50ZW5jZXMsIGtleXdvcmRzKToKICAgIGNvcnB1cyA9IHNlbnRlbmNlcyArIGtleXdvcmRzCiAgICBrZXl3b3Jkc3RhcnRJbmRleCA9IGxlbihzZW50ZW5jZXMpCiAgICB0ZmlkZkNvcnB1cyA9IFRmaWRmVmVjdG9yaXplcihtaW5fZGY9MSwgc3RvcF93b3Jkcz0nZW5nbGlzaCcpLmZpdF90cmFuc2Zvcm0oY29ycHVzKQogICAgcGFpcndpc2Vfc2ltaWxhcml0eSA9IHRmaWRmQ29ycHVzICogdGZpZGZDb3JwdXMuVAogICAgYXJyID0gcGFpcndpc2Vfc2ltaWxhcml0eS50b2FycmF5KCkKICAgIG5wLmZpbGxfZGlhZ29uYWwoYXJyLCBucC5uYW4pCiAgICByZXN1bHRzID0ge30KICAgIGZvciBzIGluIHNlbnRlbmNlczoKICAgICAgICBpbnB1dF9pZHggPSBzZW50ZW5jZXMuaW5kZXgocykKICAgICAgICByZXN1bHRfaWR4ID0gbnAubmFuYXJnbWF4KGFycltpbnB1dF9pZHhdW2tleXdvcmRzdGFydEluZGV4Ol0pCiAgICAgICAgbWF0Y2ggPSBhcnJbaW5wdXRfaWR4XVtrZXl3b3Jkc3RhcnRJbmRleCArIHJlc3VsdF9pZHhdCiAgICAgICAgciA9IGtleXdvcmRzW3Jlc3VsdF9pZHhdCiAgICAgICAgaWYgbWF0Y2ggPiAwOgogICAgICAgICAgICByZXN1bHRzW3NdID0gciArICc6JyArIHN0cihtYXRjaCkKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXN1bHRzW3NdID0gJ05PIE1BVENIOjAnCiAgICByZXR1cm4gcmVzdWx0cwoKCmxlYXBkcyA9IGRpY3RbJ0xFQVBEUyddCmxlYXBEU2RpY3QgPSBqc29uLmxvYWRzKGxlYXBkcykKCnVzZXJuYW1lID0gbGVhcERTZGljdFsndXNlck5hbWUnXQpwYXNzd29yZCA9IFV0aWxpdGllcy5kZWNyeXB0KGxlYXBEU2RpY3RbJ3Bhc3N3b3JkJ10sbGVhcERTZGljdFsnc2FsdCddKQpzZXJ2ZXIgPSB1cmxwYXJzZShsZWFwRFNkaWN0Wyd1cmwnXVs1Ol0pLm5ldGxvYy5zcGxpdCgnOycsIDEpWzBdCmRhdGFiYXNlID0gdXJscGFyc2UobGVhcERTZGljdFsndXJsJ11bNTpdKS5uZXRsb2Muc3BsaXQoJzsnLCAxKVsxXS5zcGxpdCgnPScsMSlbMV0KY29ubmVjdGlvblN0cmluZyA9ICdEUklWRVI9ezB9O1NFUlZFUj17MX07ICcgXAogICAgICAgICAgICAgICAgICAgICAgICAgICAnREFUQUJBU0U9ezJ9O1VJRD17M307UFdEPXs0fScuZm9ybWF0KAogICAgICAgICAgICAnT0RCQyBEcml2ZXIgMTcgZm9yIFNRTCBTRVJWRVInLCBzZXJ2ZXIsIGRhdGFiYXNlLCB1c2VybmFtZSwgcGFzc3dvcmQpCmNueCA9IHB5b2RiYy5jb25uZWN0KGNvbm5lY3Rpb25TdHJpbmcpCm15Y3Vyc29yID0gY254LmN1cnNvcigpClRhYmxlTmFtZSA9IGRpY3RbJ1RhYmxlTmFtZSddCkVBU0VNYXBwaW5nID0gZGljdFsnRWFzZU1hcHBpbmcnXQpzcWwgPSAnJydTRUxFQ1QgRElTVElOQ1QgVFJJTShDQVNUKGV4dHJhY3RlZF9waHJhc2UgQVMgQ0hBUikpIEFTIGV4dHJhY3RlZF9waHJhc2UgZnJvbSB7MH0gd2hlcmUgZXh0cmFjdGVkX3BocmFzZSBpcyBub3QgbnVsbCBhbmQgQ0FTVChleHRyYWN0ZWRfcGhyYXNlIGFzIGNoYXIpIDw+ICcnICAnJycuZm9ybWF0KFRhYmxlTmFtZSkKbXljdXJzb3IuZXhlY3V0ZShzcWwpCnJlc3VsdHMgPSBteWN1cnNvci5mZXRjaGFsbCgpCm15Y3Vyc29yLmNsb3NlKCkKcGhyYXNlcyA9IFtdCmZvciBpdGVtIGluIHJlc3VsdHM6CiAgICBwaHJhc2VzLmFwcGVuZChpdGVtWzBdKQoKbXljdXJzb3IyID0gY254LmN1cnNvcigpCnNxbCA9ICcnJ1NFTEVDVCBESVNUSU5DVCBLZXlfV29yZCBmcm9tIHswfScnJy5mb3JtYXQoRUFTRU1hcHBpbmcpCm15Y3Vyc29yMi5leGVjdXRlKHNxbCkKcmVzdWx0cyA9IG15Y3Vyc29yMi5mZXRjaGFsbCgpCmtleXdvcmRzID0gW10KZm9yIGl0ZW0gaW4gcmVzdWx0czoKICAgIGtleXdvcmRzLmFwcGVuZChpdGVtWzBdKQpteWN1cnNvcjIuY2xvc2UoKQoKY254LmNsb3NlKCkKCgpkZWYgZ2V0RUFTRSh0dXApOgogICAgdHJ5OgogICAgICAgIHJlc3VsdHMgPSBnZXRTaW1pbGFyKHR1cFswXSwgdHVwWzFdKQogICAgICAgIFRhYmxlTmFtZSA9IGRpY3RbJ1RhYmxlTmFtZSddCiAgICAgICAgcXVlcnkgPSAnJydVcGRhdGUgezB9IHNldCBtYXBwZWRfcGhyYXNlID0gPyAsIG1hcHBlZF9waHJhc2VfY29uZmlkZW5uY2UgPSA/ICB3aGVyZSBUUklNKENBU1QoZXh0cmFjdGVkX3BocmFzZSBBUyBDSEFSKSkgPSA/ICcnJy5mb3JtYXQoVGFibGVOYW1lKQogICAgICAgIGlucHV0ZGF0YSA9IFtdCiAgICAgICAgZm9yIHBhdHRlcm4gaW4gcmVzdWx0cy5rZXlzKCk6CiAgICAgICAgICAgIGt3ID0gcmVzdWx0c1twYXR0ZXJuXS5zcGxpdCgnOicpWzBdCiAgICAgICAgICAgIHNjb3JlID0gcmVzdWx0c1twYXR0ZXJuXS5zcGxpdCgnOicpWy0xXQogICAgICAgICAgICBpZiBrdyAhPSAnTk8gTUFUQ0gnOgogICAgICAgICAgICAgICAgaW5wdXRkYXRhLmFwcGVuZCgoa3csIHNjb3JlLCBwYXR0ZXJuKSkKICAgICAgICAKICAgICAgICBjb25uZWN0aW9uU3RyaW5nID0gJ0RSSVZFUj17MH07U0VSVkVSPXsxfTsgJyBcCiAgICAgICAgICAgICAgICAgICAgICAgICAgICdEQVRBQkFTRT17Mn07VUlEPXszfTtQV0Q9ezR9Jy5mb3JtYXQoCiAgICAgICAgICAgICdPREJDIERyaXZlciAxNyBmb3IgU1FMIFNFUlZFUicsIHR1cFs0XSwgdHVwWzVdLCB0dXBbMl0sIHR1cFszXSkKICAgICAgICBjbnggPSBweW9kYmMuY29ubmVjdChjb25uZWN0aW9uU3RyaW5nKQogICAgICAgIG15Y3Vyc29yID0gY254LmN1cnNvcigpCiAgICAgICAgcmVzID0gbXljdXJzb3IuZXhlY3V0ZW1hbnkocXVlcnksIGlucHV0ZGF0YSkKICAgICAgICBjbnguY29tbWl0KCkKICAgICAgICBteWN1cnNvci5jbG9zZSgpCiAgICAgICAgY254LmNsb3NlKCkKICAgICAgICByZXR1cm4gVHJ1ZQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBleDoKICAgICAgICBsb2dnaW5nLndhcm5pbmcoZXgpCiAgICAgICAgcmV0dXJuIEZhbHNlCgoKZnJvbSBtdWx0aXByb2Nlc3NpbmcuZHVtbXkgaW1wb3J0IFBvb2wgYXMgVGhyZWFkUG9vbAoKYXV4X3ZhbCA9IFtdCnRvdGFsbGVuID0gbGVuKHBocmFzZXMpCmxvZ2dpbmcuaW5mbygnVG90YWwgUmVjb3JkczogezB9Jy5mb3JtYXQodG90YWxsZW4pKQpzdGFydCA9IDAKc3RlcCA9IDEwMDAKZm9yIGkgaW4gcmFuZ2Uoc3RhcnQsIHRvdGFsbGVuLCBzdGVwKToKICAgIHN0b3AgPSBpICsgc3RlcAogICAgaWYgKHN0b3AgPiB0b3RhbGxlbik6CiAgICAgICAgc3RvcCA9IHRvdGFsbGVuCiAgICB0cnk6CiAgICAgICAgYXV4X3ZhbC5hcHBlbmQoKHBocmFzZXNbaTpzdG9wXSwga2V5d29yZHMsIHVzZXJuYW1lLCBwYXNzd29yZCwgc2VydmVyLCBkYXRhYmFzZSkpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgbG9nZ2luZy5pbmZvKGUpCgpwb29sID0gVGhyZWFkUG9vbCg0KQpsb2dnaW5nLmluZm8obGVuKGF1eF92YWwpKQpsb2dnaW5nLmluZm8oJ1N0YXJ0aW5nIFByb2Nlc3MnKQoKbWFwZGF0YSA9IHBvb2wubWFwKGdldEVBU0UsIGF1eF92YWwpCgpsb2dnaW5nLmluZm8oJ0NvbXBsZXRlZCcpCgoKCgoKCgo=,leo1311
